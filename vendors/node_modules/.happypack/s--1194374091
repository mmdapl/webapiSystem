'use strict';

exports.__esModule = true;

var _affix = require('antd/lib/affix');

var _affix2 = _interopRequireDefault(_affix);

var _switch = require('antd/lib/switch');

var _switch2 = _interopRequireDefault(_switch);

var _button = require('antd/lib/button');

var _button2 = _interopRequireDefault(_button);

var _tooltip = require('antd/lib/tooltip');

var _tooltip2 = _interopRequireDefault(_tooltip);

var _modal = require('antd/lib/modal');

var _modal2 = _interopRequireDefault(_modal);

var _autoComplete = require('antd/lib/auto-complete');

var _autoComplete2 = _interopRequireDefault(_autoComplete);

var _row = require('antd/lib/row');

var _row2 = _interopRequireDefault(_row);

var _col = require('antd/lib/col');

var _col2 = _interopRequireDefault(_col);

var _icon = require('antd/lib/icon');

var _icon2 = _interopRequireDefault(_icon);

var _extends3 = require('babel-runtime/helpers/extends');

var _extends4 = _interopRequireDefault(_extends3);

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _message2 = require('antd/lib/message');

var _message3 = _interopRequireDefault(_message2);

var _assign = require('babel-runtime/core-js/object/assign');

var _assign2 = _interopRequireDefault(_assign);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _keys = require('babel-runtime/core-js/object/keys');

var _keys2 = _interopRequireDefault(_keys);

var _radio = require('antd/lib/radio');

var _radio2 = _interopRequireDefault(_radio);

var _select = require('antd/lib/select');

var _select2 = _interopRequireDefault(_select);

var _form = require('antd/lib/form');

var _form2 = _interopRequireDefault(_form);

var _input = require('antd/lib/input');

var _input2 = _interopRequireDefault(_input);

var _stringify = require('babel-runtime/core-js/json/stringify');

var _stringify2 = _interopRequireDefault(_stringify);

var _typeof2 = require('babel-runtime/helpers/typeof');

var _typeof3 = _interopRequireDefault(_typeof2);

var _tabs = require('antd/lib/tabs');

var _tabs2 = _interopRequireDefault(_tabs);

var _dec, _class, _class2, _temp;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reactRedux = require('react-redux');

var _underscore = require('underscore');

var _underscore2 = _interopRequireDefault(_underscore);

var _variable = require('../../../../constants/variable.js');

var _variable2 = _interopRequireDefault(_variable);

var _common = require('../../../../common.js');

var _interface = require('../../../../reducer/modules/interface.js');

var _json = require('json5');

var _json2 = _interopRequireDefault(_json);

var _EasyDragSort = require('../../../../components/EasyDragSort/EasyDragSort.js');

var _EasyDragSort2 = _interopRequireDefault(_EasyDragSort);

var _mockEditor = require('../../../../components/AceEditor/mockEditor');

var _mockEditor2 = _interopRequireDefault(_mockEditor);

var _AceEditor = require('../../../../components/AceEditor/AceEditor');

var _AceEditor2 = _interopRequireDefault(_AceEditor);

var _axios = require('axios');

var _axios2 = _interopRequireDefault(_axios);

var _tuiEditorEditorAllMin = require('../../../../../common/tui-editor/dist/tui-editor-Editor-all.min.js');

var _tuiEditorEditorAllMin2 = _interopRequireDefault(_tuiEditorEditorAllMin);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var jSchema = require('json-schema-editor-visual');
var ResBodySchema = jSchema({ lang: 'zh_CN', mock: _variable.MOCK_SOURCE });
var ReqBodySchema = jSchema({ lang: 'zh_CN', mock: _variable.MOCK_SOURCE });
var TabPane = _tabs2.default.TabPane;

require('../../../../../common/tui-editor/dist/tui-editor.min.css'); // editor ui
require('../../../../../common/tui-editor/dist/tui-editor-contents.min.css'); // editor content
require('./editor.css');

function checkIsJsonSchema(json) {
  try {
    json = _json2.default.parse(json);
    if (json.properties && (0, _typeof3.default)(json.properties) === 'object' && !json.type) {
      json.type = 'object';
    }
    if (json.items && (0, _typeof3.default)(json.items) === 'object' && !json.type) {
      json.type = 'array';
    }
    if (!json.type) {
      return false;
    }
    json.type = json.type.toLowerCase();
    var types = ['object', 'string', 'number', 'array', 'boolean', 'integer'];
    if (types.indexOf(json.type) === -1) {
      return false;
    }
    return (0, _stringify2.default)(json);
  } catch (e) {
    return false;
  }
}

var EditFormContext = void 0;
var validJson = function validJson(json) {
  try {
    _json2.default.parse(json);
    return true;
  } catch (e) {
    return false;
  }
};

var Json5Example = '\n  {\n    /**\n     * info\n     */\n\n    "id": 1 //appId\n  }\n\n';

var TextArea = _input2.default.TextArea;
var FormItem = _form2.default.Item;
var Option = _select2.default.Option;
var InputGroup = _input2.default.Group;
var RadioButton = _radio2.default.Button;
var RadioGroup = _radio2.default.Group;
var dataTpl = {
  req_query: { name: '', required: '1', desc: '', example: '' },
  req_headers: { name: '', required: '1', desc: '', example: '' },
  req_params: { name: '', desc: '', example: '' },
  req_body_form: {
    name: '',
    type: 'text',
    required: '1',
    desc: '',
    example: ''
  }
};

var HTTP_METHOD = _variable2.default.HTTP_METHOD;
var HTTP_METHOD_KEYS = (0, _keys2.default)(HTTP_METHOD);
var HTTP_REQUEST_HEADER = _variable2.default.HTTP_REQUEST_HEADER;

var InterfaceEditForm = (_dec = (0, _reactRedux.connect)(function (state) {
  return {
    custom_field: state.group.field,
    projectMsg: state.project.currProject
  };
}, {
  changeEditStatus: _interface.changeEditStatus
}), _dec(_class = (_temp = _class2 = function (_Component) {
  (0, _inherits3.default)(InterfaceEditForm, _Component);

  InterfaceEditForm.prototype.initState = function initState(curdata) {
    this.startTime = new Date().getTime();
    if (curdata.req_query && curdata.req_query.length === 0) {
      delete curdata.req_query;
    }
    if (curdata.req_headers && curdata.req_headers.length === 0) {
      delete curdata.req_headers;
    }
    if (curdata.req_body_form && curdata.req_body_form.length === 0) {
      delete curdata.req_body_form;
    }
    if (curdata.req_params && curdata.req_params.length === 0) {
      delete curdata.req_params;
    }
    if (curdata.req_body_form) {
      curdata.req_body_form = curdata.req_body_form.map(function (item) {
        item.type = item.type === 'text' ? 'text' : 'file';
        return item;
      });
    }
    // 设置标签的展开与折叠
    curdata['hideTabs'] = {
      req: {
        body: 'hide',
        query: 'hide',
        headers: 'hide'
      }
    };
    curdata['hideTabs']['req'][HTTP_METHOD[curdata.method].default_tab] = '';
    return (0, _assign2.default)({
      submitStatus: false,
      title: '',
      path: '',
      status: 'undone',
      method: 'get',

      req_params: [],

      req_query: [{
        name: '',
        desc: '',
        required: '1'
      }],

      req_headers: [{
        name: '',
        value: '',
        required: '1'
      }],

      req_body_type: 'form',
      req_body_form: [{
        name: '',
        type: 'text',
        required: '1'
      }],
      req_body_other: '',

      res_body_type: 'json',
      res_body: '',
      desc: '',
      res_body_mock: '',
      jsonType: 'tpl',
      mockUrl: this.props.mockUrl,
      req_radio_type: 'req-query',
      custom_field_value: '',
      api_opened: false,
      visible: false
    }, curdata);
  };

  function InterfaceEditForm(props) {
    var _this2 = this;

    (0, _classCallCheck3.default)(this, InterfaceEditForm);

    var _this = (0, _possibleConstructorReturn3.default)(this, _Component.call(this, props));

    _this.handleSubmit = function (e) {
      e.preventDefault();
      _this.setState({
        submitStatus: true
      });
      try {
        _this.props.form.validateFields(function (err, values) {
          setTimeout(function () {
            if (_this._isMounted) {
              _this.setState({
                submitStatus: false
              });
            }
          }, 3000);
          if (!err) {
            values.desc = _this.editor.getHtml();
            values.markdown = _this.editor.getMarkdown();
            if (values.res_body_type === 'json') {
              if (_this.state.res_body && validJson(_this.state.res_body) === false) {
                return _message3.default.error('返回body json格式有问题，请检查！');
              }
              try {
                values.res_body = (0, _stringify2.default)(JSON.parse(_this.state.res_body), null, '   ');
              } catch (e) {
                values.res_body = _this.state.res_body;
              }
            }
            if (values.req_body_type === 'json') {
              if (_this.state.req_body_other && validJson(_this.state.req_body_other) === false) {
                return _message3.default.error('响应Body json格式有问题，请检查！');
              }
              try {
                values.req_body_other = (0, _stringify2.default)(JSON.parse(_this.state.req_body_other), null, '   ');
              } catch (e) {
                values.req_body_other = _this.state.req_body_other;
              }
            }

            values.method = _this.state.method;
            values.req_params = values.req_params || [];
            values.req_headers = values.req_headers || [];
            values.req_body_form = values.req_body_form || [];
            var isfile = false,
                isHavaContentType = false;
            if (values.req_body_type === 'form') {
              values.req_body_form.forEach(function (item) {
                if (item.type === 'file') {
                  isfile = true;
                }
              });

              values.req_headers.map(function (item) {
                if (item.name === 'Content-Type') {
                  item.value = isfile ? 'multipart/form-data' : 'application/x-www-form-urlencoded';
                  isHavaContentType = true;
                }
              });
              if (isHavaContentType === false) {
                values.req_headers.unshift({
                  name: 'Content-Type',
                  value: isfile ? 'multipart/form-data' : 'application/x-www-form-urlencoded'
                });
              }
            } else if (values.req_body_type === 'json') {
              values.req_headers ? values.req_headers.map(function (item) {
                if (item.name === 'Content-Type') {
                  item.value = 'application/json';
                  isHavaContentType = true;
                }
              }) : [];
              if (isHavaContentType === false) {
                values.req_headers = values.req_headers || [];
                values.req_headers.unshift({
                  name: 'Content-Type',
                  value: 'application/json'
                });
              }
            }
            values.req_headers = values.req_headers ? values.req_headers.filter(function (item) {
              return item.name !== '';
            }) : [];

            values.req_body_form = values.req_body_form ? values.req_body_form.filter(function (item) {
              return item.name !== '';
            }) : [];
            values.req_params = values.req_params ? values.req_params.filter(function (item) {
              return item.name !== '';
            }) : [];
            values.req_query = values.req_query ? values.req_query.filter(function (item) {
              return item.name !== '';
            }) : [];

            if (HTTP_METHOD[values.method].request_body !== true) {
              values.req_body_form = [];
            }

            if (values.req_body_is_json_schema && values.req_body_other && values.req_body_type === 'json') {
              values.req_body_other = checkIsJsonSchema(values.req_body_other);
              if (!values.req_body_other) {
                return _message3.default.error('请求参数 json-schema 格式有误');
              }
            }
            if (values.res_body_is_json_schema && values.res_body && values.res_body_type === 'json') {
              values.res_body = checkIsJsonSchema(values.res_body);
              if (!values.res_body) {
                return _message3.default.error('返回数据 json-schema 格式有误');
              }
            }

            _this.props.onSubmit(values);
            EditFormContext.props.changeEditStatus(false);
          }
        });
      } catch (e) {
        console.error(e.message);
        _this.setState({
          submitStatus: false
        });
      }
    };

    _this.onChangeMethod = function (val) {
      var radio = [];
      if (HTTP_METHOD[val].request_body) {
        radio = ['req', 'body'];
      } else {
        radio = ['req', 'query'];
      }
      _this.setState({
        req_radio_type: radio.join('-')
      });

      _this.setState({ method: val }, function () {
        _this._changeRadioGroup(radio[0], radio[1]);
      });
    };

    _this.addParams = function (name, data) {
      var newValue = {};
      data = data || dataTpl[name];
      newValue[name] = [].concat(_this.state[name], data);
      _this.setState(newValue);
    };

    _this.delParams = function (key, name) {
      var curValue = _this.props.form.getFieldValue(name);
      var newValue = {};
      newValue[name] = curValue.filter(function (val, index) {
        return index !== key;
      });
      _this.props.form.setFieldsValue(newValue);
      _this.setState(newValue);
    };

    _this.handleMockPreview = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee() {
      var str, schema, result;
      return _regenerator2.default.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              str = '';
              _context.prev = 1;

              if (!_this.props.form.getFieldValue('res_body_is_json_schema')) {
                _context.next = 8;
                break;
              }

              schema = _json2.default.parse(_this.props.form.getFieldValue('res_body'));
              _context.next = 6;
              return _axios2.default.post('/api/interface/schema2json', {
                schema: schema
              });

            case 6:
              result = _context.sent;
              return _context.abrupt('return', _this.mockPreview.setValue((0, _stringify2.default)(result.data)));

            case 8:
              if (_this.resBodyEditor.editor.curData.format === true) {
                str = (0, _stringify2.default)(_this.resBodyEditor.editor.curData.mockData(), null, '  ');
              } else {
                str = '解析出错: ' + _this.resBodyEditor.editor.curData.format;
              }
              _context.next = 14;
              break;

            case 11:
              _context.prev = 11;
              _context.t0 = _context['catch'](1);

              str = '解析出错: ' + _context.t0.message;

            case 14:
              _this.mockPreview.setValue(str);

            case 15:
            case 'end':
              return _context.stop();
          }
        }
      }, _callee, _this2, [[1, 11]]);
    }));

    _this.handleJsonType = function (key) {
      key = key || 'tpl';
      if (key === 'preview') {
        _this.handleMockPreview();
      }
      _this.setState({
        jsonType: key
      });
    };

    _this.handlePath = function (e) {
      var val = e.target.value,
          queue = [];

      var insertParams = function insertParams(name) {
        var findExist = _underscore2.default.find(_this.state.req_params, { name: name });
        if (findExist) {
          queue.push(findExist);
        } else {
          queue.push({ name: name, desc: '' });
        }
      };
      val = (0, _common.handlePath)(val);
      _this.props.form.setFieldsValue({
        path: val
      });
      if (val && val.indexOf(':') !== -1) {
        var paths = val.split('/'),
            name = void 0,
            i = void 0;
        for (i = 1; i < paths.length; i++) {
          if (paths[i][0] === ':') {
            name = paths[i].substr(1);
            insertParams(name);
          }
        }
      }

      if (val && val.length > 3) {
        val.replace(/\{(.+?)\}/g, function (str, match) {
          insertParams(match);
        });
      }

      _this.setState({
        req_params: queue
      });
    };

    _this.changeRadioGroup = function (e) {
      var res = e.target.value.split('-');
      if (res[0] === 'req') {
        _this.setState({
          req_radio_type: e.target.value
        });
      }
      _this._changeRadioGroup(res[0], res[1]);
    };

    _this._changeRadioGroup = function (group, item) {
      var _extends2;

      var obj = {};
      // 先全部隐藏
      for (var key in _this.state.hideTabs[group]) {
        obj[key] = 'hide';
      }
      // 再取消选中项目的隐藏
      obj[item] = '';
      _this.setState({
        hideTabs: (0, _extends4.default)({}, _this.state.hideTabs, (_extends2 = {}, _extends2[group] = obj, _extends2))
      });
    };

    _this.handleDragMove = function (name) {
      return function (data) {
        var _newValue;

        var newValue = (_newValue = {}, _newValue[name] = data, _newValue);
        _this.props.form.setFieldsValue(newValue);
        _this.setState(newValue);
      };
    };

    _this.handleResBody = function (d) {
      var initResBody = _this.state.res_body;
      _this.setState({
        res_body: d.text
      });
      EditFormContext.props.changeEditStatus(initResBody !== d.text);
    };

    _this.handleReqBody = function (d) {
      var initReqBody = _this.state.req_body_other;
      _this.setState({
        req_body_other: d.text
      });
      EditFormContext.props.changeEditStatus(initReqBody !== d.text);
    };

    _this.handleBulkOk = function () {
      var _this$setState;

      var curValue = _this.props.form.getFieldValue(_this.state.bulkName);
      // { name: '', required: '1', desc: '', example: '' }
      var newValue = [];

      _this.state.bulkValue.split('\n').forEach(function (item, index) {
        var valueItem = (0, _assign2.default)({}, curValue[index] || dataTpl[_this.state.bulkName]);
        valueItem.name = item.split(':')[0];
        valueItem.example = item.split(':')[1] || '';
        newValue.push(valueItem);
      });

      _this.setState((_this$setState = {
        visible: false,
        bulkValue: null,
        bulkName: null
      }, _this$setState[_this.state.bulkName] = newValue, _this$setState));
    };

    _this.handleBulkCancel = function () {
      _this.setState({
        visible: false,
        bulkValue: null,
        bulkName: null
      });
    };

    _this.showBulk = function (name) {
      var value = _this.props.form.getFieldValue(name);

      var bulkValue = '';
      value.forEach(function (item) {
        return bulkValue += item.name ? item.name + ':' + (item.example || '') + '\n' : '';
      });

      _this.setState({
        visible: true,
        bulkValue: bulkValue,
        bulkName: name
      });
    };

    _this.handleBulkValueInput = function (e) {
      _this.setState({
        bulkValue: e.target.value
      });
    };

    var curdata = _this.props.curdata;
    // console.log('custom_field1', this.props.custom_field);

    _this.state = _this.initState(curdata);
    return _this;
  }

  InterfaceEditForm.prototype.componentDidMount = function componentDidMount() {
    EditFormContext = this;
    this._isMounted = true;
    this.setState({
      req_radio_type: HTTP_METHOD[this.state.method].request_body ? 'req-body' : 'req-query'
    });

    this.mockPreview = (0, _mockEditor2.default)({
      container: 'mock-preview',
      data: '',
      readOnly: true
    });

    this.editor = new _tuiEditorEditorAllMin2.default({
      el: document.querySelector('#desc'),
      initialEditType: 'wysiwyg',
      height: '500px',
      initialValue: this.state.markdown || this.state.desc
    });
  };

  InterfaceEditForm.prototype.componentWillUnmount = function componentWillUnmount() {
    EditFormContext.props.changeEditStatus(false);
    EditFormContext = null;
    this._isMounted = false;
  };

  // 点击切换radio


  // 处理res_body Editor


  // 处理 req_body_other Editor


  // 处理批量导入参数


  // 取消批量导入参数


  InterfaceEditForm.prototype.render = function render() {
    var _this3 = this;

    var getFieldDecorator = this.props.form.getFieldDecorator;
    var _props = this.props,
        custom_field = _props.custom_field,
        projectMsg = _props.projectMsg;


    var formItemLayout = {
      labelCol: { span: 4 },
      wrapperCol: { span: 18 }
    };

    var res_body_use_schema_editor = checkIsJsonSchema(this.state.res_body) || '';

    var req_body_other_use_schema_editor = checkIsJsonSchema(this.state.req_body_other) || '';

    var queryTpl = function queryTpl(data, index) {
      return _react2.default.createElement(
        _row2.default,
        { key: index, className: 'interface-edit-item-content' },
        _react2.default.createElement(
          _col2.default,
          {
            span: '1',
            easy_drag_sort_child: 'true',
            className: 'interface-edit-item-content-col interface-edit-item-content-col-drag'
          },
          _react2.default.createElement(_icon2.default, { type: 'bars' })
        ),
        _react2.default.createElement(
          _col2.default,
          { span: '4', draggable: 'false', className: 'interface-edit-item-content-col' },
          getFieldDecorator('req_query[' + index + '].name', {
            initialValue: data.name
          })(_react2.default.createElement(_input2.default, { placeholder: '\u53C2\u6570\u540D\u79F0' }))
        ),
        _react2.default.createElement(
          _col2.default,
          { span: '3', className: 'interface-edit-item-content-col' },
          getFieldDecorator('req_query[' + index + '].required', {
            initialValue: data.required
          })(_react2.default.createElement(
            _select2.default,
            null,
            _react2.default.createElement(
              Option,
              { value: '1' },
              '\u5FC5\u9700'
            ),
            _react2.default.createElement(
              Option,
              { value: '0' },
              '\u975E\u5FC5\u9700'
            )
          ))
        ),
        _react2.default.createElement(
          _col2.default,
          { span: '6', className: 'interface-edit-item-content-col' },
          getFieldDecorator('req_query[' + index + '].example', {
            initialValue: data.example
          })(_react2.default.createElement(TextArea, { autosize: true, placeholder: '\u53C2\u6570\u793A\u4F8B' }))
        ),
        _react2.default.createElement(
          _col2.default,
          { span: '9', className: 'interface-edit-item-content-col' },
          getFieldDecorator('req_query[' + index + '].desc', {
            initialValue: data.desc
          })(_react2.default.createElement(TextArea, { autosize: true, placeholder: '\u5907\u6CE8' }))
        ),
        _react2.default.createElement(
          _col2.default,
          { span: '1', className: 'interface-edit-item-content-col' },
          _react2.default.createElement(_icon2.default, {
            type: 'delete',
            className: 'interface-edit-del-icon',
            onClick: function onClick() {
              return _this3.delParams(index, 'req_query');
            }
          })
        )
      );
    };

    var headerTpl = function headerTpl(data, index) {
      return _react2.default.createElement(
        _row2.default,
        { key: index, className: 'interface-edit-item-content' },
        _react2.default.createElement(
          _col2.default,
          {
            span: '1',
            easy_drag_sort_child: 'true',
            className: 'interface-edit-item-content-col interface-edit-item-content-col-drag'
          },
          _react2.default.createElement(_icon2.default, { type: 'bars' })
        ),
        _react2.default.createElement(
          _col2.default,
          { span: '4', className: 'interface-edit-item-content-col' },
          getFieldDecorator('req_headers[' + index + '].name', {
            initialValue: data.name
          })(_react2.default.createElement(_autoComplete2.default, {
            dataSource: HTTP_REQUEST_HEADER,
            filterOption: function filterOption(inputValue, option) {
              return option.props.children.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1;
            },
            placeholder: '\u53C2\u6570\u540D\u79F0'
          }))
        ),
        _react2.default.createElement(
          _col2.default,
          { span: '5', className: 'interface-edit-item-content-col' },
          getFieldDecorator('req_headers[' + index + '].value', {
            initialValue: data.value
          })(_react2.default.createElement(_input2.default, { placeholder: '\u53C2\u6570\u503C' }))
        ),
        _react2.default.createElement(
          _col2.default,
          { span: '5', className: 'interface-edit-item-content-col' },
          getFieldDecorator('req_headers[' + index + '].example', {
            initialValue: data.example
          })(_react2.default.createElement(TextArea, { autosize: true, placeholder: '\u53C2\u6570\u793A\u4F8B' }))
        ),
        _react2.default.createElement(
          _col2.default,
          { span: '8', className: 'interface-edit-item-content-col' },
          getFieldDecorator('req_headers[' + index + '].desc', {
            initialValue: data.desc
          })(_react2.default.createElement(TextArea, { autosize: true, placeholder: '\u5907\u6CE8' }))
        ),
        _react2.default.createElement(
          _col2.default,
          { span: '1', className: 'interface-edit-item-content-col' },
          _react2.default.createElement(_icon2.default, {
            type: 'delete',
            className: 'interface-edit-del-icon',
            onClick: function onClick() {
              return _this3.delParams(index, 'req_headers');
            }
          })
        )
      );
    };

    var requestBodyTpl = function requestBodyTpl(data, index) {
      return _react2.default.createElement(
        _row2.default,
        { key: index, className: 'interface-edit-item-content' },
        _react2.default.createElement(
          _col2.default,
          {
            span: '1',
            easy_drag_sort_child: 'true',
            className: 'interface-edit-item-content-col interface-edit-item-content-col-drag'
          },
          _react2.default.createElement(_icon2.default, { type: 'bars' })
        ),
        _react2.default.createElement(
          _col2.default,
          { span: '4', className: 'interface-edit-item-content-col' },
          getFieldDecorator('req_body_form[' + index + '].name', {
            initialValue: data.name
          })(_react2.default.createElement(_input2.default, { placeholder: 'name' }))
        ),
        _react2.default.createElement(
          _col2.default,
          { span: '3', className: 'interface-edit-item-content-col' },
          getFieldDecorator('req_body_form[' + index + '].type', {
            initialValue: data.type
          })(_react2.default.createElement(
            _select2.default,
            null,
            _react2.default.createElement(
              Option,
              { value: 'text' },
              'text'
            ),
            _react2.default.createElement(
              Option,
              { value: 'file' },
              'file'
            )
          ))
        ),
        _react2.default.createElement(
          _col2.default,
          { span: '3', className: 'interface-edit-item-content-col' },
          getFieldDecorator('req_body_form[' + index + '].required', {
            initialValue: data.required
          })(_react2.default.createElement(
            _select2.default,
            null,
            _react2.default.createElement(
              Option,
              { value: '1' },
              '\u5FC5\u9700'
            ),
            _react2.default.createElement(
              Option,
              { value: '0' },
              '\u975E\u5FC5\u9700'
            )
          ))
        ),
        _react2.default.createElement(
          _col2.default,
          { span: '5', className: 'interface-edit-item-content-col' },
          getFieldDecorator('req_body_form[' + index + '].example', {
            initialValue: data.example
          })(_react2.default.createElement(TextArea, { autosize: true, placeholder: '\u53C2\u6570\u793A\u4F8B' }))
        ),
        _react2.default.createElement(
          _col2.default,
          { span: '7', className: 'interface-edit-item-content-col' },
          getFieldDecorator('req_body_form[' + index + '].desc', {
            initialValue: data.desc
          })(_react2.default.createElement(TextArea, { autosize: true, placeholder: '\u5907\u6CE8' }))
        ),
        _react2.default.createElement(
          _col2.default,
          { span: '1', className: 'interface-edit-item-content-col' },
          _react2.default.createElement(_icon2.default, {
            type: 'delete',
            className: 'interface-edit-del-icon',
            onClick: function onClick() {
              return _this3.delParams(index, 'req_body_form');
            }
          })
        )
      );
    };

    var paramsTpl = function paramsTpl(data, index) {
      return _react2.default.createElement(
        _row2.default,
        { key: index, className: 'interface-edit-item-content' },
        _react2.default.createElement(
          _col2.default,
          { span: '6', className: 'interface-edit-item-content-col' },
          getFieldDecorator('req_params[' + index + '].name', {
            initialValue: data.name
          })(_react2.default.createElement(_input2.default, { disabled: true, placeholder: '\u53C2\u6570\u540D\u79F0' }))
        ),
        _react2.default.createElement(
          _col2.default,
          { span: '7', className: 'interface-edit-item-content-col' },
          getFieldDecorator('req_params[' + index + '].example', {
            initialValue: data.example
          })(_react2.default.createElement(TextArea, { autosize: true, placeholder: '\u53C2\u6570\u793A\u4F8B' }))
        ),
        _react2.default.createElement(
          _col2.default,
          { span: '11', className: 'interface-edit-item-content-col' },
          getFieldDecorator('req_params[' + index + '].desc', {
            initialValue: data.desc
          })(_react2.default.createElement(TextArea, { autosize: true, placeholder: '\u5907\u6CE8' }))
        )
      );
    };

    var paramsList = this.state.req_params.map(function (item, index) {
      return paramsTpl(item, index);
    });

    var QueryList = this.state.req_query.map(function (item, index) {
      return queryTpl(item, index);
    });

    var headerList = this.state.req_headers ? this.state.req_headers.map(function (item, index) {
      return headerTpl(item, index);
    }) : [];

    var requestBodyList = this.state.req_body_form.map(function (item, index) {
      return requestBodyTpl(item, index);
    });

    var DEMOPATH = '/api/user/{id}';

    return _react2.default.createElement(
      'div',
      null,
      _react2.default.createElement(
        _modal2.default,
        {
          title: '\u6279\u91CF\u6DFB\u52A0\u53C2\u6570',
          width: 680,
          visible: this.state.visible,
          onOk: this.handleBulkOk,
          onCancel: this.handleBulkCancel,
          okText: '\u5BFC\u5165'
        },
        _react2.default.createElement(
          'div',
          null,
          _react2.default.createElement(TextArea, {
            placeholder: '\u6BCF\u884C\u4E00\u4E2Aname:examples',
            autosize: { minRows: 6, maxRows: 10 },
            value: this.state.bulkValue,
            onChange: this.handleBulkValueInput
          })
        )
      ),
      _react2.default.createElement(
        _form2.default,
        { onSubmit: this.handleSubmit },
        _react2.default.createElement(
          'h2',
          { className: 'interface-title', style: { marginTop: 0 } },
          '\u57FA\u672C\u8BBE\u7F6E'
        ),
        _react2.default.createElement(
          'div',
          { className: 'panel-sub' },
          _react2.default.createElement(
            FormItem,
            (0, _extends4.default)({ className: 'interface-edit-item' }, formItemLayout, { label: '\u63A5\u53E3\u540D\u79F0' }),
            getFieldDecorator('title', {
              initialValue: this.state.title,
              rules: (0, _common.nameLengthLimit)('接口')
            })(_react2.default.createElement(_input2.default, { id: 'title', placeholder: '\u63A5\u53E3\u540D\u79F0' }))
          ),
          _react2.default.createElement(
            FormItem,
            (0, _extends4.default)({ className: 'interface-edit-item' }, formItemLayout, { label: '\u9009\u62E9\u5206\u7C7B' }),
            getFieldDecorator('catid', {
              initialValue: this.state.catid + '',
              rules: [{ required: true, message: '请选择一个分类' }]
            })(_react2.default.createElement(
              _select2.default,
              { placeholder: '\u8BF7\u9009\u62E9\u4E00\u4E2A\u5206\u7C7B' },
              this.props.cat.map(function (item) {
                return _react2.default.createElement(
                  Option,
                  { key: item._id, value: item._id + '' },
                  item.name
                );
              })
            ))
          ),
          _react2.default.createElement(
            FormItem,
            (0, _extends4.default)({
              className: 'interface-edit-item'
            }, formItemLayout, {
              label: _react2.default.createElement(
                'span',
                null,
                '\u63A5\u53E3\u8DEF\u5F84\xA0',
                _react2.default.createElement(
                  _tooltip2.default,
                  {
                    title: _react2.default.createElement(
                      'div',
                      null,
                      _react2.default.createElement(
                        'p',
                        null,
                        '1. \u652F\u6301\u52A8\u6001\u8DEF\u7531,\u4F8B\u5982:',
                        DEMOPATH
                      ),
                      _react2.default.createElement(
                        'p',
                        null,
                        '2. \u652F\u6301 ?controller=xxx \u7684QueryRouter,\u975Erouter\u7684Query\u53C2\u6570\u8BF7\u5B9A\u4E49\u5230 Request\u8BBE\u7F6E->Query'
                      )
                    )
                  },
                  _react2.default.createElement(_icon2.default, { type: 'question-circle-o', style: { width: '10px' } })
                )
              )
            }),
            _react2.default.createElement(
              InputGroup,
              { compact: true },
              _react2.default.createElement(
                _select2.default,
                {
                  value: this.state.method,
                  onChange: this.onChangeMethod,
                  style: { width: '15%' }
                },
                HTTP_METHOD_KEYS.map(function (item) {
                  return _react2.default.createElement(
                    Option,
                    { key: item, value: item },
                    item
                  );
                })
              ),
              _react2.default.createElement(
                _tooltip2.default,
                {
                  title: '\u63A5\u53E3\u57FA\u672C\u8DEF\u5F84\uFF0C\u53EF\u5728 \u9879\u76EE\u8BBE\u7F6E \u91CC\u4FEE\u6539',
                  style: {
                    display: this.props.basepath == '' ? 'block' : 'none'
                  }
                },
                _react2.default.createElement(_input2.default, {
                  disabled: true,
                  value: this.props.basepath,
                  readOnly: true,
                  onChange: function onChange() {},
                  style: { width: '25%' }
                })
              ),
              getFieldDecorator('path', {
                initialValue: this.state.path,
                rules: [{
                  required: true,
                  message: '请输入接口路径!'
                }]
              })(_react2.default.createElement(_input2.default, { onChange: this.handlePath, placeholder: '/path', style: { width: '60%' } }))
            ),
            _react2.default.createElement(
              _row2.default,
              { className: 'interface-edit-item' },
              _react2.default.createElement(
                _col2.default,
                { span: 24, offset: 0 },
                paramsList
              )
            )
          ),
          _react2.default.createElement(
            FormItem,
            (0, _extends4.default)({ className: 'interface-edit-item' }, formItemLayout, { label: 'Tag' }),
            getFieldDecorator('tag', { initialValue: this.state.tag })(_react2.default.createElement(
              _select2.default,
              { placeholder: '\u8BF7\u9009\u62E9 tag ', mode: 'multiple' },
              projectMsg.tag.map(function (item) {
                return _react2.default.createElement(
                  Option,
                  { value: item.name, key: item._id },
                  item.name
                );
              }),
              _react2.default.createElement(
                Option,
                { value: 'tag\u8BBE\u7F6E', disabled: true, style: { cursor: 'pointer', color: '#2395f1' } },
                _react2.default.createElement(
                  _button2.default,
                  { type: 'primary', onClick: this.props.onTagClick },
                  'Tag\u8BBE\u7F6E'
                )
              )
            ))
          ),
          _react2.default.createElement(
            FormItem,
            (0, _extends4.default)({ className: 'interface-edit-item' }, formItemLayout, { label: '\u72B6\u6001' }),
            getFieldDecorator('status', { initialValue: this.state.status })(_react2.default.createElement(
              _select2.default,
              null,
              _react2.default.createElement(
                Option,
                { value: 'done' },
                '\u5DF2\u5B8C\u6210'
              ),
              _react2.default.createElement(
                Option,
                { value: 'undone' },
                '\u672A\u5B8C\u6210'
              )
            ))
          ),
          custom_field.enable && _react2.default.createElement(
            FormItem,
            (0, _extends4.default)({
              className: 'interface-edit-item'
            }, formItemLayout, {
              label: custom_field.name
            }),
            getFieldDecorator('custom_field_value', {
              initialValue: this.state.custom_field_value
            })(_react2.default.createElement(_input2.default, { placeholder: '\u8BF7\u8F93\u5165' }))
          )
        ),
        _react2.default.createElement(
          'h2',
          { className: 'interface-title' },
          '\u8BF7\u6C42\u53C2\u6570\u8BBE\u7F6E'
        ),
        _react2.default.createElement(
          'div',
          { className: 'container-radiogroup' },
          _react2.default.createElement(
            RadioGroup,
            {
              value: this.state.req_radio_type,
              size: 'large',
              className: 'radioGroup',
              onChange: this.changeRadioGroup
            },
            HTTP_METHOD[this.state.method].request_body ? _react2.default.createElement(
              RadioButton,
              { value: 'req-body' },
              'Body'
            ) : null,
            _react2.default.createElement(
              RadioButton,
              { value: 'req-query' },
              'Query'
            ),
            _react2.default.createElement(
              RadioButton,
              { value: 'req-headers' },
              'Headers'
            )
          )
        ),
        _react2.default.createElement(
          'div',
          { className: 'panel-sub' },
          _react2.default.createElement(
            FormItem,
            { className: 'interface-edit-item ' + this.state.hideTabs.req.query },
            _react2.default.createElement(
              _row2.default,
              { type: 'flex', justify: 'space-around' },
              _react2.default.createElement(
                _col2.default,
                { span: 12 },
                _react2.default.createElement(
                  _button2.default,
                  { size: 'small', type: 'primary', onClick: function onClick() {
                      return _this3.addParams('req_query');
                    } },
                  '\u6DFB\u52A0Query\u53C2\u6570'
                )
              ),
              _react2.default.createElement(
                _col2.default,
                { span: 12 },
                _react2.default.createElement(
                  'div',
                  { className: 'bulk-import', onClick: function onClick() {
                      return _this3.showBulk('req_query');
                    } },
                  '\u6279\u91CF\u6DFB\u52A0'
                )
              )
            )
          ),
          _react2.default.createElement(
            _row2.default,
            { className: 'interface-edit-item ' + this.state.hideTabs.req.query },
            _react2.default.createElement(
              _col2.default,
              null,
              _react2.default.createElement(
                _EasyDragSort2.default,
                {
                  data: function data() {
                    return _this3.props.form.getFieldValue('req_query');
                  },
                  onChange: this.handleDragMove('req_query'),
                  onlyChild: 'easy_drag_sort_child'
                },
                QueryList
              )
            )
          ),
          _react2.default.createElement(
            FormItem,
            { className: 'interface-edit-item ' + this.state.hideTabs.req.headers },
            _react2.default.createElement(
              _button2.default,
              { size: 'small', type: 'primary', onClick: function onClick() {
                  return _this3.addParams('req_headers');
                } },
              '\u6DFB\u52A0Header'
            )
          ),
          _react2.default.createElement(
            _row2.default,
            { className: 'interface-edit-item ' + this.state.hideTabs.req.headers },
            _react2.default.createElement(
              _col2.default,
              null,
              _react2.default.createElement(
                _EasyDragSort2.default,
                {
                  data: function data() {
                    return _this3.props.form.getFieldValue('req_headers');
                  },
                  onChange: this.handleDragMove('req_headers'),
                  onlyChild: 'easy_drag_sort_child'
                },
                headerList
              )
            )
          ),
          HTTP_METHOD[this.state.method].request_body ? _react2.default.createElement(
            'div',
            null,
            _react2.default.createElement(
              FormItem,
              { className: 'interface-edit-item ' + this.state.hideTabs.req.body },
              getFieldDecorator('req_body_type', {
                initialValue: this.state.req_body_type
              })(_react2.default.createElement(
                RadioGroup,
                null,
                _react2.default.createElement(
                  _radio2.default,
                  { value: 'form' },
                  'form'
                ),
                _react2.default.createElement(
                  _radio2.default,
                  { value: 'json' },
                  'json'
                ),
                _react2.default.createElement(
                  _radio2.default,
                  { value: 'file' },
                  'file'
                ),
                _react2.default.createElement(
                  _radio2.default,
                  { value: 'raw' },
                  'raw'
                )
              ))
            ),
            _react2.default.createElement(
              _row2.default,
              {
                className: 'interface-edit-item ' + (this.props.form.getFieldValue('req_body_type') === 'form' ? this.state.hideTabs.req.body : 'hide')
              },
              _react2.default.createElement(
                _col2.default,
                { style: { minHeight: '50px' } },
                _react2.default.createElement(
                  _row2.default,
                  { type: 'flex', justify: 'space-around' },
                  _react2.default.createElement(
                    _col2.default,
                    { span: '12', className: 'interface-edit-item' },
                    _react2.default.createElement(
                      _button2.default,
                      {
                        size: 'small',
                        type: 'primary',
                        onClick: function onClick() {
                          return _this3.addParams('req_body_form');
                        }
                      },
                      '\u6DFB\u52A0form\u53C2\u6570'
                    )
                  ),
                  _react2.default.createElement(
                    _col2.default,
                    { span: '12' },
                    _react2.default.createElement(
                      'div',
                      { className: 'bulk-import', onClick: function onClick() {
                          return _this3.showBulk('req_body_form');
                        } },
                      '\u6279\u91CF\u6DFB\u52A0'
                    )
                  )
                ),
                _react2.default.createElement(
                  _EasyDragSort2.default,
                  {
                    data: function data() {
                      return _this3.props.form.getFieldValue('req_body_form');
                    },
                    onChange: this.handleDragMove('req_body_form'),
                    onlyChild: 'easy_drag_sort_child'
                  },
                  requestBodyList
                )
              )
            )
          ) : null,
          _react2.default.createElement(
            _row2.default,
            {
              className: 'interface-edit-item ' + (this.props.form.getFieldValue('req_body_type') === 'json' ? this.state.hideTabs.req.body : 'hide')
            },
            _react2.default.createElement(
              'span',
              null,
              'JSON-SCHEMA:\xA0',
              !projectMsg.is_json5 && _react2.default.createElement(
                _tooltip2.default,
                { title: '\u9879\u76EE -> \u8BBE\u7F6E \u5F00\u542F json5' },
                _react2.default.createElement(_icon2.default, { type: 'question-circle-o' }),
                ' '
              )
            ),
            getFieldDecorator('req_body_is_json_schema', {
              valuePropName: 'checked',
              initialValue: this.state.req_body_is_json_schema || !projectMsg.is_json5
            })(_react2.default.createElement(_switch2.default, {
              checkedChildren: '\u5F00',
              unCheckedChildren: '\u5173',
              disabled: !projectMsg.is_json5
            })),
            _react2.default.createElement(
              _col2.default,
              { style: { marginTop: '5px' }, className: 'interface-edit-json-info' },
              !this.props.form.getFieldValue('req_body_is_json_schema') ? _react2.default.createElement(
                'span',
                null,
                '\u57FA\u4E8E Json5, \u53C2\u6570\u63CF\u8FF0\u4FE1\u606F\u7528\u6CE8\u91CA\u7684\u65B9\u5F0F\u5B9E\u73B0',
                ' ',
                _react2.default.createElement(
                  _tooltip2.default,
                  { title: _react2.default.createElement(
                      'pre',
                      null,
                      Json5Example
                    ) },
                  _react2.default.createElement(_icon2.default, { type: 'question-circle-o', style: { color: '#086dbf' } })
                ),
                '\u201C\u5168\u5C40\u7F16\u8F91\u201D\u6216 \u201C\u9000\u51FA\u5168\u5C4F\u201D \u8BF7\u6309 F9'
              ) : _react2.default.createElement(ReqBodySchema, {
                onChange: function onChange(text) {
                  _this3.setState({
                    req_body_other: text
                  });

                  if (new Date().getTime() - _this3.startTime > 1000) {
                    EditFormContext.props.changeEditStatus(true);
                  }
                },
                isMock: true,
                data: req_body_other_use_schema_editor
              })
            ),
            _react2.default.createElement(
              _col2.default,
              null,
              !this.props.form.getFieldValue('req_body_is_json_schema') && _react2.default.createElement(_AceEditor2.default, {
                className: 'interface-editor',
                data: this.state.req_body_other,
                onChange: this.handleReqBody,
                fullScreen: true
              })
            )
          ),
          this.props.form.getFieldValue('req_body_type') === 'file' && this.state.hideTabs.req.body !== 'hide' ? _react2.default.createElement(
            _row2.default,
            { className: 'interface-edit-item' },
            _react2.default.createElement(
              _col2.default,
              { className: 'interface-edit-item-other-body' },
              getFieldDecorator('req_body_other', {
                initialValue: this.state.req_body_other
              })(_react2.default.createElement(TextArea, { placeholder: '', autosize: true }))
            )
          ) : null,
          this.props.form.getFieldValue('req_body_type') === 'raw' && this.state.hideTabs.req.body !== 'hide' ? _react2.default.createElement(
            _row2.default,
            null,
            _react2.default.createElement(
              _col2.default,
              null,
              getFieldDecorator('req_body_other', {
                initialValue: this.state.req_body_other
              })(_react2.default.createElement(TextArea, { placeholder: '', autosize: { minRows: 8 } }))
            )
          ) : null
        ),
        _react2.default.createElement(
          'h2',
          { className: 'interface-title' },
          '\u8FD4\u56DE\u6570\u636E\u8BBE\u7F6E\xA0',
          !projectMsg.is_json5 && _react2.default.createElement(
            _tooltip2.default,
            { title: '\u9879\u76EE -> \u8BBE\u7F6E \u5F00\u542F json5' },
            _react2.default.createElement(_icon2.default, { type: 'question-circle-o', className: 'tooltip' }),
            ' '
          ),
          getFieldDecorator('res_body_is_json_schema', {
            valuePropName: 'checked',
            initialValue: this.state.res_body_is_json_schema || !projectMsg.is_json5
          })(_react2.default.createElement(_switch2.default, {
            checkedChildren: 'json-schema',
            unCheckedChildren: 'json',
            disabled: !projectMsg.is_json5
          }))
        ),
        _react2.default.createElement(
          'div',
          { className: 'container-radiogroup' },
          getFieldDecorator('res_body_type', {
            initialValue: this.state.res_body_type
          })(_react2.default.createElement(
            RadioGroup,
            { size: 'large', className: 'radioGroup' },
            _react2.default.createElement(
              RadioButton,
              { value: 'json' },
              'JSON'
            ),
            _react2.default.createElement(
              RadioButton,
              { value: 'raw' },
              'RAW'
            )
          ))
        ),
        _react2.default.createElement(
          'div',
          { className: 'panel-sub' },
          _react2.default.createElement(
            _row2.default,
            {
              className: 'interface-edit-item',
              style: {
                display: this.props.form.getFieldValue('res_body_type') === 'json' ? 'block' : 'none'
              }
            },
            _react2.default.createElement(
              _col2.default,
              null,
              _react2.default.createElement(
                _tabs2.default,
                { size: 'large', defaultActiveKey: 'tpl', onChange: this.handleJsonType },
                _react2.default.createElement(TabPane, { tab: '\u6A21\u677F', key: 'tpl' }),
                _react2.default.createElement(TabPane, { tab: '\u9884\u89C8', key: 'preview' })
              ),
              _react2.default.createElement(
                'div',
                { style: { marginTop: '10px' } },
                !this.props.form.getFieldValue('res_body_is_json_schema') ? _react2.default.createElement(
                  'div',
                  { style: { padding: '10px 0', fontSize: '15px' } },
                  _react2.default.createElement(
                    'span',
                    null,
                    '\u57FA\u4E8E mockjs \u548C json5,\u4F7F\u7528\u6CE8\u91CA\u65B9\u5F0F\u5199\u53C2\u6570\u8BF4\u660E',
                    ' ',
                    _react2.default.createElement(
                      _tooltip2.default,
                      { title: _react2.default.createElement(
                          'pre',
                          null,
                          Json5Example
                        ) },
                      _react2.default.createElement(_icon2.default, { type: 'question-circle-o', style: { color: '#086dbf' } })
                    ),
                    ' ',
                    ',\u5177\u4F53\u4F7F\u7528\u65B9\u6CD5\u8BF7',
                    ' ',
                    _react2.default.createElement(
                      'span',
                      {
                        className: 'href',
                        onClick: function onClick() {
                          return window.open('https://hellosean1025.github.io/yapi/documents/mock.html', '_blank');
                        }
                      },
                      '\u67E5\u770B\u6587\u6863'
                    )
                  ),
                  '\uFF0C\u201C\u5168\u5C40\u7F16\u8F91\u201D\u6216 \u201C\u9000\u51FA\u5168\u5C4F\u201D \u8BF7\u6309 ',
                  _react2.default.createElement(
                    'span',
                    { style: { fontWeight: '500' } },
                    'F9'
                  )
                ) : _react2.default.createElement(
                  'div',
                  { style: { display: this.state.jsonType === 'tpl' ? 'block' : 'none' } },
                  _react2.default.createElement(ResBodySchema, {
                    onChange: function onChange(text) {
                      _this3.setState({
                        res_body: text
                      });
                      if (new Date().getTime() - _this3.startTime > 1000) {
                        EditFormContext.props.changeEditStatus(true);
                      }
                    },
                    isMock: true,
                    data: res_body_use_schema_editor
                  })
                ),
                !this.props.form.getFieldValue('res_body_is_json_schema') && this.state.jsonType === 'tpl' && _react2.default.createElement(_AceEditor2.default, {
                  className: 'interface-editor',
                  data: this.state.res_body,
                  onChange: this.handleResBody,
                  ref: function ref(editor) {
                    return _this3.resBodyEditor = editor;
                  },
                  fullScreen: true
                }),
                _react2.default.createElement('div', {
                  id: 'mock-preview',
                  style: {
                    backgroundColor: '#eee',
                    lineHeight: '20px',
                    minHeight: '300px',
                    display: this.state.jsonType === 'preview' ? 'block' : 'none'
                  }
                })
              )
            )
          ),
          _react2.default.createElement(
            _row2.default,
            {
              className: 'interface-edit-item',
              style: {
                display: this.props.form.getFieldValue('res_body_type') === 'raw' ? 'block' : 'none'
              }
            },
            _react2.default.createElement(
              _col2.default,
              null,
              getFieldDecorator('res_body', {
                initialValue: this.state.res_body
              })(_react2.default.createElement(TextArea, { style: { minHeight: '150px' }, placeholder: '' }))
            )
          )
        ),
        _react2.default.createElement(
          'h2',
          { className: 'interface-title' },
          '\u5907 \u6CE8'
        ),
        _react2.default.createElement(
          'div',
          { className: 'panel-sub' },
          _react2.default.createElement(
            FormItem,
            { className: 'interface-edit-item' },
            _react2.default.createElement(
              'div',
              null,
              _react2.default.createElement('div', { id: 'desc', style: { lineHeight: '20px' }, className: 'remark-editor' })
            )
          )
        ),
        _react2.default.createElement(
          'h2',
          { className: 'interface-title' },
          '\u5176 \u4ED6'
        ),
        _react2.default.createElement(
          'div',
          { className: 'panel-sub' },
          _react2.default.createElement(
            FormItem,
            (0, _extends4.default)({
              className: 'interface-edit-item'
            }, formItemLayout, {
              label: _react2.default.createElement(
                'span',
                null,
                '\u6D88\u606F\u901A\u77E5\xA0',
                _react2.default.createElement(
                  _tooltip2.default,
                  { title: '开启消息通知，可在 项目设置 里修改' },
                  _react2.default.createElement(_icon2.default, { type: 'question-circle-o', style: { width: '10px' } })
                )
              )
            }),
            getFieldDecorator('switch_notice', {
              valuePropName: 'checked',
              initialValue: this.props.noticed
            })(_react2.default.createElement(_switch2.default, { checkedChildren: '\u5F00', unCheckedChildren: '\u5173' }))
          ),
          _react2.default.createElement(
            FormItem,
            (0, _extends4.default)({
              className: 'interface-edit-item'
            }, formItemLayout, {
              label: _react2.default.createElement(
                'span',
                null,
                '\u5F00\u653E\u63A5\u53E3\xA0',
                _react2.default.createElement(
                  _tooltip2.default,
                  { title: '用户可以在 数据导出 时选择只导出公开接口' },
                  _react2.default.createElement(_icon2.default, { type: 'question-circle-o', style: { width: '10px' } })
                )
              )
            }),
            getFieldDecorator('api_opened', {
              valuePropName: 'checked',
              initialValue: this.state.api_opened
            })(_react2.default.createElement(_switch2.default, { checkedChildren: '\u5F00', unCheckedChildren: '\u5173' }))
          )
        ),
        _react2.default.createElement(
          FormItem,
          {
            className: 'interface-edit-item',
            style: { textAlign: 'center', marginTop: '16px' }
          },
          _react2.default.createElement(
            _affix2.default,
            { offsetBottom: 0 },
            _react2.default.createElement(
              _button2.default,
              {
                className: 'interface-edit-submit-button',
                disabled: this.state.submitStatus,
                size: 'large',
                htmlType: 'submit'
              },
              '\u4FDD\u5B58'
            )
          )
        )
      )
    );
  };

  return InterfaceEditForm;
}(_react.PureComponent), _class2.propTypes = {
  custom_field: _propTypes2.default.object,
  groupList: _propTypes2.default.array,
  form: _propTypes2.default.object,
  curdata: _propTypes2.default.object,
  mockUrl: _propTypes2.default.string,
  onSubmit: _propTypes2.default.func,
  basepath: _propTypes2.default.string,
  noticed: _propTypes2.default.bool,
  cat: _propTypes2.default.array,
  changeEditStatus: _propTypes2.default.func,
  projectMsg: _propTypes2.default.object,
  onTagClick: _propTypes2.default.func
}, _temp)) || _class);
exports.default = _form2.default.create({
  onValuesChange: function onValuesChange() {
    EditFormContext.props.changeEditStatus(true);
  }
})(InterfaceEditForm);