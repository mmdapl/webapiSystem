{"version":3,"sources":["node_modules\\json-schema-editor-visual\\package\\components\\SchemaComponents\\SchemaJson.js"],"names":["FormItem","Item","Option","TextArea","InputGroup","Group","mapping","name","data","showEdit","showAdv","type","nameArray","concat","SchemaArray","props","context","handleChangeType","prefix","getPrefix","key","Model","changeTypeAction","value","handleChangeDesc","e","target","changeValueAction","handleChangeMock","mock","handleAddChildField","keyArr","addChildFieldAction","setOpenValueAction","handleClickIcon","handleShowEdit","items","handleShowAdv","_tagPaddingLeftStyle","schema","componentWillMount","length","filter","__tagPaddingLeftStyle","paddingLeft","render","prefixArray","prefixArrayStr","join","JSONPATH_JOIN_CHAR","showIcon","getOpenValue","_","isUndefined","isMock","SCHEMA_TYPE","map","item","index","description","PureComponent","contextTypes","PropTypes","func","object","bool","SchemaItem","handleChangeName","properties","error","changeNameAction","handleDeleteItem","deleteItemAction","enableRequireAction","required","editorName","handleAddField","addFieldAction","handleEnableRequire","checked","prefixStr","show","indexOf","SchemaObjectComponent","shouldComponentUpdate","nextProps","isEqual","open","Object","keys","Component","SchemaObject","state","DropPlus","add","menu","SchemaJson"],"mappings":"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","file":"SchemaJson.js","sourceRoot":"C:/Users/DUOYI/Desktop/api/test/vendors","sourcesContent":["import React, { Component, PureComponent } from 'react';\nimport {\n  Dropdown,\n  Menu,\n  Row,\n  Col,\n  Form,\n  Select,\n  Checkbox,\n  Button,\n  Icon,\n  Input,\n  Modal,\n  message,\n  Tooltip\n} from 'antd';\nimport FieldInput from './FieldInput'\n\nconst FormItem = Form.Item;\nconst Option = Select.Option;\nconst { TextArea } = Input;\nimport './schemaJson.css';\nimport _ from 'underscore';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { JSONPATH_JOIN_CHAR, SCHEMA_TYPE } from '../../utils.js';\nconst InputGroup = Input.Group;\nimport LocaleProvider from '../LocalProvider/index.js';\nimport utils from '../../utils';\nimport MockSelect from '../MockSelect/index.js';\n\nconst mapping = (name, data, showEdit, showAdv) => {\n  switch (data.type) {\n    case 'array':\n      return <SchemaArray prefix={name} data={data} showEdit={showEdit} showAdv={showAdv} />;\n      break;\n    case 'object':\n      let nameArray = [].concat(name, 'properties');\n      return <SchemaObject prefix={nameArray} data={data} showEdit={showEdit} showAdv={showAdv} />;\n      break;\n    default:\n      return null;\n  }\n};\n\nclass SchemaArray extends PureComponent {\n  constructor(props, context) {\n    super(props);\n    this._tagPaddingLeftStyle = {};\n    this.Model = context.Model.schema;\n  }\n\n  componentWillMount() {\n    const { prefix } = this.props;\n    let length = prefix.filter(name => name != 'properties').length;\n    this.__tagPaddingLeftStyle = {\n      paddingLeft: `${20 * (length + 1)}px`\n    };\n  }\n\n  getPrefix() {\n    return [].concat(this.props.prefix, 'items');\n  }\n\n  // 修改数据类型\n  handleChangeType = value => {\n    let prefix = this.getPrefix();\n    let key = [].concat(prefix, 'type');\n    this.Model.changeTypeAction({ key, value });\n  };\n\n  // 修改备注信息\n  handleChangeDesc = e => {\n    let prefix = this.getPrefix();\n    let key = [].concat(prefix, `description`);\n    let value = e.target.value;\n    this.Model.changeValueAction({ key, value });\n  };\n\n  // 修改mock信息\n  handleChangeMock = e => {\n    let prefix = this.getPrefix();\n    let key = [].concat(prefix, `mock`);\n    let value = e ? { mock: e } : '';\n    this.Model.changeValueAction({ key, value });\n  };\n\n  // 增加子节点\n  handleAddChildField = () => {\n    let prefix = this.getPrefix();\n    let keyArr = [].concat(prefix, 'properties');\n    this.Model.addChildFieldAction({ key: keyArr });\n    this.Model.setOpenValueAction({ key: keyArr, value: true });\n  };\n\n  handleClickIcon = () => {\n    let prefix = this.getPrefix();\n    // 数据存储在 properties.name.properties下\n    let keyArr = [].concat(prefix, 'properties');\n    this.Model.setOpenValueAction({ key: keyArr });\n  };\n\n  handleShowEdit = (name, type) => {\n    let prefix = this.getPrefix();\n    this.props.showEdit(prefix, name, this.props.data.items[name], type);\n  };\n\n  handleShowAdv = () => {\n    this.props.showAdv(this.getPrefix(), this.props.data.items);\n  };\n\n  render() {\n    const { data, prefix, showEdit, showAdv } = this.props;\n    const items = data.items;\n    let prefixArray = [].concat(prefix, 'items');\n\n    let prefixArrayStr = [].concat(prefixArray, 'properties').join(JSONPATH_JOIN_CHAR);\n    let showIcon = this.context.getOpenValue([prefixArrayStr]);\n    return (\n      !_.isUndefined(data.items) && (\n        <div className=\"array-type\">\n          <Row className=\"array-item-type\" type=\"flex\" justify=\"space-around\" align=\"middle\">\n            <Col\n              span={this.context.isMock ? 10 : 12}\n              className=\"col-item name-item col-item-name\"\n              style={this.__tagPaddingLeftStyle}\n            >\n              <Row type=\"flex\" justify=\"space-around\" align=\"middle\">\n                <Col span={2} className=\"down-style-col\">\n                  {items.type === 'object' ? (\n                    <span className=\"down-style\" onClick={this.handleClickIcon}>\n                      {showIcon ? (\n                        <Icon className=\"icon-object\" type=\"caret-down\" />\n                      ) : (\n                        <Icon className=\"icon-object\" type=\"caret-right\" />\n                      )}\n                    </span>\n                  ) : null}\n                </Col>\n                <Col span={22}>\n                  <Input addonAfter={<Checkbox disabled />} disabled value=\"Items\" />\n                </Col>\n              </Row>\n            </Col>\n            <Col span={4} className=\"col-item col-item-type\">\n              <Select\n                name=\"itemtype\"\n                className=\"type-select-style\"\n                onChange={this.handleChangeType}\n                value={items.type}\n              >\n                {SCHEMA_TYPE.map((item, index) => {\n                  return (\n                    <Option value={item} key={index}>\n                      {item}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Col>\n            {this.context.isMock && (\n              <Col span={3} className=\"col-item col-item-mock\">\n                \n                <MockSelect\n                  schema={items}\n                  showEdit={() => this.handleShowEdit('mock', items.type)}\n                  onChange={this.handleChangeMock}\n                />\n              </Col>\n            )}\n            <Col span={this.context.isMock ? 4 : 5} className=\"col-item col-item-desc\">\n              <Input\n                addonAfter={<Icon type=\"edit\" onClick={() => this.handleShowEdit('description')} />}\n                placeholder={LocaleProvider('description')}\n                value={items.description}\n                onChange={this.handleChangeDesc}\n              />\n            </Col>\n            <Col span={3} className=\"col-item col-item-setting\">\n              <span className=\"adv-set\" onClick={this.handleShowAdv}>\n                <Tooltip placement=\"top\" title={LocaleProvider('adv_setting')}>\n                  <Icon type=\"setting\" />\n                </Tooltip>\n              </span>\n\n              {items.type === 'object' ? (\n                <span onClick={this.handleAddChildField}>\n                  <Tooltip placement=\"top\" title={LocaleProvider('add_child_node')}>\n                    <Icon type=\"plus\" className=\"plus\" />\n                  </Tooltip>\n                </span>\n              ) : null}\n            </Col>\n          </Row>\n          <div className=\"option-formStyle\">{mapping(prefixArray, items, showEdit, showAdv)}</div>\n        </div>\n      )\n    );\n  }\n}\n\nSchemaArray.contextTypes = {\n  getOpenValue: PropTypes.func,\n  Model: PropTypes.object,\n  isMock: PropTypes.bool\n};\n\nclass SchemaItem extends PureComponent {\n  constructor(props, context) {\n    super(props);\n    this._tagPaddingLeftStyle = {};\n    // this.num = 0\n    this.Model = context.Model.schema;\n  }\n\n  componentWillMount() {\n    const { prefix } = this.props;\n    let length = prefix.filter(name => name != 'properties').length;\n    this.__tagPaddingLeftStyle = {\n      paddingLeft: `${20 * (length + 1)}px`\n    };\n  }\n\n  getPrefix() {\n    return [].concat(this.props.prefix, this.props.name);\n  }\n\n  // 修改节点字段名\n  handleChangeName = e => {\n    const { data, prefix, name } = this.props;\n    let value = e.target.value;\n\n    if (data.properties[value] && typeof data.properties[value] === 'object') {\n      return message.error(`The field \"${value}\" already exists.`);\n    }\n\n    this.Model.changeNameAction({ value, prefix, name });\n  };\n\n  // 修改备注信息\n  handleChangeDesc = e => {\n    let prefix = this.getPrefix();\n    let key = [].concat(prefix, 'description');\n    let value = e.target.value;\n    this.Model.changeValueAction({ key, value });\n  };\n\n  // 修改mock 信息\n  handleChangeMock = e => {\n    let prefix = this.getPrefix();\n    let key = [].concat(prefix, `mock`);\n    let value = e ? { mock: e } : '';\n    this.Model.changeValueAction({ key, value });\n  };\n\n  // 修改数据类型\n  handleChangeType = e => {\n    let prefix = this.getPrefix();\n    let key = [].concat(prefix, 'type');\n    this.Model.changeTypeAction({ key, value: e });\n  };\n\n  // 删除节点\n  handleDeleteItem = () => {\n    const { prefix, name } = this.props;\n    let nameArray = this.getPrefix();\n    this.Model.deleteItemAction({ key: nameArray });\n    this.Model.enableRequireAction({ prefix, name, required: false });\n  };\n  /*\n  展示备注编辑弹窗\n  editorName: 弹窗名称 ['description', 'mock']\n  type: 如果当前字段是object || array showEdit 不可用\n  */\n  handleShowEdit = (editorName, type) => {\n    const { data, name, showEdit } = this.props;\n\n    showEdit(this.getPrefix(), editorName, data.properties[name][editorName], type);\n  };\n\n  // 展示高级设置弹窗\n  handleShowAdv = () => {\n    const { data, name, showAdv } = this.props;\n    showAdv(this.getPrefix(), data.properties[name]);\n  };\n\n  //  增加子节点\n  handleAddField = () => {\n    const { prefix, name } = this.props;\n    this.Model.addFieldAction({ prefix, name });\n  };\n\n  // 控制三角形按钮\n  handleClickIcon = () => {\n    let prefix = this.getPrefix();\n    // 数据存储在 properties.xxx.properties 下\n    let keyArr = [].concat(prefix, 'properties');\n    this.Model.setOpenValueAction({ key: keyArr });\n  };\n\n  // 修改是否必须\n  handleEnableRequire = e => {\n    const { prefix, name } = this.props;\n    let required = e.target.checked;\n    // this.enableRequire(this.props.prefix, this.props.name, e.target.checked);\n    this.Model.enableRequireAction({ prefix, name, required });\n  };\n\n  render() {\n    let { name, data, prefix, showEdit, showAdv } = this.props;\n    let value = data.properties[name];\n    let prefixArray = [].concat(prefix, name);\n\n    let prefixStr = prefix.join(JSONPATH_JOIN_CHAR);\n    let prefixArrayStr = [].concat(prefixArray, 'properties').join(JSONPATH_JOIN_CHAR);\n    let show = this.context.getOpenValue([prefixStr]);\n    let showIcon = this.context.getOpenValue([prefixArrayStr]);\n    return show ? (\n      <div>\n        <Row type=\"flex\" justify=\"space-around\" align=\"middle\">\n          <Col\n            span={this.context.isMock ? 10 : 12}\n            className=\"col-item name-item col-item-name\"\n            style={this.__tagPaddingLeftStyle}\n          >\n            <Row type=\"flex\" justify=\"space-around\" align=\"middle\">\n              <Col span={2} className=\"down-style-col\">\n                {value.type === 'object' ? (\n                  <span className=\"down-style\" onClick={this.handleClickIcon}>\n                    {showIcon ? (\n                      <Icon className=\"icon-object\" type=\"caret-down\" />\n                    ) : (\n                      <Icon className=\"icon-object\" type=\"caret-right\" />\n                    )}\n                  </span>\n                ) : null}\n              </Col>\n              <Col span={22}>\n                <FieldInput\n                  addonAfter={\n                    <Tooltip placement=\"top\" title={LocaleProvider('required')}>\n                      <Checkbox\n                        onChange={this.handleEnableRequire}\n                        checked={\n                          _.isUndefined(data.required) ? false : data.required.indexOf(name) != -1\n                        }\n                      />\n                    </Tooltip>\n                  }\n                  onChange={this.handleChangeName}\n                  value={name}\n                />\n              </Col>\n            </Row>\n          </Col>\n\n\n          <Col span={4} className=\"col-item col-item-type\">\n            <Select\n              className=\"type-select-style\"\n              onChange={this.handleChangeType}\n              value={value.type}\n            >\n              {SCHEMA_TYPE.map((item, index) => {\n                return (\n                  <Option value={item} key={index}>\n                    {item}\n                  </Option>\n                );\n              })}\n            </Select>\n          </Col>\n\n\n          {this.context.isMock && (\n            <Col span={3} className=\"col-item col-item-mock\">\n              {/* <Input\n                addonAfter={\n                  <Icon type=\"edit\" onClick={() => this.handleShowEdit('mock', value.type)} />\n                }\n                placeholder={LocaleProvider('mock')}\n                value={value.mock ? value.mock.mock : ''}\n                onChange={this.handleChangeMock}\n                disabled={value.type === 'object' || value.type === 'array'}\n              /> */}\n              <MockSelect\n                schema={value}\n                showEdit={() => this.handleShowEdit('mock', value.type)}\n                onChange={this.handleChangeMock}\n              />\n            </Col>\n          )}\n\n\n          <Col span={this.context.isMock ? 4 : 5} className=\"col-item col-item-desc\">\n            <Input\n              addonAfter={<Icon type=\"edit\" onClick={() => this.handleShowEdit('description')} />}\n              placeholder={LocaleProvider('description')}\n              value={value.description}\n              onChange={this.handleChangeDesc}\n            />\n          </Col>\n\n          \n          <Col span={3} className=\"col-item col-item-setting\">\n            <span className=\"adv-set\" onClick={this.handleShowAdv}>\n              <Tooltip placement=\"top\" title={LocaleProvider('adv_setting')}>\n                <Icon type=\"setting\" />\n              </Tooltip>\n            </span>\n            <span className=\"delete-item\" onClick={this.handleDeleteItem}>\n              <Icon type=\"close\" className=\"close\" />\n            </span>\n            {value.type === 'object' ? (\n              <DropPlus prefix={prefix} name={name} />\n            ) : (\n              <span onClick={this.handleAddField}>\n                <Tooltip placement=\"top\" title={LocaleProvider('add_sibling_node')}>\n                  <Icon type=\"plus\" className=\"plus\" />\n                </Tooltip>\n              </span>\n            )}\n          </Col>\n        </Row>\n        <div className=\"option-formStyle\">{mapping(prefixArray, value, showEdit, showAdv)}</div>\n      </div>\n    ) : null;\n  }\n}\n\nSchemaItem.contextTypes = {\n  getOpenValue: PropTypes.func,\n  Model: PropTypes.object,\n  isMock: PropTypes.bool\n};\n\nclass SchemaObjectComponent extends Component {\n  shouldComponentUpdate(nextProps) {\n    if (\n      _.isEqual(nextProps.data, this.props.data) &&\n      _.isEqual(nextProps.prefix, this.props.prefix) &&\n      _.isEqual(nextProps.open, this.props.open)\n    ) {\n      return false;\n    }\n    return true;\n  }\n\n  render() {\n    const { data, prefix, showEdit, showAdv } = this.props;\n    return (\n      <div className=\"object-style\">\n        {Object.keys(data.properties).map((name, index) => (\n          <SchemaItem\n            key={index}\n            data={this.props.data}\n            name={name}\n            prefix={prefix}\n            showEdit={showEdit}\n            showAdv={showAdv}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n\nconst SchemaObject = connect(state => ({\n  open: state.schema.open\n}))(SchemaObjectComponent);\n\nconst DropPlus = (props, context) => {\n  const { prefix, name, add } = props;\n  const Model = context.Model.schema;\n  const menu = (\n    <Menu>\n      <Menu.Item>\n        <span onClick={() => Model.addFieldAction({ prefix, name })}>\n          {LocaleProvider('sibling_node')}\n        </span>\n      </Menu.Item>\n      <Menu.Item>\n        <span\n          onClick={() => {\n            Model.setOpenValueAction({ key: [].concat(prefix, name, 'properties'), value: true });\n            Model.addChildFieldAction({ key: [].concat(prefix, name, 'properties') });\n          }}\n        >\n          {LocaleProvider('child_node')}\n        </span>\n      </Menu.Item>\n    </Menu>\n  );\n\n  return (\n    <Tooltip placement=\"top\" title={LocaleProvider('add_node')}>\n      <Dropdown overlay={menu}>\n        <Icon type=\"plus\" className=\"plus\" />\n      </Dropdown>\n    </Tooltip>\n  );\n};\n\nDropPlus.contextTypes = {\n  Model: PropTypes.object\n};\n\nconst SchemaJson = props => {\n  const item = mapping([], props.data, props.showEdit, props.showAdv);\n  return <div className=\"schema-content\">{item}</div>;\n};\n\nexport default SchemaJson;\n"]}