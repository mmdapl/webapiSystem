{"version":3,"sources":["client\\reducer\\create.js"],"names":["createStore","initialState","middleware","promiseMiddleware","messageMiddleware","finalCreateStore","applyMiddleware","_createStore","store","reducer"],"mappings":";;;kBAKwBA,W;;AALxB;;AACA;;;;AACA;;;;AACA;;;;;;AAEe,SAASA,WAAT,GAAwC;AAAA,MAAnBC,YAAmB,uEAAJ,EAAI;;AACrD,MAAMC,aAAa,CAACC,sBAAD,EAAoBC,2BAApB,CAAnB;;AAEA,MAAIC,yBAAJ;AACA;AACAA,qBAAmBC,wCAAmBJ,UAAnB,EAA+BK,kBAA/B,CAAnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,QAAQH,iBAAiBI,iBAAjB,EAA0BR,YAA1B,CAAd;;AAEA,SAAOO,KAAP;AACD","file":"create.js","sourceRoot":"C:/Users/DUOYI/Desktop/api/test/vendors","sourcesContent":["import { createStore as _createStore, applyMiddleware } from 'redux';\nimport promiseMiddleware from 'redux-promise';\nimport messageMiddleware from './middleware/messageMiddleware';\nimport reducer from './modules/reducer';\n\nexport default function createStore(initialState = {}) {\n  const middleware = [promiseMiddleware, messageMiddleware];\n\n  let finalCreateStore;\n  //if (process.env.NODE_ENV === 'production') {\n  finalCreateStore = applyMiddleware(...middleware)(_createStore);\n  // } else {\n  //   finalCreateStore = compose(\n  //     applyMiddleware(...middleware),\n  //     window.devToolsExtension ? window.devToolsExtension() : require('../containers/DevTools/DevTools').instrument()\n  //   )(_createStore);\n  // }\n\n  const store = finalCreateStore(reducer, initialState);\n\n  return store;\n}\n"]}