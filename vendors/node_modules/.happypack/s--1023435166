'use strict';

exports.__esModule = true;
exports.fetchInterfaceCatList = exports.fetchInterfaceList = exports.fetchInterfaceListMenu = exports.fetchInterfaceData = exports.deleteInterfaceCatData = exports.saveImportData = exports.deleteInterfaceData = undefined;

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _assign = require('babel-runtime/core-js/object/assign');

var _assign2 = _interopRequireDefault(_assign);

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var deleteInterfaceData = exports.deleteInterfaceData = function () {
  var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee(id) {
    var result;
    return _regenerator2.default.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.next = 2;
            return _axios2.default.post('/api/interface/del', { id: id });

          case 2:
            result = _context.sent;
            return _context.abrupt('return', {
              type: DELETE_INTERFACE_DATA,
              payload: result
            });

          case 4:
          case 'end':
            return _context.stop();
        }
      }
    }, _callee, this);
  }));

  return function deleteInterfaceData(_x2) {
    return _ref.apply(this, arguments);
  };
}();

var saveImportData = exports.saveImportData = function () {
  var _ref2 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee2(data) {
    var result;
    return _regenerator2.default.wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            _context2.next = 2;
            return _axios2.default.post('/api/interface/save', data);

          case 2:
            result = _context2.sent;
            return _context2.abrupt('return', {
              type: SAVE_IMPORT_DATA,
              payload: result
            });

          case 4:
          case 'end':
            return _context2.stop();
        }
      }
    }, _callee2, this);
  }));

  return function saveImportData(_x3) {
    return _ref2.apply(this, arguments);
  };
}();

var deleteInterfaceCatData = exports.deleteInterfaceCatData = function () {
  var _ref3 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee3(id) {
    var result;
    return _regenerator2.default.wrap(function _callee3$(_context3) {
      while (1) {
        switch (_context3.prev = _context3.next) {
          case 0:
            _context3.next = 2;
            return _axios2.default.post('/api/interface/del_cat', { catid: id });

          case 2:
            result = _context3.sent;
            return _context3.abrupt('return', {
              type: DELETE_INTERFACE_CAT_DATA,
              payload: result
            });

          case 4:
          case 'end':
            return _context3.stop();
        }
      }
    }, _callee3, this);
  }));

  return function deleteInterfaceCatData(_x4) {
    return _ref3.apply(this, arguments);
  };
}();

// Action Creators


var fetchInterfaceData = exports.fetchInterfaceData = function () {
  var _ref4 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee4(interfaceId) {
    var result;
    return _regenerator2.default.wrap(function _callee4$(_context4) {
      while (1) {
        switch (_context4.prev = _context4.next) {
          case 0:
            _context4.next = 2;
            return _axios2.default.get('/api/interface/get?id=' + interfaceId);

          case 2:
            result = _context4.sent;
            return _context4.abrupt('return', {
              type: FETCH_INTERFACE_DATA,
              payload: result
            });

          case 4:
          case 'end':
            return _context4.stop();
        }
      }
    }, _callee4, this);
  }));

  return function fetchInterfaceData(_x5) {
    return _ref4.apply(this, arguments);
  };
}();

var fetchInterfaceListMenu = exports.fetchInterfaceListMenu = function () {
  var _ref5 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee5(projectId) {
    var result;
    return _regenerator2.default.wrap(function _callee5$(_context5) {
      while (1) {
        switch (_context5.prev = _context5.next) {
          case 0:
            _context5.next = 2;
            return _axios2.default.get('/api/interface/list_menu?project_id=' + projectId);

          case 2:
            result = _context5.sent;
            return _context5.abrupt('return', {
              type: FETCH_INTERFACE_LIST_MENU,
              payload: result
            });

          case 4:
          case 'end':
            return _context5.stop();
        }
      }
    }, _callee5, this);
  }));

  return function fetchInterfaceListMenu(_x6) {
    return _ref5.apply(this, arguments);
  };
}();

var fetchInterfaceList = exports.fetchInterfaceList = function () {
  var _ref6 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee6(params) {
    var result;
    return _regenerator2.default.wrap(function _callee6$(_context6) {
      while (1) {
        switch (_context6.prev = _context6.next) {
          case 0:
            _context6.next = 2;
            return _axios2.default.get('/api/interface/list', {
              params: params,
              paramsSerializer: function paramsSerializer(params) {
                return _qs2.default.stringify(params, { indices: false });
              }
            });

          case 2:
            result = _context6.sent;
            return _context6.abrupt('return', {
              type: FETCH_INTERFACE_LIST,
              payload: result
            });

          case 4:
          case 'end':
            return _context6.stop();
        }
      }
    }, _callee6, this);
  }));

  return function fetchInterfaceList(_x7) {
    return _ref6.apply(this, arguments);
  };
}();

var fetchInterfaceCatList = exports.fetchInterfaceCatList = function () {
  var _ref7 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee7(params) {
    var result;
    return _regenerator2.default.wrap(function _callee7$(_context7) {
      while (1) {
        switch (_context7.prev = _context7.next) {
          case 0:
            result = _axios2.default.get('/api/interface/list_cat', {
              params: params,
              paramsSerializer: function paramsSerializer(params) {
                return _qs2.default.stringify(params, { indices: false });
              }
            });
            return _context7.abrupt('return', {
              type: FETCH_INTERFACE_CAT_LIST,
              payload: result
            });

          case 2:
          case 'end':
            return _context7.stop();
        }
      }
    }, _callee7, this);
  }));

  return function fetchInterfaceCatList(_x8) {
    return _ref7.apply(this, arguments);
  };
}();

exports.changeEditStatus = changeEditStatus;
exports.initInterface = initInterface;
exports.updateInterfaceData = updateInterfaceData;

var _axios = require('axios');

var _axios2 = _interopRequireDefault(_axios);

var _qs = require('qs');

var _qs2 = _interopRequireDefault(_qs);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Actions
var INIT_INTERFACE_DATA = 'yapi/interface/INIT_INTERFACE_DATA';
var FETCH_INTERFACE_DATA = 'yapi/interface/FETCH_INTERFACE_DATA';
var FETCH_INTERFACE_LIST_MENU = 'yapi/interface/FETCH_INTERFACE_LIST_MENU';
var DELETE_INTERFACE_DATA = 'yapi/interface/DELETE_INTERFACE_DATA';
var DELETE_INTERFACE_CAT_DATA = 'yapi/interface/DELETE_INTERFACE_CAT_DATA';
var UPDATE_INTERFACE_DATA = 'yapi/interface/UPDATE_INTERFACE_DATA';
var CHANGE_EDIT_STATUS = 'yapi/interface/CHANGE_EDIT_STATUS';
var FETCH_INTERFACE_LIST = 'yapi/interface/FETCH_INTERFACE_LIST';
var SAVE_IMPORT_DATA = 'yapi/interface/SAVE_IMPORT_DATA';
var FETCH_INTERFACE_CAT_LIST = 'yapi/interface/FETCH_INTERFACE_CAT_LIST';
// const SAVE_INTERFACE_PROJECT_ID = 'yapi/interface/SAVE_INTERFACE_PROJECT_ID';
// const GET_INTERFACE_GROUP_LIST = 'yapi/interface/GET_INTERFACE_GROUP_LIST';

// Reducer
var initialState = {
  curdata: {},
  list: [],
  editStatus: false, // 记录编辑页面是否有编辑,
  totalTableList: [],
  catTableList: [],
  count: 0,
  totalCount: 0
};

exports.default = function () {
  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
  var action = arguments[1];

  switch (action.type) {
    case INIT_INTERFACE_DATA:
      return initialState;
    case UPDATE_INTERFACE_DATA:
      return (0, _extends3.default)({}, state, {
        curdata: (0, _assign2.default)({}, state.curdata, action.updata)
      });
    case FETCH_INTERFACE_DATA:
      return (0, _extends3.default)({}, state, {
        curdata: action.payload.data.data
      });
    case FETCH_INTERFACE_LIST_MENU:
      return (0, _extends3.default)({}, state, {
        list: action.payload.data.data
      });
    case CHANGE_EDIT_STATUS:
      {
        return (0, _extends3.default)({}, state, {
          editStatus: action.status
        });
      }

    case FETCH_INTERFACE_LIST:
      {
        return (0, _extends3.default)({}, state, {
          totalTableList: action.payload.data.data.list,
          totalCount: action.payload.data.data.count
        });
      }

    case FETCH_INTERFACE_CAT_LIST:
      {
        return (0, _extends3.default)({}, state, {
          catTableList: action.payload.data.data.list,
          count: action.payload.data.data.count
        });
      }
    default:
      return state;
  }
};

// 记录编辑页面是否有编辑


function changeEditStatus(status) {
  return {
    type: CHANGE_EDIT_STATUS,
    status: status
  };
}

function initInterface() {
  return {
    type: INIT_INTERFACE_DATA
  };
}

function updateInterfaceData(updata) {
  return {
    type: UPDATE_INTERFACE_DATA,
    updata: updata,
    payload: true
  };
}