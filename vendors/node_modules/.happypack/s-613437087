'use strict';

exports.__esModule = true;

var _modal = require('antd/lib/modal');

var _modal2 = _interopRequireDefault(_modal);

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _message2 = require('antd/lib/message');

var _message3 = _interopRequireDefault(_message2);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _dec, _class, _class2, _temp;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reactRedux = require('react-redux');

var _InterfaceEditForm = require('./InterfaceEditForm.js');

var _InterfaceEditForm2 = _interopRequireDefault(_InterfaceEditForm);

var _interface = require('../../../../reducer/modules/interface.js');

var _project = require('../../../../reducer/modules/project.js');

var _axios = require('axios');

var _axios2 = _interopRequireDefault(_axios);

require('./Edit.scss');

var _reactRouterDom = require('react-router-dom');

var _ProjectTag = require('../../Setting/ProjectMessage/ProjectTag.js');

var _ProjectTag2 = _interopRequireDefault(_ProjectTag);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var InterfaceEdit = (_dec = (0, _reactRedux.connect)(function (state) {
  return {
    curdata: state.inter.curdata,
    currProject: state.project.currProject
  };
}, {
  updateInterfaceData: _interface.updateInterfaceData,
  fetchInterfaceListMenu: _interface.fetchInterfaceListMenu,
  fetchInterfaceData: _interface.fetchInterfaceData,
  getProject: _project.getProject
}), _dec(_class = (_temp = _class2 = function (_Component) {
  (0, _inherits3.default)(InterfaceEdit, _Component);

  function InterfaceEdit(props) {
    var _this2 = this;

    (0, _classCallCheck3.default)(this, InterfaceEdit);

    var _this = (0, _possibleConstructorReturn3.default)(this, _Component.call(this, props));

    _this.onSubmit = function () {
      var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee(params) {
        var result;
        return _regenerator2.default.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                params.id = _this.props.match.params.actionId;
                _context.next = 3;
                return _axios2.default.post('/api/interface/up', params);

              case 3:
                result = _context.sent;

                _this.props.fetchInterfaceListMenu(_this.props.currProject._id).then();
                _this.props.fetchInterfaceData(params.id).then();
                if (result.data.errcode === 0) {
                  _this.props.updateInterfaceData(params);
                  _message3.default.success('保存成功');
                } else {
                  _message3.default.error(result.data.errmsg);
                }

              case 7:
              case 'end':
                return _context.stop();
            }
          }
        }, _callee, _this2);
      }));

      return function (_x) {
        return _ref.apply(this, arguments);
      };
    }();

    _this.onTagClick = function () {
      _this.setState({
        visible: true
      });
    };

    _this.handleOk = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee2() {
      var tag, id, params, result;
      return _regenerator2.default.wrap(function _callee2$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              tag = _this.tag.state.tag;

              tag = tag.filter(function (val) {
                return val.name !== '';
              });

              id = _this.props.currProject._id;
              params = {
                id: id,
                tag: tag
              };
              _context2.next = 6;
              return _axios2.default.post('/api/project/up_tag', params);

            case 6:
              result = _context2.sent;

              if (!(result.data.errcode === 0)) {
                _context2.next = 13;
                break;
              }

              _context2.next = 10;
              return _this.props.getProject(id);

            case 10:
              _message3.default.success('保存成功');
              _context2.next = 14;
              break;

            case 13:
              _message3.default.error(result.data.errmsg);

            case 14:

              _this.setState({
                visible: false
              });

            case 15:
            case 'end':
              return _context2.stop();
          }
        }
      }, _callee2, _this2);
    }));

    _this.handleCancel = function () {
      _this.setState({
        visible: false
      });
    };

    _this.tagSubmit = function (tagRef) {
      _this.tag = tagRef;

      // this.setState({tag})
    };

    var _this$props = _this.props,
        curdata = _this$props.curdata,
        currProject = _this$props.currProject;

    _this.state = {
      mockUrl: location.protocol + '//' + location.hostname + (location.port !== '' ? ':' + location.port : '') + ('/mock/' + currProject._id + currProject.basepath + curdata.path),
      curdata: {},
      status: 0,
      visible: false
      // tag: []
    };
    return _this;
  }

  InterfaceEdit.prototype.componentWillUnmount = function componentWillUnmount() {
    try {
      if (this.state.status === 1) {
        this.WebSocket.close();
      }
    } catch (e) {
      return null;
    }
  };

  InterfaceEdit.prototype.componentDidMount = function componentDidMount() {
    var _this3 = this;

    var domain = location.hostname + (location.port !== '' ? ':' + location.port : '');
    var s = void 0,
        initData = false;
    //因后端 node 仅支持 ws， 暂不支持 wss
    var wsProtocol = location.protocol === 'https:' ? 'wss' : 'ws';

    setTimeout(function () {
      if (initData === false) {
        _this3.setState({
          curdata: _this3.props.curdata,
          status: 1
        });
        initData = true;
      }
    }, 3000);

    try {
      s = new WebSocket(wsProtocol + '://' + domain + '/api/interface/solve_conflict?id=' + this.props.match.params.actionId);
      s.onopen = function () {
        _this3.WebSocket = s;
      };

      s.onmessage = function (e) {
        initData = true;
        var result = JSON.parse(e.data);
        if (result.errno === 0) {
          _this3.setState({
            curdata: result.data,
            status: 1
          });
        } else {
          _this3.setState({
            curdata: result.data,
            status: 2
          });
        }
      };

      s.onerror = function () {
        _this3.setState({
          curdata: _this3.props.curdata,
          status: 1
        });
        console.warn('websocket 连接失败，将导致多人编辑同一个接口冲突。');
      };
    } catch (e) {
      this.setState({
        curdata: this.props.curdata,
        status: 1
      });
      console.error('websocket 连接失败，将导致多人编辑同一个接口冲突。');
    }
  };

  InterfaceEdit.prototype.render = function render() {
    var _props$currProject = this.props.currProject,
        cat = _props$currProject.cat,
        basepath = _props$currProject.basepath,
        switch_notice = _props$currProject.switch_notice,
        tag = _props$currProject.tag;

    return _react2.default.createElement(
      'div',
      { className: 'interface-edit' },
      this.state.status === 1 ? _react2.default.createElement(_InterfaceEditForm2.default, {
        cat: cat,
        mockUrl: this.state.mockUrl,
        basepath: basepath,
        noticed: switch_notice,
        onSubmit: this.onSubmit,
        curdata: this.state.curdata,
        onTagClick: this.onTagClick
      }) : null,
      this.state.status === 2 ? _react2.default.createElement(
        'div',
        { style: { textAlign: 'center', fontSize: '14px', paddingTop: '10px' } },
        _react2.default.createElement(
          _reactRouterDom.Link,
          { to: '/user/profile/' + this.state.curdata.uid },
          _react2.default.createElement(
            'b',
            null,
            this.state.curdata.username
          )
        ),
        _react2.default.createElement(
          'span',
          null,
          '\u6B63\u5728\u7F16\u8F91\u8BE5\u63A5\u53E3\uFF0C\u8BF7\u7A0D\u540E\u518D\u8BD5...'
        )
      ) : null,
      this.state.status === 0 && '正在加载，请耐心等待...',
      _react2.default.createElement(
        _modal2.default,
        {
          title: 'Tag \u8BBE\u7F6E',
          width: 680,
          visible: this.state.visible,
          onOk: this.handleOk,
          onCancel: this.handleCancel,
          okText: '\u4FDD\u5B58'
        },
        _react2.default.createElement(
          'div',
          { className: 'tag-modal-center' },
          _react2.default.createElement(_ProjectTag2.default, { tagMsg: tag, ref: this.tagSubmit })
        )
      )
    );
  };

  return InterfaceEdit;
}(_react.PureComponent), _class2.propTypes = {
  curdata: _propTypes2.default.object,
  currProject: _propTypes2.default.object,
  updateInterfaceData: _propTypes2.default.func,
  fetchInterfaceListMenu: _propTypes2.default.func,
  fetchInterfaceData: _propTypes2.default.func,
  match: _propTypes2.default.object,
  switchToView: _propTypes2.default.func,
  getProject: _propTypes2.default.func
}, _temp)) || _class);
exports.default = (0, _reactRouterDom.withRouter)(InterfaceEdit);