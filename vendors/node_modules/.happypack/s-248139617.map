{"version":3,"sources":["client\\containers\\Project\\Interface\\Interface.js"],"names":["Content","Sider","contentRouter","path","exact","InterfaceRoute","C","props","match","params","action","actionId","InterfaceList","isNaN","InterfaceContent","indexOf","InterfaceColContent","InterfaceCaseContent","history","replace","id","propTypes","PropTypes","object","Interface","isShowCol","state","interfaceCol","setColData","getProject","onChange","push","componentWillMount","render","activeKey","minHeight","marginLeft","marginTop","height","location","pathname","margin","overflow","backgroundColor","Component","bool","func"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AAEA;;AACA;;AAGA;;AAEA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;IAZQA,O,oBAAAA,O;IAASC,K,oBAAAA,K;;AAajB,IAAMC,gBAAgB;AACpBC,QAAM,0CADc;AAEpBC,SAAO;AAFa,CAAtB;;AAKA,IAAMC,iBAAiB,SAAjBA,cAAiB,QAAS;AAC9B,MAAIC,UAAJ;AACA,MAAIC,MAAMC,KAAN,CAAYC,MAAZ,CAAmBC,MAAnB,KAA8B,KAAlC,EAAyC;AACvC,QAAI,CAACH,MAAMC,KAAN,CAAYC,MAAZ,CAAmBE,QAAxB,EAAkC;AAChCL,UAAIM,uBAAJ;AACD,KAFD,MAEO,IAAI,CAACC,MAAMN,MAAMC,KAAN,CAAYC,MAAZ,CAAmBE,QAAzB,CAAL,EAAyC;AAC9CL,UAAIQ,0BAAJ;AACD,KAFM,MAEA,IAAIP,MAAMC,KAAN,CAAYC,MAAZ,CAAmBE,QAAnB,CAA4BI,OAA5B,CAAoC,MAApC,MAAgD,CAApD,EAAuD;AAC5DT,UAAIM,uBAAJ;AACD;AACF,GARD,MAQO,IAAIL,MAAMC,KAAN,CAAYC,MAAZ,CAAmBC,MAAnB,KAA8B,KAAlC,EAAyC;AAC9CJ,QAAIU,6BAAJ;AACD,GAFM,MAEA,IAAIT,MAAMC,KAAN,CAAYC,MAAZ,CAAmBC,MAAnB,KAA8B,MAAlC,EAA0C;AAC/CJ,QAAIW,8BAAJ;AACD,GAFM,MAEA;AACL,QAAMR,SAASF,MAAMC,KAAN,CAAYC,MAA3B;AACAF,UAAMW,OAAN,CAAcC,OAAd,CAAsB,cAAcV,OAAOW,EAArB,GAA0B,gBAAhD;AACA,WAAO,IAAP;AACD;AACD,SAAO,8BAAC,CAAD,EAAOb,KAAP,CAAP;AACD,CApBD;;AAsBAF,eAAegB,SAAf,GAA2B;AACzBb,SAAOc,oBAAUC,MADQ;AAEzBL,WAASI,oBAAUC;AAFM,CAA3B;;IAgBMC,S,WAXL,yBACC,iBAAS;AACP,SAAO;AACLC,eAAWC,MAAMC,YAAN,CAAmBF;AADzB,GAAP;AAGD,CALF,EAMC;AACEG,sCADF;AAEEC;AAFF,CAND,C;;;AAsBC,qBAAYtB,KAAZ,EAAmB;AAAA;;AAEjB;AACA;AACA;AAJiB,+DACjB,sBAAMA,KAAN,CADiB;;AAAA,UAOnBuB,QAPmB,GAOR,kBAAU;AACnB,UAAIrB,SAAS,MAAKF,KAAL,CAAWC,KAAX,CAAiBC,MAA9B;AACA,UAAIC,WAAW,WAAf,EAA4B;AAC1BA,iBAAS,MAAKH,KAAL,CAAWkB,SAAX,GAAuB,KAAvB,GAA+B,MAAxC;AACD;AACD,YAAKlB,KAAL,CAAWW,OAAX,CAAmBa,IAAnB,CAAwB,cAActB,OAAOW,EAArB,GAA0B,aAA1B,GAA0CV,MAAlE;AACD,KAbkB;;AAAA;AAKlB;;sBASKsB,kB;;;;;;AACJ,mBAAKzB,KAAL,CAAWqB,UAAX,CAAsB;AACpBH,2BAAW;AADS,eAAtB;AAGA;;;;;;;;;;;;;;;;;sBAEFQ,M,qBAAS;AAAA,QACCvB,MADD,GACY,KAAKH,KAAL,CAAWC,KAAX,CAAiBC,MAD7B,CACCC,MADD;AAEP;;AACA,QAAMwB,YAAYxB,WAAW,KAAX,GAAmB,KAAnB,GAA2B,WAA7C;;AAEA,WACE;AAAA;AAAA,QAAQ,OAAO,EAAEyB,WAAW,qBAAb,EAAoCC,YAAY,MAAhD,EAAwDC,WAAW,MAAnE,EAAf;AACE;AAAC,aAAD;AAAA,UAAO,OAAO,EAAEC,QAAQ,MAAV,EAAd,EAAkC,OAAO,GAAzC;AACE;AAAA;AAAA,YAAK,WAAU,WAAf;AACE;AAAA;AAAA,cAAM,MAAK,MAAX,EAAkB,WAAU,YAA5B,EAAyC,WAAWJ,SAApD,EAA+D,UAAU,KAAKJ,QAA9E;AACE,yDAAM,OAAN,IAAc,KAAI,0BAAlB,EAAyB,KAAI,KAA7B,GADF;AAEE,yDAAM,OAAN,IAAc,KAAI,0BAAlB,EAAyB,KAAI,WAA7B;AAFF,WADF;AAKGI,wBAAc,KAAd,GACC,8BAAC,uBAAD;AACE,oBAAQ,+BAAU,KAAK3B,KAAL,CAAWgC,QAAX,CAAoBC,QAA9B,EAAwCtC,aAAxC,CADV;AAEE,uBAAW,KAAKK,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBW;AAFrC,YADD,GAMC,8BAAC,0BAAD;AACE,oBAAQ,+BAAU,KAAKb,KAAL,CAAWgC,QAAX,CAAoBC,QAA9B,EAAwCtC,aAAxC,CADV;AAEE,uBAAW,KAAKK,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBW;AAFrC;AAXJ;AADF,OADF;AAoBE;AAAA;AAAA;AACE;AAAC,iBAAD;AAAA;AACE,mBAAO;AACLkB,sBAAQ,MADH;AAELG,sBAAQ,eAFH;AAGLC,wBAAU,SAHL;AAILC,+BAAiB;AAJZ;AADT;AAQE;AAAA;AAAA,cAAK,WAAU,eAAf;AACE;AAAC,oCAAD;AAAA;AACE,4CAAC,qBAAD,IAAO,WAAP,EAAa,MAAK,gCAAlB,EAAmD,WAAWtC,cAA9D,GADF;AAEE,4CAAC,qBAAD,6BAAWH,aAAX,IAA0B,WAAWG,cAArC;AAFF;AADF;AARF;AADF;AApBF,KADF;AAwCD,G;;;EA5EqBuC,oB,WACfvB,S,GAAY;AACjBb,SAAOc,oBAAUC,MADA;AAEjBL,WAASI,oBAAUC,MAFF;AAGjBgB,YAAUjB,oBAAUC,MAHH;AAIjBE,aAAWH,oBAAUuB,IAJJ;AAKjBhB,cAAYP,oBAAUwB,IALL;AAMjBlB,cAAYN,oBAAUwB;AACtB;AAPiB,C;kBA8ENtB,S","file":"Interface.js","sourceRoot":"C:/Users/DUOYI/Desktop/api/test/vendors","sourcesContent":["import React, { PureComponent as Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Tabs, Layout } from 'antd';\nimport { Route, Switch, matchPath } from 'react-router-dom';\nimport { connect } from 'react-redux';\nconst { Content, Sider } = Layout;\n\nimport './interface.scss';\n\nimport InterfaceMenu from './InterfaceList/InterfaceMenu.js';\nimport InterfaceList from './InterfaceList/InterfaceList.js';\nimport InterfaceContent from './InterfaceList/InterfaceContent.js';\n\nimport InterfaceColMenu from './InterfaceCol/InterfaceColMenu.js';\nimport InterfaceColContent from './InterfaceCol/InterfaceColContent.js';\nimport InterfaceCaseContent from './InterfaceCol/InterfaceCaseContent.js';\nimport { getProject } from '../../../reducer/modules/project';\nimport { setColData } from '../../../reducer/modules/interfaceCol.js';\nconst contentRouter = {\n  path: '/project/:id/interface/:action/:actionId',\n  exact: true\n};\n\nconst InterfaceRoute = props => {\n  let C;\n  if (props.match.params.action === 'api') {\n    if (!props.match.params.actionId) {\n      C = InterfaceList;\n    } else if (!isNaN(props.match.params.actionId)) {\n      C = InterfaceContent;\n    } else if (props.match.params.actionId.indexOf('cat_') === 0) {\n      C = InterfaceList;\n    }\n  } else if (props.match.params.action === 'col') {\n    C = InterfaceColContent;\n  } else if (props.match.params.action === 'case') {\n    C = InterfaceCaseContent;\n  } else {\n    const params = props.match.params;\n    props.history.replace('/project/' + params.id + '/interface/api');\n    return null;\n  }\n  return <C {...props} />;\n};\n\nInterfaceRoute.propTypes = {\n  match: PropTypes.object,\n  history: PropTypes.object\n};\n\n@connect(\n  state => {\n    return {\n      isShowCol: state.interfaceCol.isShowCol\n    };\n  },\n  {\n    setColData,\n    getProject\n  }\n)\nclass Interface extends Component {\n  static propTypes = {\n    match: PropTypes.object,\n    history: PropTypes.object,\n    location: PropTypes.object,\n    isShowCol: PropTypes.bool,\n    getProject: PropTypes.func,\n    setColData: PropTypes.func\n    // fetchInterfaceColList: PropTypes.func\n  };\n\n  constructor(props) {\n    super(props);\n    // this.state = {\n    //   curkey: this.props.match.params.action === 'api' ? 'api' : 'colOrCase'\n    // }\n  }\n\n  onChange = action => {\n    let params = this.props.match.params;\n    if (action === 'colOrCase') {\n      action = this.props.isShowCol ? 'col' : 'case';\n    }\n    this.props.history.push('/project/' + params.id + '/interface/' + action);\n  };\n  async componentWillMount() {\n    this.props.setColData({\n      isShowCol: true\n    });\n    // await this.props.fetchInterfaceColList(this.props.match.params.id)\n  }\n  render() {\n    const { action } = this.props.match.params;\n    // const activeKey = this.state.curkey;\n    const activeKey = action === 'api' ? 'api' : 'colOrCase';\n\n    return (\n      <Layout style={{ minHeight: 'calc(100vh - 156px)', marginLeft: '24px', marginTop: '24px' }}>\n        <Sider style={{ height: '100%' }} width={300}>\n          <div className=\"left-menu\">\n            <Tabs type=\"card\" className=\"tabs-large\" activeKey={activeKey} onChange={this.onChange}>\n              <Tabs.TabPane tab=\"接口列表\" key=\"api\" />\n              <Tabs.TabPane tab=\"测试集合\" key=\"colOrCase\" />\n            </Tabs>\n            {activeKey === 'api' ? (\n              <InterfaceMenu\n                router={matchPath(this.props.location.pathname, contentRouter)}\n                projectId={this.props.match.params.id}\n              />\n            ) : (\n              <InterfaceColMenu\n                router={matchPath(this.props.location.pathname, contentRouter)}\n                projectId={this.props.match.params.id}\n              />\n            )}\n          </div>\n        </Sider>\n        <Layout>\n          <Content\n            style={{\n              height: '100%',\n              margin: '0 24px 0 16px',\n              overflow: 'initial',\n              backgroundColor: '#fff'\n            }}\n          >\n            <div className=\"right-content\">\n              <Switch>\n                <Route exact path=\"/project/:id/interface/:action\" component={InterfaceRoute} />\n                <Route {...contentRouter} component={InterfaceRoute} />\n              </Switch>\n            </div>\n          </Content>\n        </Layout>\n      </Layout>\n    );\n  }\n}\n\nexport default Interface;\n"]}