{"version":3,"sources":["client\\containers\\Project\\Activity\\Activity.js"],"names":["Activity","uid","state","user","curdata","inter","currProject","project","props","render","display","location","protocol","hostname","port","_id","basepath","match","params","id","Component","propTypes","PropTypes","string","getMockUrl","func","object"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;;;AACA;;;;AACA;;AACA;;;;;;IASMA,Q,WAPL,yBAAQ,iBAAS;AAChB,SAAO;AACLC,SAAKC,MAAMC,IAAN,CAAWF,GAAX,GAAiB,EADjB;AAELG,aAASF,MAAMG,KAAN,CAAYD,OAFhB;AAGLE,iBAAaJ,MAAMK,OAAN,CAAcD;AAHtB,GAAP;AAKD,CANA,C;;;AAQC,oBAAYE,KAAZ,EAAmB;AAAA;AAAA,0DACjB,sBAAMA,KAAN,CADiB;AAElB;;qBAQDC,M,qBAAS;AAAA,QACDH,WADC,GACe,KAAKE,KADpB,CACDF,WADC;;AAEP,WACE;AAAA;AAAA,QAAK,WAAU,OAAf;AACE;AAAA;AAAA,UAAS,WAAU,kBAAnB;AACE;AAAA;AAAA,YAAK,OAAO,EAAEI,SAAS,MAAX,EAAZ,EAAiC,WAAU,SAA3C;AAEE;AAAA;AAAA,cAAK,WAAU,YAAf;AACE;AAAA;AAAA;AAAA;AAAA;AADF,WAFF;AAKE;AAAA;AAAA,cAAK,WAAU,SAAf;AACE;AAAA;AAAA;AAAA;AAAA,aADF;AAEE;AAAA;AAAA;AACGC,uBAASC,QAAT,GACC,IADD,GAECD,SAASE,QAFV,IAGEF,SAASG,IAAT,KAAkB,EAAlB,GAAuB,MAAMH,SAASG,IAAtC,GAA6C,EAH/C,gBAIUR,YAAYS,GAJtB,GAI4BT,YAAYU,QAJxC;AADH,aAFF;AASE;AAAA;AAAA,gBAAQ,MAAK,SAAb;AACE;AAAA;AAAA,kBAAG,4CAA0C,KAAKR,KAAL,CAAWS,KAAX,CAAiBC,MAAjB,CAAwBC,EAArE;AAAA;AAAA;AADF;AATF;AALF,SADF;AAsBE,sCAAC,kBAAD,IAAU,MAAM,SAAhB,EAA2B,QAAQ,CAAC,KAAKX,KAAL,CAAWS,KAAX,CAAiBC,MAAjB,CAAwBC,EAA5D;AAtBF;AADF,KADF;AA4BD,G;;;EAzCoBC,oB,WAIdC,S,GAAY;AACjBpB,OAAKqB,oBAAUC,MADE;AAEjBC,cAAYF,oBAAUG,IAFL;AAGjBR,SAAOK,oBAAUI,MAHA;AAIjBtB,WAASkB,oBAAUI,MAJF;AAKjBpB,eAAagB,oBAAUI;AALN,C;kBAwCN1B,Q","file":"Activity.js","sourceRoot":"C:/Users/DUOYI/Desktop/api/test/vendors","sourcesContent":["import './Activity.scss';\nimport React, { PureComponent as Component } from 'react';\nimport TimeTree from '../../../components/TimeLine/TimeLine';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Button } from 'antd';\n@connect(state => {\n  return {\n    uid: state.user.uid + '',\n    curdata: state.inter.curdata,\n    currProject: state.project.currProject\n  };\n})\nclass Activity extends Component {\n  constructor(props) {\n    super(props);\n  }\n  static propTypes = {\n    uid: PropTypes.string,\n    getMockUrl: PropTypes.func,\n    match: PropTypes.object,\n    curdata: PropTypes.object,\n    currProject: PropTypes.object\n  };\n  render() {\n    let { currProject } = this.props;\n    return (\n      <div className=\"g-row\">\n        <section className=\"news-box m-panel\">\n          <div style={{ display: 'none' }} className=\"logHead\">\n            {/*<Breadcrumb />*/}\n            <div className=\"projectDes\">\n              <p>高效、易用、可部署的API管理平台</p>\n            </div>\n            <div className=\"Mockurl\">\n              <span>Mock地址：</span>\n              <p>\n                {location.protocol +\n                  '//' +\n                  location.hostname +\n                  (location.port !== '' ? ':' + location.port : '') +\n                  `/mock/${currProject._id}${currProject.basepath}/yourPath`}\n              </p>\n              <Button type=\"primary\">\n                <a href={`/api/project/download?project_id=${this.props.match.params.id}`}>\n                  下载Mock数据\n                </a>\n              </Button>\n            </div>\n          </div>\n          <TimeTree type={'project'} typeid={+this.props.match.params.id} />\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default Activity;\n"]}