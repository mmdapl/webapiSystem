'use strict';

exports.__esModule = true;

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

exports.fetchInterfaceColList = fetchInterfaceColList;
exports.fetchCaseData = fetchCaseData;
exports.fetchCaseList = fetchCaseList;
exports.fetchCaseEnvList = fetchCaseEnvList;
exports.fetchVariableParamsList = fetchVariableParamsList;
exports.setColData = setColData;

var _axios = require('axios');

var _axios2 = _interopRequireDefault(_axios);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Actions
var FETCH_INTERFACE_COL_LIST = 'yapi/interfaceCol/FETCH_INTERFACE_COL_LIST';
var FETCH_CASE_DATA = 'yapi/interfaceCol/FETCH_CASE_DATA';
var FETCH_CASE_LIST = 'yapi/interfaceCol/FETCH_CASE_LIST';
var SET_COL_DATA = 'yapi/interfaceCol/SET_COL_DATA';
var FETCH_VARIABLE_PARAMS_LIST = 'yapi/interfaceCol/FETCH_VARIABLE_PARAMS_LIST';
var FETCH_CASE_ENV_LIST = 'yapi/interfaceCol/FETCH_CASE_ENV_LIST';
// Reducer
var initialState = {
  interfaceColList: [{
    _id: 0,
    name: '',
    uid: 0,
    project_id: 0,
    desc: '',
    add_time: 0,
    up_time: 0,
    caseList: [{}]
  }],
  isShowCol: true,
  isRender: false,
  currColId: 0,
  currCaseId: 0,
  currCase: {},
  currCaseList: [],
  variableParamsList: [],
  envList: []
};

exports.default = function () {
  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
  var action = arguments[1];

  switch (action.type) {
    case FETCH_INTERFACE_COL_LIST:
      {
        return (0, _extends3.default)({}, state, {
          interfaceColList: action.payload.data.data
        });
      }
    case FETCH_CASE_DATA:
      {
        return (0, _extends3.default)({}, state, {
          currCase: action.payload.data.data
        });
      }
    case FETCH_CASE_LIST:
      {
        return (0, _extends3.default)({}, state, {
          currCaseList: action.payload.data.data
        });
      }

    case FETCH_VARIABLE_PARAMS_LIST:
      {
        return (0, _extends3.default)({}, state, {
          variableParamsList: action.payload.data.data
        });
      }
    case SET_COL_DATA:
      {
        return (0, _extends3.default)({}, state, action.payload);
      }
    case FETCH_CASE_ENV_LIST:
      {
        return (0, _extends3.default)({}, state, {
          envList: action.payload.data.data
        });
      }
    default:
      return state;
  }
};

// Action Creators


function fetchInterfaceColList(projectId) {
  return {
    type: FETCH_INTERFACE_COL_LIST,
    payload: _axios2.default.get('/api/col/list?project_id=' + projectId)
  };
}

function fetchCaseData(caseId) {
  return {
    type: FETCH_CASE_DATA,
    payload: _axios2.default.get('/api/col/case?caseid=' + caseId)
  };
}

function fetchCaseList(colId) {
  return {
    type: FETCH_CASE_LIST,
    payload: _axios2.default.get('/api/col/case_list/?col_id=' + colId)
  };
}

function fetchCaseEnvList(col_id) {
  return {
    type: FETCH_CASE_ENV_LIST,
    payload: _axios2.default.get('/api/col/case_env_list', {
      params: { col_id: col_id }
    })
  };
}

function fetchVariableParamsList(colId) {
  return {
    type: FETCH_VARIABLE_PARAMS_LIST,
    payload: _axios2.default.get('/api/col/case_list_by_var_params?col_id=' + colId)
  };
}

function setColData(data) {
  return {
    type: SET_COL_DATA,
    payload: data
  };
}