'use strict';

var _button = require('antd/lib/button');

var _button2 = _interopRequireDefault(_button);

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _switch = require('antd/lib/switch');

var _switch2 = _interopRequireDefault(_switch);

var _tooltip = require('antd/lib/tooltip');

var _tooltip2 = _interopRequireDefault(_tooltip);

var _icon = require('antd/lib/icon');

var _icon2 = _interopRequireDefault(_icon);

var _radio = require('antd/lib/radio');

var _radio2 = _interopRequireDefault(_radio);

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _message2 = require('antd/lib/message');

var _message3 = _interopRequireDefault(_message2);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _form = require('antd/lib/form');

var _form2 = _interopRequireDefault(_form);

var _class, _temp;
// import { connect } from 'react-redux'


var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _axios = require('axios');

var _axios2 = _interopRequireDefault(_axios);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reactRouterDom = require('react-router-dom');

var _MockCol = require('./MockCol/MockCol.js');

var _MockCol2 = _interopRequireDefault(_MockCol);

var _mockEditor = require('../../client/components/AceEditor/mockEditor');

var _mockEditor2 = _interopRequireDefault(_mockEditor);

var _variable = require('../../client/constants/variable.js');

var _variable2 = _interopRequireDefault(_variable);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var FormItem = _form2.default.Item;

var AdvMock = (_temp = _class = function (_Component) {
  (0, _inherits3.default)(AdvMock, _Component);

  function AdvMock(props) {
    (0, _classCallCheck3.default)(this, AdvMock);

    var _this = (0, _possibleConstructorReturn3.default)(this, _Component.call(this, props));

    _this.handleSubmit = function (e) {
      e.preventDefault();
      var projectId = _this.props.match.params.id;
      var interfaceId = _this.props.match.params.actionId;
      var params = {
        project_id: projectId,
        interface_id: interfaceId,
        mock_script: _this.state.mock_script,
        enable: _this.state.enable
      };
      _axios2.default.post('/api/plugin/advmock/save', params).then(function (res) {
        if (res.data.errcode === 0) {
          _message3.default.success('保存成功');
        } else {
          _message3.default.error(res.data.errmsg);
        }
      });
    };

    _this.onChange = function (v) {
      _this.setState({
        enable: v
      });
    };

    _this.handleTapChange = function (e) {
      _this.setState({
        tab: e.target.value
      });
    };

    _this.state = {
      enable: false,
      mock_script: '',
      tab: 'case'
    };
    return _this;
  }

  AdvMock.prototype.componentWillMount = function componentWillMount() {
    this.getAdvMockData();
  };

  AdvMock.prototype.getAdvMockData = function () {
    var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee() {
      var interfaceId, result, mockData, that;
      return _regenerator2.default.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              interfaceId = this.props.match.params.actionId;
              _context.next = 3;
              return _axios2.default.get('/api/plugin/advmock/get?interface_id=' + interfaceId);

            case 3:
              result = _context.sent;

              if (result.data.errcode === 0) {
                mockData = result.data.data;

                this.setState({
                  enable: mockData.enable,
                  mock_script: mockData.mock_script
                });
              }

              that = this;

              (0, _mockEditor2.default)({
                container: 'mock-script',
                data: that.state.mock_script,
                onChange: function onChange(d) {
                  that.setState({
                    mock_script: d.text
                  });
                }
              });

            case 7:
            case 'end':
              return _context.stop();
          }
        }
      }, _callee, this);
    }));

    function getAdvMockData() {
      return _ref.apply(this, arguments);
    }

    return getAdvMockData;
  }();

  AdvMock.prototype.render = function render() {
    var formItemLayout = {
      labelCol: {
        sm: { span: 4 }
      },
      wrapperCol: {
        sm: { span: 16 }
      }
    };
    var tailFormItemLayout = {
      wrapperCol: {
        sm: {
          span: 16,
          offset: 11
        }
      }
    };
    var tab = this.state.tab;

    var isShowCase = tab === 'case';
    return _react2.default.createElement(
      'div',
      { style: { padding: '20px 10px' } },
      _react2.default.createElement(
        'div',
        { style: { textAlign: 'center', marginBottom: 20 } },
        _react2.default.createElement(
          _radio2.default.Group,
          { value: tab, size: 'large', onChange: this.handleTapChange },
          _react2.default.createElement(
            _radio2.default.Button,
            { value: 'case' },
            '\u671F\u671B'
          ),
          _react2.default.createElement(
            _radio2.default.Button,
            { value: 'script' },
            '\u811A\u672C'
          )
        )
      ),
      _react2.default.createElement(
        'div',
        { style: { display: isShowCase ? 'none' : '' } },
        _react2.default.createElement(
          _form2.default,
          { onSubmit: this.handleSubmit },
          _react2.default.createElement(
            FormItem,
            (0, _extends3.default)({
              label: _react2.default.createElement(
                'span',
                null,
                '\u662F\u5426\u5F00\u542F\xA0',
                _react2.default.createElement(
                  'a',
                  {
                    target: '_blank',
                    rel: 'noopener noreferrer',
                    href: _variable2.default.docHref.adv_mock_script
                  },
                  _react2.default.createElement(
                    _tooltip2.default,
                    { title: '\u70B9\u51FB\u67E5\u770B\u6587\u6863' },
                    _react2.default.createElement(_icon2.default, { type: 'question-circle-o' })
                  )
                )
              )
            }, formItemLayout),
            _react2.default.createElement(_switch2.default, {
              checked: this.state.enable,
              onChange: this.onChange,
              checkedChildren: '\u5F00',
              unCheckedChildren: '\u5173'
            })
          ),
          _react2.default.createElement(
            FormItem,
            (0, _extends3.default)({ label: 'Mock\u811A\u672C' }, formItemLayout),
            _react2.default.createElement('div', { id: 'mock-script', style: { minHeight: '500px' } })
          ),
          _react2.default.createElement(
            FormItem,
            tailFormItemLayout,
            _react2.default.createElement(
              _button2.default,
              { type: 'primary', htmlType: 'submit' },
              '\u4FDD\u5B58'
            )
          )
        )
      ),
      _react2.default.createElement(
        'div',
        { style: { display: isShowCase ? '' : 'none' } },
        _react2.default.createElement(_MockCol2.default, null)
      )
    );
  };

  return AdvMock;
}(_react.Component), _class.propTypes = {
  form: _propTypes2.default.object,
  match: _propTypes2.default.object
}, _temp);


module.exports = _form2.default.create()((0, _reactRouterDom.withRouter)(AdvMock));