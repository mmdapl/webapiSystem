'use strict';

exports.__esModule = true;

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

exports.fetchGroupMsg = fetchGroupMsg;
exports.addMember = addMember;
exports.delMember = delMember;
exports.changeMemberRole = changeMemberRole;
exports.changeGroupMsg = changeGroupMsg;
exports.updateGroupList = updateGroupList;
exports.deleteGroup = deleteGroup;
exports.fetchGroupMemberList = fetchGroupMemberList;
exports.fetchGroupList = fetchGroupList;
exports.setCurrGroup = setCurrGroup;

var _axios = require('axios');

var _axios2 = _interopRequireDefault(_axios);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Actions
var FETCH_GROUP_LIST = 'yapi/group/FETCH_GROUP_LIST';
var SET_CURR_GROUP = 'yapi/group/SET_CURR_GROUP';
var FETCH_GROUP_MEMBER = 'yapi/group/FETCH_GROUP_MEMBER';
var FETCH_GROUP_MSG = 'yapi/group/FETCH_GROUP_MSG';
var ADD_GROUP_MEMBER = 'yapi/group/ADD_GROUP_MEMBER';
var DEL_GROUP_MEMBER = 'yapi/group/DEL_GROUP_MEMBER';
var CHANGE_GROUP_MEMBER = 'yapi/group/CHANGE_GROUP_MEMBER';
var CHANGE_GROUP_MESSAGE = 'yapi/group/CHANGE_GROUP_MESSAGE';
var UPDATE_GROUP_LIST = 'yapi/group/UPDATE_GROUP_LIST';
var DEL_GROUP = 'yapi/group/DEL_GROUP';

// Reducer
var initialState = {
  groupList: [],
  currGroup: {
    group_name: '',
    group_desc: '',
    custom_field1: {
      name: '',
      enable: false
    }
  },
  field: {
    name: '',
    enable: false
  },
  member: [],
  role: ''
};

exports.default = function () {
  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
  var action = arguments[1];

  switch (action.type) {
    case FETCH_GROUP_LIST:
      {
        return (0, _extends3.default)({}, state, {
          groupList: action.payload.data.data
        });
      }
    case UPDATE_GROUP_LIST:
      {
        return (0, _extends3.default)({}, state, {
          groupList: action.payload
        });
      }
    case SET_CURR_GROUP:
      {
        return (0, _extends3.default)({}, state, {
          currGroup: action.payload.data.data
        });
      }
    case FETCH_GROUP_MEMBER:
      {
        return (0, _extends3.default)({}, state, {
          member: action.payload.data.data
        });
      }
    case FETCH_GROUP_MSG:
      {
        console.log(action.payload);
        // const {role,group_name,group_desc,} = action.payload.data.data
        return (0, _extends3.default)({}, state, {
          role: action.payload.data.data.role,
          currGroup: action.payload.data.data,
          field: {
            name: action.payload.data.data.custom_field1.name,
            enable: action.payload.data.data.custom_field1.enable
          }
        });
      }

    default:
      return state;
  }
};

// 获取 group 信息 (权限信息)


function fetchGroupMsg(id) {
  return {
    type: FETCH_GROUP_MSG,
    payload: _axios2.default.get('/api/group/get', {
      params: { id: id }
    })
  };
}

// 添加分组成员
function addMember(param) {
  return {
    type: ADD_GROUP_MEMBER,
    payload: _axios2.default.post('/api/group/add_member', param)
  };
}

// 删除分组成员
function delMember(param) {
  return {
    type: DEL_GROUP_MEMBER,
    payload: _axios2.default.post('/api/group/del_member', param)
  };
}

// 修改分组成员权限
function changeMemberRole(param) {
  return {
    type: CHANGE_GROUP_MEMBER,
    payload: _axios2.default.post('/api/group/change_member_role', param)
  };
}

// 修改分组信息
function changeGroupMsg(param) {
  return {
    type: CHANGE_GROUP_MESSAGE,
    payload: _axios2.default.post('/api/group/up', param)
  };
}

// 更新左侧的分组列表
function updateGroupList(param) {
  return {
    type: UPDATE_GROUP_LIST,
    payload: param
  };
}

// 删除分组
function deleteGroup(param) {
  return {
    type: DEL_GROUP,
    payload: _axios2.default.post('/api/group/del', param)
  };
}

// 获取分组成员列表
function fetchGroupMemberList(id) {
  return {
    type: FETCH_GROUP_MEMBER,
    payload: _axios2.default.get('/api/group/get_member_list', {
      params: { id: id }
    })
  };
}

// Action Creators
function fetchGroupList() {
  return {
    type: FETCH_GROUP_LIST,
    payload: _axios2.default.get('/api/group/list')
  };
}

function setCurrGroup(group) {
  return {
    type: SET_CURR_GROUP,
    payload: _axios2.default.get('/api/group/get', {
      params: { id: group._id }
    })
  };
}