'use strict';

exports.__esModule = true;

var _button = require('antd/lib/button');

var _button2 = _interopRequireDefault(_button);

var _input = require('antd/lib/input');

var _input2 = _interopRequireDefault(_input);

var _icon = require('antd/lib/icon');

var _icon2 = _interopRequireDefault(_icon);

var _message2 = require('antd/lib/message');

var _message3 = _interopRequireDefault(_message2);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _form = require('antd/lib/form');

var _form2 = _interopRequireDefault(_form);

var _dec, _class, _class2, _temp;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reactRedux = require('react-redux');

var _user = require('../../reducer/modules/user');

var _reactRouter = require('react-router');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var FormItem = _form2.default.Item;
var formItemStyle = {
  marginBottom: '.16rem'
};

var changeHeight = {
  height: '.42rem'
};

var Reg = (_dec = (0, _reactRedux.connect)(function (state) {
  return {
    loginData: state.user
  };
}, {
  regActions: _user.regActions
}), _dec(_class = (0, _reactRouter.withRouter)(_class = (_temp = _class2 = function (_Component) {
  (0, _inherits3.default)(Reg, _Component);

  function Reg(props) {
    (0, _classCallCheck3.default)(this, Reg);

    var _this = (0, _possibleConstructorReturn3.default)(this, _Component.call(this, props));

    _this.handleSubmit = function (e) {
      e.preventDefault();
      var form = _this.props.form;
      form.validateFieldsAndScroll(function (err, values) {
        if (!err) {
          _this.props.regActions(values).then(function (res) {
            if (res.payload.data.errcode == 0) {
              _this.props.history.replace('/group');
              _message3.default.success('注册成功! ');
            }
          });
        }
      });
    };

    _this.checkPassword = function (rule, value, callback) {
      var form = _this.props.form;
      if (value && value !== form.getFieldValue('password')) {
        callback('两次输入的密码不一致啊!');
      } else {
        callback();
      }
    };

    _this.checkConfirm = function (rule, value, callback) {
      var form = _this.props.form;
      if (value && _this.state.confirmDirty) {
        form.validateFields(['confirm'], { force: true });
      }
      callback();
    };

    _this.state = {
      confirmDirty: false
    };
    return _this;
  }

  Reg.prototype.render = function render() {
    var getFieldDecorator = this.props.form.getFieldDecorator;

    return _react2.default.createElement(
      _form2.default,
      { onSubmit: this.handleSubmit },
      _react2.default.createElement(
        FormItem,
        { style: formItemStyle },
        getFieldDecorator('userName', {
          rules: [{ required: true, message: '请输入用户名!' }]
        })(_react2.default.createElement(_input2.default, {
          style: changeHeight,
          prefix: _react2.default.createElement(_icon2.default, { type: 'user', style: { fontSize: 13 } }),
          placeholder: 'Username'
        }))
      ),
      _react2.default.createElement(
        FormItem,
        { style: formItemStyle },
        getFieldDecorator('email', {
          rules: [{
            required: true,
            message: '请输入email!',
            pattern: /^\w+([\.-]?\w+)*@\w+([\.-]?\w+)*(\.\w{1,})+$/
          }]
        })(_react2.default.createElement(_input2.default, {
          style: changeHeight,
          prefix: _react2.default.createElement(_icon2.default, { type: 'mail', style: { fontSize: 13 } }),
          placeholder: 'Email'
        }))
      ),
      _react2.default.createElement(
        FormItem,
        { style: formItemStyle },
        getFieldDecorator('password', {
          rules: [{
            required: true,
            message: '请输入密码!'
          }, {
            validator: this.checkConfirm
          }]
        })(_react2.default.createElement(_input2.default, {
          style: changeHeight,
          prefix: _react2.default.createElement(_icon2.default, { type: 'lock', style: { fontSize: 13 } }),
          type: 'password',
          placeholder: 'Password'
        }))
      ),
      _react2.default.createElement(
        FormItem,
        { style: formItemStyle },
        getFieldDecorator('confirm', {
          rules: [{
            required: true,
            message: '请再次输入密码密码!'
          }, {
            validator: this.checkPassword
          }]
        })(_react2.default.createElement(_input2.default, {
          style: changeHeight,
          prefix: _react2.default.createElement(_icon2.default, { type: 'lock', style: { fontSize: 13 } }),
          type: 'password',
          placeholder: 'Confirm Password'
        }))
      ),
      _react2.default.createElement(
        FormItem,
        { style: formItemStyle },
        _react2.default.createElement(
          _button2.default,
          {
            style: changeHeight,
            type: 'primary',
            htmlType: 'submit',
            className: 'login-form-button'
          },
          '\u6CE8\u518C'
        )
      )
    );
  };

  return Reg;
}(_react.PureComponent), _class2.propTypes = {
  form: _propTypes2.default.object,
  history: _propTypes2.default.object,
  regActions: _propTypes2.default.func
}, _temp)) || _class) || _class);

var RegForm = _form2.default.create()(Reg);
exports.default = RegForm;