{"version":3,"sources":["exts\\yapi-plugin-statistics\\statisticsClientPage\\index.js"],"names":["CountOverview","props","date","groupCount","projectCount","interfaceCount","interfaceCaseCount","propTypes","PropTypes","object","StatusOverview","data","systemName","load","freemem","totalmem","mail","statisticsPage","setBreadcrumb","state","count","interfactCaseCount","status","uptime","dataTotal","componentWillMount","name","getStatisData","getSystemStatusData","getGroupData","axios","get","result","errcode","statisData","setState","statusData","map","item","render","Component","func"],"mappings":"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","file":"index.js","sourceRoot":"C:/Users/DUOYI/Desktop/api/test/vendors","sourcesContent":["/**\n * Created by gxl.gao on 2017/10/25.\n */\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\nimport './index.scss';\n// import { withRouter } from 'react-router-dom';\nimport { Row, Col, Tooltip, Icon } from 'antd';\nimport { setBreadcrumb } from 'client/reducer/modules/user';\nimport StatisChart from './StatisChart';\nimport StatisTable from './StatisTable';\n\nconst CountOverview = props => (\n  <Row type=\"flex\" justify=\"space-start\" className=\"m-row\">\n    <Col className=\"gutter-row\" span={6}>\n      <span>\n        分组总数\n        <Tooltip placement=\"rightTop\" title=\"统计yapi中一共开启了多少可见的公共分组\">\n          <Icon className=\"m-help\" type=\"question-circle\" />\n        </Tooltip>\n      </span>\n      <h2 className=\"gutter-box\">{props.date.groupCount}</h2>\n    </Col>\n    <Col className=\"gutter-row\" span={6}>\n      <span>\n        项目总数\n        <Tooltip placement=\"rightTop\" title=\"统计yapi中建立的所有项目总数\">\n          <Icon className=\"m-help\" type=\"question-circle\" />\n        </Tooltip>\n      </span>\n      <h2 className=\"gutter-box\">{props.date.projectCount}</h2>\n    </Col>\n    <Col className=\"gutter-row\" span={6}>\n      <span>\n        接口总数\n        <Tooltip placement=\"rightTop\" title=\"统计yapi所有项目中的所有接口总数\">\n          {/*<a href=\"javascript:void(0)\" className=\"m-a-help\">?</a>*/}\n          <Icon className=\"m-help\" type=\"question-circle\" />\n        </Tooltip>\n      </span>\n      <h2 className=\"gutter-box\">{props.date.interfaceCount}</h2>\n    </Col>\n    <Col className=\"gutter-row\" span={6}>\n      <span>\n        测试接口总数\n        <Tooltip placement=\"rightTop\" title=\"统计yapi所有项目中的所有测试接口总数\">\n          {/*<a href=\"javascript:void(0)\" className=\"m-a-help\">?</a>*/}\n          <Icon className=\"m-help\" type=\"question-circle\" />\n        </Tooltip>\n      </span>\n      <h2 className=\"gutter-box\">{props.date.interfaceCaseCount}</h2>\n    </Col>\n  </Row>\n);\n\nCountOverview.propTypes = {\n  date: PropTypes.object\n};\n\nconst StatusOverview = props => (\n  <Row type=\"flex\" justify=\"space-start\" className=\"m-row\">\n    <Col className=\"gutter-row\" span={6}>\n      <span>\n        操作系统类型\n        <Tooltip\n          placement=\"rightTop\"\n          title=\"操作系统类型,返回值有'darwin', 'freebsd', 'linux', 'sunos' , 'win32'\"\n        >\n          <Icon className=\"m-help\" type=\"question-circle\" />\n        </Tooltip>\n      </span>\n      <h2 className=\"gutter-box\">{props.data.systemName}</h2>\n    </Col>\n    <Col className=\"gutter-row\" span={6}>\n      <span>\n        cpu负载\n        <Tooltip placement=\"rightTop\" title=\"cpu的总负载情况\">\n          <Icon className=\"m-help\" type=\"question-circle\" />\n        </Tooltip>\n      </span>\n      <h2 className=\"gutter-box\">{props.data.load} %</h2>\n    </Col>\n    <Col className=\"gutter-row\" span={6}>\n      <span>\n        系统空闲内存总量 / 内存总量\n        <Tooltip placement=\"rightTop\" title=\"系统空闲内存总量 / 内存总量\">\n          <Icon className=\"m-help\" type=\"question-circle\" />\n        </Tooltip>\n      </span>\n      <h2 className=\"gutter-box\">\n        {props.data.freemem} G / {props.data.totalmem} G{' '}\n      </h2>\n    </Col>\n    <Col className=\"gutter-row\" span={6}>\n      <span>\n        邮箱状态\n        <Tooltip placement=\"rightTop\" title=\"检测配置文件中配置邮箱的状态\">\n          <Icon className=\"m-help\" type=\"question-circle\" />\n        </Tooltip>\n      </span>\n      <h2 className=\"gutter-box\">{props.data.mail}</h2>\n    </Col>\n  </Row>\n);\n\nStatusOverview.propTypes = {\n  data: PropTypes.object\n};\n\n@connect(\n  null,\n  {\n    setBreadcrumb\n  }\n)\nclass statisticsPage extends Component {\n  static propTypes = {\n    setBreadcrumb: PropTypes.func\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: {\n        groupCount: 0,\n        projectCount: 0,\n        interfaceCount: 0,\n        interfactCaseCount: 0\n      },\n      status: {\n        mail: '',\n        systemName: '',\n        totalmem: '',\n        freemem: '',\n        uptime: ''\n      },\n      dataTotal: []\n    };\n  }\n\n  async componentWillMount() {\n    this.props.setBreadcrumb([{ name: '系统信息' }]);\n    this.getStatisData();\n    this.getSystemStatusData();\n    this.getGroupData();\n  }\n\n  // 获取统计数据\n  async getStatisData() {\n    let result = await axios.get('/api/plugin/statismock/count');\n    if (result.data.errcode === 0) {\n      let statisData = result.data.data;\n      this.setState({\n        count: { ...statisData }\n      });\n    }\n  }\n\n  // 获取系统信息\n\n  async getSystemStatusData() {\n    let result = await axios.get('/api/plugin/statismock/get_system_status');\n    if (result.data.errcode === 0) {\n      let statusData = result.data.data;\n      this.setState({\n        status: { ...statusData }\n      });\n    }\n  }\n\n  // 获取分组详细信息\n\n  async getGroupData() {\n    let result = await axios.get('/api/plugin/statismock/group_data_statis');\n    if (result.data.errcode === 0) {\n      let statusData = result.data.data;\n      statusData.map(item => {\n        return (item['key'] = item.name);\n      });\n      this.setState({\n        dataTotal: statusData\n      });\n    }\n  }\n\n  render() {\n    const { count, status, dataTotal } = this.state;\n\n    return (\n      <div className=\"g-statistic\">\n        <div className=\"content\">\n          <h2 className=\"title\">系统状况</h2>\n          <div className=\"system-content\">\n            <StatusOverview data={status} />\n          </div>\n          <h2 className=\"title\">数据统计</h2>\n          <div>\n            <CountOverview date={count} />\n            <StatisTable dataSource={dataTotal} />\n            <StatisChart />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default statisticsPage;\n"]}