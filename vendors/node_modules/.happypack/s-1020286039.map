{"version":3,"sources":["client\\containers\\Project\\Setting\\ProjectMessage\\ProjectMessage.js"],"names":["TextArea","FormItem","Item","RadioGroup","Group","RadioButton","Button","confirm","formItemLayout","labelCol","lg","offset","span","xs","sm","wrapperCol","className","Option","ProjectMessage","projectList","state","project","groupList","group","projectMsg","currProject","currGroup","updateProject","delProject","getProject","fetchGroupMsg","upsetProject","fetchGroupList","setBreadcrumb","withRouter","props","handleOk","e","preventDefault","form","validateFields","err","values","tag","filter","val","name","assignValue","protocol","split","group_id","selectGroup","_","find","item","_id","then","res","payload","data","errcode","projectId","success","projectName","group_name","href","catch","resetFields","tagSubmit","showConfirm","that","title","content","marginTop","fontSize","lineHeight","marginBottom","onOk","groupName","document","getElementById","value","error","resolve","reject","history","push","iconType","onCancel","changeProjectColor","color","icon","id","target","changeProjectIcon","toggleDangerOptions","setState","showDangerOptions","componentWillMount","render","getFieldDecorator","mockUrl","location","hostname","port","basepath","initFormValues","desc","project_type","switch_notice","strice","is_json5","colorArr","constants","PROJECT_COLOR","colorSelector","map","index","backgroundColor","fontWeight","iconSelector","PROJECT_ICON","selectDisbaled","role","blue","initialValue","rules","required","message","toString","valuePropName","Component","propTypes","PropTypes","number","object","func","array","create"],"mappings":"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","file":"ProjectMessage.js","sourceRoot":"C:/Users/DUOYI/Desktop/api/test/vendors","sourcesContent":["import React, { PureComponent as Component } from 'react';\nimport {\n  Form,\n  Input,\n  Switch,\n  Select,\n  Icon,\n  Tooltip,\n  Button,\n  Row,\n  Col,\n  message,\n  Card,\n  Radio,\n  Alert,\n  Modal,\n  Popover\n} from 'antd';\nimport PropTypes from 'prop-types';\nimport {\n  updateProject,\n  delProject,\n  getProject,\n  upsetProject\n} from '../../../../reducer/modules/project';\nimport { fetchGroupMsg } from '../../../../reducer/modules/group';\nimport { fetchGroupList } from '../../../../reducer/modules/group.js';\nimport { setBreadcrumb } from '../../../../reducer/modules/user';\nimport { connect } from 'react-redux';\nconst { TextArea } = Input;\nimport { withRouter } from 'react-router';\nconst FormItem = Form.Item;\nconst RadioGroup = Radio.Group;\nconst RadioButton = Radio.Button;\nimport constants from '../../../../constants/variable.js';\nconst confirm = Modal.confirm;\nimport { nameLengthLimit, entries, trim, htmlFilter } from '../../../../common';\nimport '../Setting.scss';\nimport _ from 'underscore';\nimport ProjectTag from './ProjectTag.js';\n// layout\nconst formItemLayout = {\n  labelCol: {\n    lg: { offset: 1, span: 3 },\n    xs: { span: 24 },\n    sm: { span: 6 }\n  },\n  wrapperCol: {\n    lg: { span: 19 },\n    xs: { span: 24 },\n    sm: { span: 14 }\n  },\n  className: 'form-item'\n};\n\nconst Option = Select.Option;\n\n@connect(\n  state => {\n    return {\n      projectList: state.project.projectList,\n      groupList: state.group.groupList,\n      projectMsg: state.project.currProject,\n      currGroup: state.group.currGroup\n    };\n  },\n  {\n    updateProject,\n    delProject,\n    getProject,\n    fetchGroupMsg,\n    upsetProject,\n    fetchGroupList,\n    setBreadcrumb\n  }\n)\n@withRouter\nclass ProjectMessage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      protocol: 'http://',\n      projectMsg: {},\n      showDangerOptions: false\n    };\n  }\n  static propTypes = {\n    projectId: PropTypes.number,\n    form: PropTypes.object,\n    updateProject: PropTypes.func,\n    delProject: PropTypes.func,\n    getProject: PropTypes.func,\n    history: PropTypes.object,\n    fetchGroupMsg: PropTypes.func,\n    upsetProject: PropTypes.func,\n    groupList: PropTypes.array,\n    projectList: PropTypes.array,\n    projectMsg: PropTypes.object,\n    fetchGroupList: PropTypes.func,\n    currGroup: PropTypes.object,\n    setBreadcrumb: PropTypes.func\n  };\n\n  // 确认修改\n  handleOk = e => {\n    e.preventDefault();\n    const { form, updateProject, projectMsg, groupList } = this.props;\n    form.validateFields((err, values) => {\n      if (!err) {\n        let { tag } = this.tag.state;\n        // let tag = this.refs.tag;\n        tag = tag.filter(val => {\n          return val.name !== '';\n        });\n        let assignValue = Object.assign(projectMsg, values, { tag });\n\n        values.protocol = this.state.protocol.split(':')[0];\n        const group_id = assignValue.group_id;\n        const selectGroup = _.find(groupList, item => {\n          return item._id == group_id;\n        });\n\n        updateProject(assignValue)\n          .then(res => {\n            if (res.payload.data.errcode == 0) {\n              this.props.getProject(this.props.projectId);\n              message.success('修改成功! ');\n\n              // 如果如果项目所在的分组位置发生改变\n              this.props.fetchGroupMsg(group_id);\n              // this.props.history.push('/group');\n              let projectName = htmlFilter(assignValue.name);\n              this.props.setBreadcrumb([\n                {\n                  name: selectGroup.group_name,\n                  href: '/group/' + group_id\n                },\n                {\n                  name: projectName\n                }\n              ]);\n            }\n          })\n          .catch(() => {});\n        form.resetFields();\n      }\n    });\n  };\n\n  tagSubmit = tag => {\n    this.tag = tag;\n  };\n\n  showConfirm = () => {\n    let that = this;\n    confirm({\n      title: '确认删除 ' + that.props.projectMsg.name + ' 项目吗？',\n      content: (\n        <div style={{ marginTop: '10px', fontSize: '13px', lineHeight: '25px' }}>\n          <Alert\n            message=\"警告：此操作非常危险,会删除该项目下面所有接口，并且无法恢复!\"\n            type=\"warning\"\n            banner\n          />\n          <div style={{ marginTop: '16px' }}>\n            <p style={{ marginBottom: '8px' }}>\n              <b>请输入项目名称确认此操作:</b>\n            </p>\n            <Input id=\"project_name\" size=\"large\" />\n          </div>\n        </div>\n      ),\n      onOk() {\n        let groupName = trim(document.getElementById('project_name').value);\n        if (that.props.projectMsg.name !== groupName) {\n          message.error('项目名称有误');\n          return new Promise((resolve, reject) => {\n            reject('error');\n          });\n        } else {\n          that.props.delProject(that.props.projectId).then(res => {\n            if (res.payload.data.errcode == 0) {\n              message.success('删除成功!');\n              that.props.history.push('/group/' + that.props.projectMsg.group_id);\n            }\n          });\n        }\n      },\n      iconType: 'delete',\n      onCancel() {}\n    });\n  };\n\n  // 修改项目头像的背景颜色\n  changeProjectColor = e => {\n    const { _id, color, icon } = this.props.projectMsg;\n    this.props.upsetProject({ id: _id, color: e.target.value || color, icon }).then(res => {\n      if (res.payload.data.errcode === 0) {\n        this.props.getProject(this.props.projectId);\n      }\n    });\n  };\n  // 修改项目头像的图标\n  changeProjectIcon = e => {\n    const { _id, color, icon } = this.props.projectMsg;\n    this.props.upsetProject({ id: _id, color, icon: e.target.value || icon }).then(res => {\n      if (res.payload.data.errcode === 0) {\n        this.props.getProject(this.props.projectId);\n      }\n    });\n  };\n\n  // 点击“查看危险操作”按钮\n  toggleDangerOptions = () => {\n    // console.log(this.state.showDangerOptions);\n    this.setState({\n      showDangerOptions: !this.state.showDangerOptions\n    });\n  };\n\n  async componentWillMount() {\n    await this.props.fetchGroupList();\n    await this.props.fetchGroupMsg(this.props.projectMsg.group_id);\n  }\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const { projectMsg, currGroup } = this.props;\n    const mockUrl =\n      location.protocol +\n      '//' +\n      location.hostname +\n      (location.port !== '' ? ':' + location.port : '') +\n      `/mock/${projectMsg._id}${projectMsg.basepath}+$接口请求路径`;\n    let initFormValues = {};\n    const {\n      name,\n      basepath,\n      desc,\n      project_type,\n      group_id,\n      switch_notice,\n      strice,\n      is_json5,\n      tag\n    } = projectMsg;\n    initFormValues = {\n      name,\n      basepath,\n      desc,\n      project_type,\n      group_id,\n      switch_notice,\n      strice,\n      is_json5,\n      tag\n    };\n\n    const colorArr = entries(constants.PROJECT_COLOR);\n    const colorSelector = (\n      <RadioGroup onChange={this.changeProjectColor} value={projectMsg.color} className=\"color\">\n        {colorArr.map((item, index) => {\n          return (\n            <RadioButton\n              key={index}\n              value={item[0]}\n              style={{ backgroundColor: item[1], color: '#fff', fontWeight: 'bold' }}\n            >\n              {item[0] === projectMsg.color ? <Icon type=\"check\" /> : null}\n            </RadioButton>\n          );\n        })}\n      </RadioGroup>\n    );\n    const iconSelector = (\n      <RadioGroup onChange={this.changeProjectIcon} value={projectMsg.icon} className=\"icon\">\n        {constants.PROJECT_ICON.map(item => {\n          return (\n            <RadioButton key={item} value={item} style={{ fontWeight: 'bold' }}>\n              <Icon type={item} />\n            </RadioButton>\n          );\n        })}\n      </RadioGroup>\n    );\n    const selectDisbaled = projectMsg.role === 'owner' || projectMsg.role === 'admin';\n    return (\n      <div>\n        <div className=\"m-panel\">\n          <Row className=\"project-setting\">\n            <Col xs={6} lg={{ offset: 1, span: 3 }} className=\"setting-logo\">\n              <Popover\n                placement=\"bottom\"\n                title={colorSelector}\n                content={iconSelector}\n                trigger=\"click\"\n                overlayClassName=\"change-project-container\"\n              >\n                <Icon\n                  type={projectMsg.icon || 'star-o'}\n                  className=\"ui-logo\"\n                  style={{\n                    backgroundColor:\n                      constants.PROJECT_COLOR[projectMsg.color] || constants.PROJECT_COLOR.blue\n                  }}\n                />\n              </Popover>\n            </Col>\n            <Col xs={18} sm={15} lg={19} className=\"setting-intro\">\n              <h2 className=\"ui-title\">\n                {(currGroup.group_name || '') + ' / ' + (projectMsg.name || '')}\n              </h2>\n              {/* <p className=\"ui-desc\">{projectMsg.desc}</p> */}\n            </Col>\n          </Row>\n          <hr className=\"breakline\" />\n          <Form>\n            <FormItem {...formItemLayout} label=\"项目ID\">\n              <span>{this.props.projectMsg._id}</span>\n            </FormItem>\n            <FormItem {...formItemLayout} label=\"项目名称\">\n              {getFieldDecorator('name', {\n                initialValue: initFormValues.name,\n                rules: nameLengthLimit('项目')\n              })(<Input />)}\n            </FormItem>\n            <FormItem {...formItemLayout} label=\"所属分组\">\n              {getFieldDecorator('group_id', {\n                initialValue: initFormValues.group_id + '',\n                rules: [\n                  {\n                    required: true,\n                    message: '请选择项目所属的分组!'\n                  }\n                ]\n              })(\n                <Select disabled={!selectDisbaled}>\n                  {this.props.groupList.map((item, index) => (\n                    <Option value={item._id.toString()} key={index}>\n                      {item.group_name}\n                    </Option>\n                  ))}\n                </Select>\n              )}\n            </FormItem>\n\n            <FormItem\n              {...formItemLayout}\n              label={\n                <span>\n                  接口基本路径&nbsp;\n                  <Tooltip title=\"基本路径为空表示根路径\">\n                    <Icon type=\"question-circle-o\" />\n                  </Tooltip>\n                </span>\n              }\n            >\n              {getFieldDecorator('basepath', {\n                initialValue: initFormValues.basepath,\n                rules: [\n                  {\n                    required: false,\n                    message: '请输入基本路径! '\n                  }\n                ]\n              })(<Input />)}\n            </FormItem>\n\n            <FormItem\n              {...formItemLayout}\n              label={\n                <span>\n                  MOCK地址&nbsp;\n                  <Tooltip title=\"具体使用方法请查看文档\">\n                    <Icon type=\"question-circle-o\" />\n                  </Tooltip>\n                </span>\n              }\n            >\n              <Input disabled value={mockUrl} onChange={() => {}} />\n            </FormItem>\n\n            <FormItem {...formItemLayout} label=\"描述\">\n              {getFieldDecorator('desc', {\n                initialValue: initFormValues.desc,\n                rules: [\n                  {\n                    required: false\n                  }\n                ]\n              })(<TextArea rows={8} />)}\n            </FormItem>\n\n            <FormItem\n              {...formItemLayout}\n              label={\n                <span>\n                  tag 信息&nbsp;\n                  <Tooltip title=\"定义 tag 信息，过滤接口\">\n                    <Icon type=\"question-circle-o\" />\n                  </Tooltip>\n                </span>\n              }\n            >\n              <ProjectTag tagMsg={tag} ref={this.tagSubmit} />\n              {/* <Tag tagMsg={tag} ref={this.tagSubmit} /> */}\n            </FormItem>\n            <FormItem\n              {...formItemLayout}\n              label={\n                <span>\n                  mock严格模式&nbsp;\n                  <Tooltip title=\"开启后 mock 请求会对 query，body form 的必须字段和 json schema 进行校验\">\n                    <Icon type=\"question-circle-o\" />\n                  </Tooltip>\n                </span>\n              }\n            >\n              {getFieldDecorator('strice', {\n                valuePropName: 'checked',\n                initialValue: initFormValues.strice\n              })(<Switch checkedChildren=\"开\" unCheckedChildren=\"关\" />)}\n            </FormItem>\n            <FormItem\n              {...formItemLayout}\n              label={\n                <span>\n                  开启json5&nbsp;\n                  <Tooltip title=\"开启后可在接口 body 和返回值中写 json 字段\">\n                    <Icon type=\"question-circle-o\" />\n                  </Tooltip>\n                </span>\n              }\n            >\n              {getFieldDecorator('is_json5', {\n                valuePropName: 'checked',\n                initialValue: initFormValues.is_json5\n              })(<Switch checkedChildren=\"开\" unCheckedChildren=\"关\" />)}\n            </FormItem>\n            <FormItem {...formItemLayout} label=\"默认开启消息通知\">\n              {getFieldDecorator('switch_notice', {\n                valuePropName: 'checked',\n                initialValue: initFormValues.switch_notice\n              })(<Switch checkedChildren=\"开\" unCheckedChildren=\"关\" />)}\n            </FormItem>\n\n            <FormItem {...formItemLayout} label=\"权限\">\n              {getFieldDecorator('project_type', {\n                rules: [\n                  {\n                    required: true\n                  }\n                ],\n                initialValue: initFormValues.project_type\n              })(\n                <RadioGroup>\n                  <Radio value=\"private\" className=\"radio\">\n                    <Icon type=\"lock\" />私有<br />\n                    <span className=\"radio-desc\">只有组长和项目开发者可以索引并查看项目信息</span>\n                  </Radio>\n                  <br />\n                  {projectMsg.role === 'admin' && <Radio value=\"public\" className=\"radio\">\n                    <Icon type=\"unlock\" />公开<br />\n                    <span className=\"radio-desc\">任何人都可以索引并查看项目信息</span>\n                  </Radio>}\n                  \n                </RadioGroup>\n              )}\n            </FormItem>\n          </Form>\n\n          <div className=\"btnwrap-changeproject\">\n            <Button\n              className=\"m-btn btn-save\"\n              icon=\"save\"\n              type=\"primary\"\n              size=\"large\"\n              onClick={this.handleOk}\n            >\n              保 存\n            </Button>\n          </div>\n\n          {/* 只有组长和管理员有权限删除项目 */}\n          {projectMsg.role === 'owner' || projectMsg.role === 'admin' ? (\n            <div className=\"danger-container\">\n              <div className=\"title\">\n                <h2 className=\"content\">\n                  <Icon type=\"exclamation-circle-o\" /> 危险操作\n                </h2>\n                <Button onClick={this.toggleDangerOptions}>\n                  查 看<Icon type={this.state.showDangerOptions ? 'up' : 'down'} />\n                </Button>\n              </div>\n              {this.state.showDangerOptions ? (\n                <Card hoverable={true} className=\"card-danger\">\n                  <div className=\"card-danger-content\">\n                    <h3>删除项目</h3>\n                    <p>项目一旦删除，将无法恢复数据，请慎重操作！</p>\n                    <p>只有组长和管理员有权限删除项目。</p>\n                  </div>\n                  <Button\n                    type=\"danger\"\n                    ghost\n                    className=\"card-danger-btn\"\n                    onClick={this.showConfirm}\n                  >\n                    删除\n                  </Button>\n                </Card>\n              ) : null}\n            </div>\n          ) : null}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Form.create()(ProjectMessage);\n"]}