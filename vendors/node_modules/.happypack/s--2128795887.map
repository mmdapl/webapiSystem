{"version":3,"sources":["exts\\yapi-plugin-advanced-mock\\MockCol\\CaseDesModal.js"],"names":["Option","FormItem","Item","formItemLayout","labelCol","span","wrapperCol","formItemLayoutWithOutLabel","offset","CaseDesForm","currInterface","state","inter","curdata","props","caseData","preProcess","render","form","getFieldDecorator","getFieldValue","isAdd","visible","onCancel","name","code","headers","ip","ip_enable","params","paramsArr","paramsForm","res_body","delay","initialValue","valuesTpl","values","title","dataSource","getParamsKey","display","map","item","index","inputValue","option","children","toUpperCase","indexOf","value","length","removeValues","headersTpl","constants","HTTP_REQUEST_HEADER","handleOk","setState","marginTop","rules","required","message","valuePropName","type","pattern","IP_REGEXP","marginBottom","bool","addValues","width","handleParams","validator","jsonValidator","httpCodes","res_body_type","handleRequestBody","Component","propTypes","PropTypes","object","onOk","func","JSON","parse","error","console","log","initCaseData","key","filter","d","text","concat","setFieldsValue","val","index2","req_query","req_body_form","req_body_type","method","req_body_other","req_body_is_json_schema","req_params","keys","Array","isArray","forEach","push","HTTP_METHOD","request_body","bodyObj","json5","endProcess","validateFieldsAndScroll","err","CaseDesModal","create"],"mappings":"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","file":"CaseDesModal.js","sourceRoot":"C:/Users/DUOYI/Desktop/api/test/vendors","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Form,\n  Select,\n  InputNumber,\n  Switch,\n  Col,\n  message,\n  Row,\n  Input,\n  Button,\n  Icon,\n  AutoComplete,\n  Modal\n} from 'antd';\nconst Option = Select.Option;\nconst FormItem = Form.Item;\nimport { safeAssign } from 'client/common.js';\nimport AceEditor from 'client/components/AceEditor/AceEditor';\nimport constants from 'client/constants/variable.js';\nimport { httpCodes } from '../index.js';\nimport './CaseDesModal.scss';\nimport { connect } from 'react-redux';\nimport json5 from 'json5';\n\nconst formItemLayout = {\n  labelCol: { span: 5 },\n  wrapperCol: { span: 12 }\n};\nconst formItemLayoutWithOutLabel = {\n  wrapperCol: { span: 12, offset: 5 }\n};\n\n@connect(state => {\n  return {\n    currInterface: state.inter.curdata\n  };\n})\nclass CaseDesForm extends Component {\n  static propTypes = {\n    form: PropTypes.object,\n    caseData: PropTypes.object,\n    currInterface: PropTypes.object,\n    onOk: PropTypes.func,\n    onCancel: PropTypes.func,\n    isAdd: PropTypes.bool,\n    visible: PropTypes.bool\n  };\n  // 初始化输入数据\n  preProcess = caseData => {\n    try {\n      caseData = JSON.parse(JSON.stringify(caseData));\n    } catch (error) {\n      console.log(error);\n    }\n\n    const initCaseData = {\n      ip: '',\n      ip_enable: false,\n      name: '',\n      code: '200',\n      delay: 0,\n      headers: [{ name: '', value: '' }],\n      paramsArr: [{ name: '', value: '' }],\n      params: {},\n      res_body: '',\n      paramsForm: 'form'\n    };\n    caseData.params = caseData.params || {};\n    const paramsArr = Object.keys(caseData.params).length\n      ? Object.keys(caseData.params)\n          .map(key => {\n            return { name: key, value: caseData.params[key] };\n          })\n          .filter(item => {\n            if (typeof item.value === 'object') {\n              // this.setState({ paramsForm: 'json' })\n              caseData.paramsForm = 'json';\n            }\n            return typeof item.value !== 'object';\n          })\n      : [{ name: '', value: '' }];\n    const headers =\n      caseData.headers && caseData.headers.length ? caseData.headers : [{ name: '', value: '' }];\n    caseData.code = '' + caseData.code;\n    caseData.params = JSON.stringify(caseData.params, null, 2);\n\n    caseData = safeAssign(initCaseData, { ...caseData, headers, paramsArr });\n\n    return caseData;\n  };\n\n  constructor(props) {\n    super(props);\n    const { caseData } = this.props;\n    this.state = this.preProcess(caseData);\n  }\n\n  // 处理request_body编译器\n  handleRequestBody = d => {\n    this.setState({ res_body: d.text });\n  };\n\n  // 处理参数编译器\n  handleParams = d => {\n    this.setState({ params: d.text });\n  };\n\n  // 增加参数信息\n  addValues = key => {\n    const { getFieldValue } = this.props.form;\n    let values = getFieldValue(key);\n    values = values.concat({ name: '', value: '' });\n    this.setState({ [key]: values });\n  };\n\n  // 删除参数信息\n  removeValues = (key, index) => {\n    const { setFieldsValue, getFieldValue } = this.props.form;\n    let values = getFieldValue(key);\n    values = values.filter((val, index2) => index !== index2);\n    setFieldsValue({ [key]: values });\n    this.setState({ [key]: values });\n  };\n\n  // 处理参数\n  getParamsKey = () => {\n    let {\n      req_query,\n      req_body_form,\n      req_body_type,\n      method,\n      req_body_other,\n      req_body_is_json_schema,\n      req_params\n    } = this.props.currInterface;\n    let keys = [];\n    req_query &&\n      Array.isArray(req_query) &&\n      req_query.forEach(item => {\n        keys.push(item.name);\n      });\n    req_params &&\n      Array.isArray(req_params) &&\n      req_params.forEach(item => {\n        keys.push(item.name);\n      });\n\n    if (constants.HTTP_METHOD[method.toUpperCase()].request_body && req_body_type === 'form') {\n      req_body_form &&\n        Array.isArray(req_body_form) &&\n        req_body_form.forEach(item => {\n          keys.push(item.name);\n        });\n    } else if (\n      constants.HTTP_METHOD[method.toUpperCase()].request_body &&\n      req_body_type === 'json' &&\n      req_body_other\n    ) {\n      let bodyObj;\n      try {\n        // 针对json-schema的处理\n        if (req_body_is_json_schema) {\n          bodyObj = json5.parse(this.props.caseData.req_body_other);\n        } else {\n          bodyObj = json5.parse(req_body_other);\n        }\n\n        keys = keys.concat(Object.keys(bodyObj));\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    return keys;\n  };\n\n  endProcess = caseData => {\n    const headers = [];\n    const params = {};\n    const { paramsForm } = this.state;\n    caseData.headers &&\n      Array.isArray(caseData.headers) &&\n      caseData.headers.forEach(item => {\n        if (item.name) {\n          headers.push({\n            name: item.name,\n            value: item.value\n          });\n        }\n      });\n    caseData.paramsArr &&\n      Array.isArray(caseData.paramsArr) &&\n      caseData.paramsArr.forEach(item => {\n        if (item.name) {\n          params[item.name] = item.value;\n        }\n      });\n    caseData.headers = headers;\n    if (paramsForm === 'form') {\n      caseData.params = params;\n    } else {\n      try {\n        caseData.params = json5.parse(caseData.params);\n      } catch (error) {\n        console.log(error);\n        message.error('请求参数 json 格式有误，请修改');\n        return false;\n      }\n    }\n    delete caseData.paramsArr;\n\n    return caseData;\n  };\n\n  handleOk = () => {\n    const form = this.props.form;\n    form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        values.res_body = this.state.res_body;\n        values.params = this.state.params;\n        this.props.onOk(this.endProcess(values));\n      }\n    });\n  };\n\n  render() {\n    const { getFieldDecorator, getFieldValue } = this.props.form;\n    const { isAdd, visible, onCancel } = this.props;\n    const {\n      name,\n      code,\n      headers,\n      ip,\n      ip_enable,\n      params,\n      paramsArr,\n      paramsForm,\n      res_body,\n      delay\n    } = this.state;\n\n    this.props.form.initialValue;\n    const valuesTpl = (values, title) => {\n      const dataSource = this.getParamsKey();\n      const display = paramsForm === 'json' ? 'none' : '';\n      return values.map((item, index) => (\n        <div key={index} className=\"paramsArr\" style={{ display }}>\n          <FormItem\n            {...(index === 0 ? formItemLayout : formItemLayoutWithOutLabel)}\n            wrapperCol={index === 0 ? { span: 19 } : { span: 19, offset: 5 }}\n            label={index ? '' : title}\n          >\n            <Row gutter={8}>\n              <Col span={10}>\n                <FormItem>\n                  {getFieldDecorator(`paramsArr[${index}].name`, { initialValue: item.name })(\n                    <AutoComplete\n                      dataSource={dataSource}\n                      placeholder=\"参数名称\"\n                      filterOption={(inputValue, option) =>\n                        option.props.children.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\n                      }\n                    />\n                  )}\n                </FormItem>\n              </Col>\n              <Col span={10}>\n                <FormItem>\n                  {getFieldDecorator(`paramsArr[${index}].value`, { initialValue: item.value })(\n                    <Input placeholder=\"参数值\" />\n                  )}\n                </FormItem>\n              </Col>\n              <Col span={4}>\n                {values.length > 1 ? (\n                  <Icon\n                    className=\"dynamic-delete-button\"\n                    type=\"minus-circle-o\"\n                    onClick={() => this.removeValues('paramsArr', index)}\n                  />\n                ) : null}\n              </Col>\n            </Row>\n          </FormItem>\n        </div>\n      ));\n    };\n    const headersTpl = (values, title) => {\n      const dataSource = constants.HTTP_REQUEST_HEADER;\n      return values.map((item, index) => (\n        <div key={index} className=\"headers\">\n          <FormItem\n            {...(index === 0 ? formItemLayout : formItemLayoutWithOutLabel)}\n            wrapperCol={index === 0 ? { span: 19 } : { span: 19, offset: 5 }}\n            label={index ? '' : title}\n          >\n            <Row gutter={8}>\n              <Col span={10}>\n                <FormItem>\n                  {getFieldDecorator(`headers[${index}].name`, { initialValue: item.name })(\n                    <AutoComplete\n                      dataSource={dataSource}\n                      placeholder=\"参数名称\"\n                      filterOption={(inputValue, option) =>\n                        option.props.children.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\n                      }\n                    />\n                  )}\n                </FormItem>\n              </Col>\n              <Col span={10}>\n                <FormItem>\n                  {getFieldDecorator(`headers[${index}].value`, { initialValue: item.value })(\n                    <Input placeholder=\"参数值\" />\n                  )}\n                </FormItem>\n              </Col>\n              <Col span={4}>\n                {values.length > 1 ? (\n                  <Icon\n                    className=\"dynamic-delete-button\"\n                    type=\"minus-circle-o\"\n                    onClick={() => this.removeValues('headers', index)}\n                  />\n                ) : null}\n              </Col>\n            </Row>\n          </FormItem>\n        </div>\n      ));\n    };\n    return (\n      <Modal\n        title={isAdd ? '添加期望' : '编辑期望'}\n        visible={visible}\n        maskClosable={false}\n        onOk={this.handleOk}\n        width={780}\n        onCancel={() => onCancel()}\n        afterClose={() => this.setState({ paramsForm: 'form' })}\n        className=\"case-des-modal\"\n      >\n        <Form onSubmit={this.handleOk}>\n          <h2 className=\"sub-title\" style={{ marginTop: 0 }}>\n            基本信息\n          </h2>\n          <FormItem {...formItemLayout} label=\"期望名称\">\n            {getFieldDecorator('name', {\n              initialValue: name,\n              rules: [{ required: true, message: '请输入期望名称！' }]\n            })(<Input placeholder=\"请输入期望名称\" />)}\n          </FormItem>\n          <FormItem {...formItemLayout} label=\"IP 过滤\" className=\"ip-filter\">\n            <Col span={6} className=\"ip-switch\">\n              <FormItem>\n                {getFieldDecorator('ip_enable', {\n                  initialValue: ip_enable,\n                  valuePropName: 'checked',\n                  rules: [{ type: 'boolean' }]\n                })(<Switch />)}\n              </FormItem>\n            </Col>\n            <Col span={18}>\n              <div style={{ display: getFieldValue('ip_enable') ? '' : 'none' }} className=\"ip\">\n                <FormItem>\n                  {getFieldDecorator(\n                    'ip',\n                    getFieldValue('ip_enable')\n                      ? {\n                          initialValue: ip,\n                          rules: [\n                            {\n                              pattern: constants.IP_REGEXP,\n                              message: '请填写正确的 IP 地址',\n                              required: true\n                            }\n                          ]\n                        }\n                      : {}\n                  )(<Input placeholder=\"请输入过滤的 IP 地址\" />)}\n                </FormItem>\n              </div>\n            </Col>\n          </FormItem>\n          <Row className=\"params-form\" style={{ marginBottom: 8 }}>\n            <Col {...{ span: 12, offset: 5 }}>\n              <Switch\n                size=\"small\"\n                checkedChildren=\"JSON\"\n                unCheckedChildren=\"JSON\"\n                checked={paramsForm === 'json'}\n                onChange={bool => {\n                  this.setState({ paramsForm: bool ? 'json' : 'form' });\n                }}\n              />\n            </Col>\n          </Row>\n          {valuesTpl(paramsArr, '参数过滤')}\n          <FormItem\n            wrapperCol={{ span: 6, offset: 5 }}\n            style={{ display: paramsForm === 'form' ? '' : 'none' }}\n          >\n            <Button\n              size=\"default\"\n              type=\"primary\"\n              onClick={() => this.addValues('paramsArr')}\n              style={{ width: '100%' }}\n            >\n              <Icon type=\"plus\" /> 添加参数\n            </Button>\n          </FormItem>\n          <FormItem\n            {...formItemLayout}\n            wrapperCol={{ span: 17 }}\n            label=\"参数过滤\"\n            style={{ display: paramsForm === 'form' ? 'none' : '' }}\n          >\n            <AceEditor className=\"pretty-editor\" data={params} onChange={this.handleParams} />\n            <FormItem>\n              {getFieldDecorator(\n                'params',\n                paramsForm === 'json'\n                  ? {\n                      rules: [\n                        { validator: this.jsonValidator, message: '请输入正确的 JSON 字符串！' }\n                      ]\n                    }\n                  : {}\n              )(<Input style={{ display: 'none' }} />)}\n            </FormItem>\n          </FormItem>\n          <h2 className=\"sub-title\">响应</h2>\n          <FormItem {...formItemLayout} required label=\"HTTP Code\">\n            {getFieldDecorator('code', {\n              initialValue: code\n            })(\n              <Select showSearch>\n                {httpCodes.map(code => (\n                  <Option key={'' + code} value={'' + code}>\n                    {'' + code}\n                  </Option>\n                ))}\n              </Select>\n            )}\n          </FormItem>\n          <FormItem {...formItemLayout} label=\"延时\">\n            {getFieldDecorator('delay', {\n              initialValue: delay,\n              rules: [{ required: true, message: '请输入延时时间！', type: 'integer' }]\n            })(<InputNumber placeholder=\"请输入延时时间\" min={0} />)}\n            <span>ms</span>\n          </FormItem>\n          {headersTpl(headers, 'HTTP 头')}\n          <FormItem wrapperCol={{ span: 6, offset: 5 }}>\n            <Button\n              size=\"default\"\n              type=\"primary\"\n              onClick={() => this.addValues('headers')}\n              style={{ width: '100%' }}\n            >\n              <Icon type=\"plus\" /> 添加 HTTP 头\n            </Button>\n          </FormItem>\n          <FormItem {...formItemLayout} wrapperCol={{ span: 17 }} label=\"Body\" required>\n            <FormItem>\n              <AceEditor\n                className=\"pretty-editor\"\n                data={res_body}\n                mode={this.props.currInterface.res_body_type === 'json' ? null : 'text'}\n                onChange={this.handleRequestBody}\n              />\n            </FormItem>\n          </FormItem>\n        </Form>\n      </Modal>\n    );\n  }\n}\n\nconst CaseDesModal = Form.create()(CaseDesForm);\nexport default CaseDesModal;\n"]}