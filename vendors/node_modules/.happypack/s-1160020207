'use strict';

exports.__esModule = true;

var _input = require('antd/lib/input');

var _input2 = _interopRequireDefault(_input);

var _icon = require('antd/lib/icon');

var _icon2 = _interopRequireDefault(_icon);

var _row = require('antd/lib/row');

var _row2 = _interopRequireDefault(_row);

var _tooltip = require('antd/lib/tooltip');

var _tooltip2 = _interopRequireDefault(_tooltip);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _stringify = require('babel-runtime/core-js/json/stringify');

var _stringify2 = _interopRequireDefault(_stringify);

var _select = require('antd/lib/select');

var _select2 = _interopRequireDefault(_select);

var _class, _temp, _initialiseProps;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _underscore = require('underscore');

var _underscore2 = _interopRequireDefault(_underscore);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Option = _select2.default.Option;

// 深拷贝
function deepEqual(state) {
  return JSON.parse((0, _stringify2.default)(state));
}

var METHODS_LIST = [{ name: 'md5', type: false, params: [], desc: 'md5加密' }, { name: 'lower', type: false, params: [], desc: '所有字母变成小写' }, { name: 'length', type: false, params: [], desc: '数据长度' }, { name: 'substr', type: true, component: 'doubleInput', params: [], desc: '截取部分字符串' }, { name: 'sha', type: true, component: 'select', params: ['sha1'], desc: 'sha加密' }, { name: 'base64', type: false, params: [], desc: 'base64加密' }, { name: 'unbase64', type: false, params: [], desc: 'base64解密' }, { name: 'concat', type: true, component: 'input', params: [], desc: '连接字符串' }, { name: 'lconcat', type: true, component: 'input', params: [], desc: '左连接' }, { name: 'upper', type: false, desc: '所有字母变成大写' }, { name: 'number', type: false, desc: '字符串转换为数字类型' }];

var MethodsList = (_temp = _class = function (_Component) {
  (0, _inherits3.default)(MethodsList, _Component);

  function MethodsList(props) {
    (0, _classCallCheck3.default)(this, MethodsList);

    var _this = (0, _possibleConstructorReturn3.default)(this, _Component.call(this, props));

    _initialiseProps.call(_this);

    _this.state = {
      list: METHODS_LIST,
      moreFlag: true
    };
    return _this;
  }

  MethodsList.prototype.componentDidMount = function componentDidMount() {
    var index = _underscore2.default.findIndex(METHODS_LIST, { name: this.props.clickValue });

    var moreFlag = index > 3 ? false : true;
    this.setState({
      moreFlag: moreFlag
    });
  };

  // 处理参数输入
  MethodsList.prototype.handleParamsChange = function handleParamsChange(value, clickIndex, paramsIndex, index) {
    var newList = deepEqual(this.state.list);
    newList[paramsIndex].params[index] = value;
    this.setState({
      list: newList
    });
    this.props.paramsInput(value, clickIndex, index);
  };

  // 组件选择


  MethodsList.prototype.handleComponent = function handleComponent(item, clickIndex, index, params) {
    var query = {
      clickIndex: clickIndex,
      paramsIndex: index,
      params: params
    };
    switch (item.component) {
      case 'select':
        return this.selectComponent(query);
      case 'input':
        return this.inputComponent(query);
      case 'doubleInput':
        return this.doubleInputComponent(query);
      default:
        break;
    }
  };

  MethodsList.prototype.render = function render() {
    var _this2 = this;

    var _state = this.state,
        list = _state.list,
        moreFlag = _state.moreFlag;
    var _props = this.props,
        click = _props.click,
        clickValue = _props.clickValue,
        clickIndex = _props.clickIndex,
        params = _props.params;

    var showList = moreFlag ? list.slice(0, 4) : list;

    return _react2.default.createElement(
      'div',
      { className: 'modal-postman-form-method' },
      _react2.default.createElement(
        'h3',
        { className: 'methods-title title' },
        '\u65B9\u6CD5'
      ),
      showList.map(function (item, index) {
        return _react2.default.createElement(
          _row2.default,
          {
            key: index,
            type: 'flex',
            align: 'middle',
            className: 'row methods-row ' + (item.name === clickValue ? 'checked' : ''),
            onClick: function onClick() {
              return click(item.name, showList[index].params);
            }
          },
          _react2.default.createElement(
            _tooltip2.default,
            { title: item.desc },
            _react2.default.createElement(
              'span',
              null,
              item.name
            )
          ),
          _react2.default.createElement(
            'span',
            { className: 'input-component' },
            item.type && _this2.handleComponent(item, clickIndex, index, item.name === clickValue ? params : [])
          )
        );
      }),
      moreFlag && _react2.default.createElement(
        'div',
        { className: 'show-more', onClick: this.showMore },
        _react2.default.createElement(_icon2.default, { type: 'down' }),
        _react2.default.createElement(
          'span',
          { style: { paddingLeft: '4px' } },
          '\u66F4\u591A'
        )
      )
    );
  };

  return MethodsList;
}(_react.Component), _class.propTypes = {
  show: _propTypes2.default.bool,
  click: _propTypes2.default.func,
  clickValue: _propTypes2.default.string,
  paramsInput: _propTypes2.default.func,
  clickIndex: _propTypes2.default.number,
  params: _propTypes2.default.array
}, _initialiseProps = function _initialiseProps() {
  var _this3 = this;

  this.showMore = function () {
    _this3.setState({
      moreFlag: false
    });
  };

  this.inputComponent = function (props) {
    var clickIndex = props.clickIndex;
    var paramsIndex = props.paramsIndex;
    var params = props.params;
    return _react2.default.createElement(_input2.default, {
      size: 'small',
      placeholder: '\u8BF7\u8F93\u5165\u53C2\u6570',
      value: params[0],
      onChange: function onChange(e) {
        return _this3.handleParamsChange(e.target.value, clickIndex, paramsIndex, 0);
      }
    });
  };

  this.doubleInputComponent = function (props) {
    var clickIndex = props.clickIndex;
    var paramsIndex = props.paramsIndex;
    var params = props.params;

    return _react2.default.createElement(
      'div',
      null,
      _react2.default.createElement(_input2.default, {
        size: 'small',
        placeholder: 'start',
        value: params[0],
        onChange: function onChange(e) {
          return _this3.handleParamsChange(e.target.value, clickIndex, paramsIndex, 0);
        }
      }),
      _react2.default.createElement(_input2.default, {
        size: 'small',
        placeholder: 'length',
        value: params[1],
        onChange: function onChange(e) {
          return _this3.handleParamsChange(e.target.value, clickIndex, paramsIndex, 1);
        }
      })
    );
  };

  this.selectComponent = function (props) {
    var subname = ['sha1', 'sha224', 'sha256', 'sha384', 'sha512'];
    var clickIndex = props.clickIndex;
    var paramsIndex = props.paramsIndex;
    var params = props.params;
    return _react2.default.createElement(
      _select2.default,
      {
        value: params[0] || 'sha1',
        placeholder: '\u8BF7\u9009\u62E9',
        style: { width: 150 },
        size: 'small',
        onChange: function onChange(e) {
          return _this3.handleParamsChange(e, clickIndex, paramsIndex, 0);
        }
      },
      subname.map(function (item, index) {
        return _react2.default.createElement(
          Option,
          { value: item, key: index },
          item
        );
      })
    );
  };
}, _temp);
exports.default = MethodsList;