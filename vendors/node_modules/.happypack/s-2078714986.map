{"version":3,"sources":["common\\postmanLib.js"],"names":["options","handleRes","handleData","contentTypeItem","headers","forEach","test","key","split","trim","toLowerCase","data","qs","stringify","response","res","status","body","isNode","header","axios","method","url","timeout","maxRedirects","httpsAgent","https","Agent","rejectUnauthorized","undefined","message","httpRequestByNode","context","script","console","Promise","setTimeout","sandboxByNode","sandboxByBrowser","promise","then","sandbox","defaultOptions","preScript","afterScript","commonContext","taskId","Math","random","urlObj","URL","parse","query","pathname","getStorage","href","val","Error","hostname","caseId","requestHeader","requestBody","storage","utils","_","CryptoJS","jsrsasign","base64","md5","sha1","sha224","sha256","sha384","sha512","unbase64","format","protocol","host","req","resolve","reject","error","success","json_parse","isNaN","window","crossRequest","responseData","responseHeader","responseStatus","runTime","require","isJson5","handleJson","joinPath","safeArray","constants","HTTP_METHOD","global","ContentTypeMap","other","id","storageCreator","getItem","name","setItem","value","localStorage","handleContentType","err","checkRequestBodyIsRaw","reqBodyType","request_body","checkNameIsExistInArray","arr","isRepeat","i","length","item","handleCurrDomain","domains","case_env","currDomain","find","vm","Script","createContext","runInContext","beginScript","eval","handleParams","interfaceData","handleValue","requestParams","interfaceRunData","paramsToObjectWithEnable","obj","enable","required","paramsToObjectUnWithEnable","path","env","_id","requestOptions","req_params","replace","domain","req_query","req_headers","req_body_type","indexOf","reqData","req_body_other","req_body_form","push","type","e","filter","reqBody","files","file","exports"],"mappings":"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","file":"postmanLib.js","sourceRoot":"C:/Users/DUOYI/Desktop/api/test/vendors","sourcesContent":["const { isJson5, json_parse, handleJson, joinPath, safeArray } = require('./utils');\nconst constants = require('../client/constants/variable.js');\nconst _ = require('underscore');\nconst URL = require('url');\nconst utils = require('./power-string.js').utils;\nconst HTTP_METHOD = constants.HTTP_METHOD;\nconst axios = require('axios');\nconst qs = require('qs');\nconst CryptoJS = require('crypto-js');\nconst jsrsasign = require('jsrsasign');\nconst https = require('https');\n\nconst isNode = typeof global == 'object' && global.global === global;\nconst ContentTypeMap = {\n  'application/json': 'json',\n  'application/xml': 'xml',\n  'text/xml': 'xml',\n  'application/html': 'html',\n  'text/html': 'html',\n  other: 'text'\n};\n\nconst getStorage = async (id)=>{\n  try{\n    if(isNode){\n      let storage = global.storageCreator(id);\n      let data = await storage.getItem();\n      return {\n        getItem: (name)=> data[name],\n        setItem: (name, value)=>{\n          data[name] = value;\n          storage.setItem(name, value)\n        }\n      }\n    }else{\n      return {\n        getItem: (name)=> window.localStorage.getItem(name),\n        setItem: (name, value)=>  window.localStorage.setItem(name, value)\n      }\n    }\n  }catch(e){\n    console.error(e)\n    return {\n      getItem: (name)=>{\n        console.error(name, e)\n      },\n      setItem: (name, value)=>{\n        console.error(name, value, e)\n      }\n    }\n  }\n}\n\nasync function httpRequestByNode(options) {\n  function handleRes(response) {\n    if (!response || typeof response !== 'object') {\n      return {\n        res: {\n          status: 500,\n          body: isNode\n            ? '请求出错, 内网服务器自动化测试无法访问到，请检查是否为内网服务器！'\n            : '请求出错'\n        }\n      };\n    }\n    return {\n      res: {\n        header: response.headers,\n        status: response.status,\n        body: response.data\n      }\n    };\n  }\n\n  function handleData() {\n    let contentTypeItem;\n    if (!options) return;\n    if (typeof options.headers === 'object' && options.headers) {\n      Object.keys(options.headers).forEach(key => {\n        if (/content-type/i.test(key)) {\n          if (options.headers[key]) {\n            contentTypeItem = options.headers[key]\n              .split(';')[0]\n              .trim()\n              .toLowerCase();\n          }\n        }\n        if (!options.headers[key]) delete options.headers[key];\n      });\n\n      if (\n        contentTypeItem === 'application/x-www-form-urlencoded' &&\n        typeof options.data === 'object' &&\n        options.data\n      ) {\n        options.data = qs.stringify(options.data);\n      }\n    }\n  }\n\n  try {\n    handleData(options);\n    let response = await axios({\n      method: options.method,\n      url: options.url,\n      headers: options.headers,\n      timeout: 10000,\n      maxRedirects: 0,\n      httpsAgent: new https.Agent({\n        rejectUnauthorized: false\n      }),\n      data: options.data\n    });\n    return handleRes(response);\n  } catch (err) {\n    if (err.response === undefined) {\n      return handleRes({\n        headers: {},\n        status: null,\n        data: err.message\n      });\n    }\n    return handleRes(err.response);\n  }\n}\n\nfunction handleContentType(headers) {\n  if (!headers || typeof headers !== 'object') return ContentTypeMap.other;\n  let contentTypeItem = 'other';\n  try {\n    Object.keys(headers).forEach(key => {\n      if (/content-type/i.test(key)) {\n        contentTypeItem = headers[key]\n          .split(';')[0]\n          .trim()\n          .toLowerCase();\n      }\n    });\n    return ContentTypeMap[contentTypeItem] ? ContentTypeMap[contentTypeItem] : ContentTypeMap.other;\n  } catch (err) {\n    return ContentTypeMap.other;\n  }\n}\n\nfunction checkRequestBodyIsRaw(method, reqBodyType) {\n  if (\n    reqBodyType &&\n    reqBodyType !== 'file' &&\n    reqBodyType !== 'form' &&\n    HTTP_METHOD[method].request_body\n  ) {\n    return reqBodyType;\n  }\n  return false;\n}\n\nfunction checkNameIsExistInArray(name, arr) {\n  let isRepeat = false;\n  for (let i = 0; i < arr.length; i++) {\n    let item = arr[i];\n    if (item.name === name) {\n      isRepeat = true;\n      break;\n    }\n  }\n  return isRepeat;\n}\n\nfunction handleCurrDomain(domains, case_env) {\n  let currDomain = _.find(domains, item => item.name === case_env);\n\n  if (!currDomain) {\n    currDomain = domains[0];\n  }\n  return currDomain;\n}\n\nfunction sandboxByNode(sandbox = {}, script) {\n  const vm = require('vm');\n  script = new vm.Script(script);\n  const context = new vm.createContext(sandbox);\n  script.runInContext(context, {\n    timeout: 10000\n  });\n  return sandbox;\n}\n\nasync function sandbox(context = {}, script) {\n  if (isNode) {\n    try {\n      context.context = context;\n      context.console = console;\n      context.Promise = Promise;\n      context.setTimeout = setTimeout;\n      context = sandboxByNode(context, script);\n    } catch (err) {\n      err.message = `Script: ${script}\n      message: ${err.message}`;\n      throw err;\n    }\n  } else {\n    context = sandboxByBrowser(context, script);\n  }\n  if (context.promise && typeof context.promise === 'object' && context.promise.then) {\n    try {\n      await context.promise;\n    } catch (err) {\n      err.message = `Script: ${script}\n      message: ${err.message}`;\n      throw err;\n    }\n  }\n  return context;\n}\n\nfunction sandboxByBrowser(context = {}, script) {\n  if (!script || typeof script !== 'string') {\n    return context;\n  }\n  let beginScript = '';\n  for (var i in context) {\n    beginScript += `var ${i} = context.${i};`;\n  }\n  try {\n    eval(beginScript + script);\n  } catch (err) {\n    let message = `Script:\n                   ----CodeBegin----:\n                   ${beginScript}\n                   ${script}\n                   ----CodeEnd----\n                  `;\n    err.message = `Script: ${message}\n    message: ${err.message}`;\n\n    throw err;\n  }\n  return context;\n}\n\n/**\n * \n * @param {*} defaultOptions \n * @param {*} preScript \n * @param {*} afterScript \n * @param {*} commonContext  负责传递一些业务信息，crossRequest 不关注具体传什么，只负责当中间人\n */\nasync function crossRequest(defaultOptions, preScript, afterScript, commonContext = {}) {\n  let options = Object.assign({}, defaultOptions);\n  const taskId = options.taskId || Math.random() + '';\n  let urlObj = URL.parse(options.url, true),\n    query = {};\n  query = Object.assign(query, urlObj.query);\n  let context = {\n    isNode,\n    get href() {\n      return urlObj.href;\n    },\n    set href(val) {\n      throw new Error('context.href 不能被赋值');\n    },\n    get hostname() {\n      return urlObj.hostname;\n    },\n    set hostname(val) {\n      throw new Error('context.hostname 不能被赋值');\n    },\n\n    get caseId() {\n      return options.caseId;\n    },\n\n    set caseId(val) {\n      throw new Error('context.caseId 不能被赋值');\n    },\n\n    method: options.method,\n    pathname: urlObj.pathname,\n    query: query,\n    requestHeader: options.headers || {},\n    requestBody: options.data,\n    promise: false,\n    storage: await getStorage(taskId)\n  };\n\n  Object.assign(context, commonContext)\n\n  context.utils = Object.freeze({\n    _: _,\n    CryptoJS: CryptoJS,\n    jsrsasign: jsrsasign,\n    base64: utils.base64,\n    md5: utils.md5,\n    sha1: utils.sha1,\n    sha224: utils.sha224,\n    sha256: utils.sha256,\n    sha384: utils.sha384,\n    sha512: utils.sha512,\n    unbase64: utils.unbase64,\n    axios: axios\n  });\n\n  if (preScript) {\n    context = await sandbox(context, preScript);\n    defaultOptions.url = options.url = URL.format({\n      protocol: urlObj.protocol,\n      host: urlObj.host,\n      query: context.query,\n      pathname: context.pathname\n    });\n    defaultOptions.headers = options.headers = context.requestHeader;\n    defaultOptions.data = options.data = context.requestBody;\n  }\n\n  let data;\n\n  if (isNode) {\n    data = await httpRequestByNode(options);\n    data.req = options;\n  } else {\n    data = await new Promise((resolve, reject) => {\n      options.error = options.success = function(res, header, data) {\n        let message = '';\n        if (res && typeof res === 'string') {\n          res = json_parse(data.res.body);\n          data.res.body = res;\n        }\n        if (!isNode) message = '请求异常，请检查 chrome network 错误信息... https://juejin.im/post/5c888a3e5188257dee0322af 通过该链接查看教程\"）';\n        if (isNaN(data.res.status)) {\n          reject({\n            body: res || message,\n            header,\n            message\n          });\n        }\n        resolve(data);\n      };\n\n      window.crossRequest(options);\n    });\n  }\n\n  if (afterScript) {\n    context.responseData = data.res.body;\n    context.responseHeader = data.res.header;\n    context.responseStatus = data.res.status;\n    context.runTime = data.runTime;\n    context = await sandbox(context, afterScript);\n    data.res.body = context.responseData;\n    data.res.header = context.responseHeader;\n    data.res.status = context.responseStatus;\n    data.runTime = context.runTime;\n  }\n  return data;\n}\n\nfunction handleParams(interfaceData, handleValue, requestParams) {\n  let interfaceRunData = Object.assign({}, interfaceData);\n  function paramsToObjectWithEnable(arr) {\n    const obj = {};\n    safeArray(arr).forEach(item => {\n      if (item && item.name && (item.enable || item.required === '1')) {\n        obj[item.name] = handleValue(item.value, currDomain.global);\n        if (requestParams) {\n          requestParams[item.name] = obj[item.name];\n        }\n      }\n    });\n    return obj;\n  }\n\n  function paramsToObjectUnWithEnable(arr) {\n    const obj = {};\n    safeArray(arr).forEach(item => {\n      if (item && item.name) {\n        obj[item.name] = handleValue(item.value, currDomain.global);\n        if (requestParams) {\n          requestParams[item.name] = obj[item.name];\n        }\n      }\n    });\n    return obj;\n  }\n\n  let { case_env, path, env, _id } = interfaceRunData;\n  let currDomain,\n    requestBody,\n    requestOptions = {};\n  currDomain = handleCurrDomain(env, case_env);\n  interfaceRunData.req_params = interfaceRunData.req_params || [];\n  interfaceRunData.req_params.forEach(item => {\n    let val = handleValue(item.value, currDomain.global);\n    if (requestParams) {\n      requestParams[item.name] = val;\n    }\n    path = path.replace(`:${item.name}`, val || `:${item.name}`);\n    path = path.replace(`{${item.name}}`, val || `{${item.name}}`);\n  });\n\n  const urlObj = URL.parse(joinPath(currDomain.domain, path), true);\n  const url = URL.format({\n    protocol: urlObj.protocol || 'http',\n    host: urlObj.host,\n    pathname: urlObj.pathname,\n    query: Object.assign(urlObj.query, paramsToObjectWithEnable(interfaceRunData.req_query))\n  });\n\n  let headers = paramsToObjectUnWithEnable(interfaceRunData.req_headers);\n  requestOptions = {\n    url,\n    caseId: _id,\n    method: interfaceRunData.method,\n    headers,\n    timeout: 82400000\n  };\n\n  // 对 raw 类型的 form 处理\n  try {\n    if (interfaceRunData.req_body_type === 'raw') {\n      if (headers && headers['Content-Type']) {\n        if (headers['Content-Type'].indexOf('application/x-www-form-urlencoded') >= 0) {\n          interfaceRunData.req_body_type = 'form';\n          let reqData = json_parse(interfaceRunData.req_body_other);\n          if (reqData && typeof reqData === 'object') {\n            interfaceRunData.req_body_form = [];\n            Object.keys(reqData).forEach(key => {\n              interfaceRunData.req_body_form.push({\n                name: key,\n                type: 'text',\n                value: JSON.stringify(reqData[key]),\n                enable: true\n              });\n            });\n          }\n        } else if (headers['Content-Type'].indexOf('application/json') >= 0) {\n          interfaceRunData.req_body_type = 'json';\n        }\n      }\n    }\n  } catch (e) {\n    console.error('err', e);\n  }\n\n  if (HTTP_METHOD[interfaceRunData.method].request_body) {\n    if (interfaceRunData.req_body_type === 'form') {\n      requestBody = paramsToObjectWithEnable(\n        safeArray(interfaceRunData.req_body_form).filter(item => {\n          return item.type == 'text';\n        })\n      );\n    } else if (interfaceRunData.req_body_type === 'json') {\n      let reqBody = isJson5(interfaceRunData.req_body_other);\n      if (reqBody === false) {\n        requestBody = interfaceRunData.req_body_other;\n      } else {\n        if (requestParams) {\n          requestParams = Object.assign(requestParams, reqBody);\n        }\n        requestBody = handleJson(reqBody, val => handleValue(val, currDomain.global));\n      }\n    } else {\n      requestBody = interfaceRunData.req_body_other;\n    }\n    requestOptions.data = requestBody;\n    if (interfaceRunData.req_body_type === 'form') {\n      requestOptions.files = paramsToObjectWithEnable(\n        safeArray(interfaceRunData.req_body_form).filter(item => {\n          return item.type == 'file';\n        })\n      );\n    } else if (interfaceRunData.req_body_type === 'file') {\n      requestOptions.file = 'single-file';\n    }\n  }\n  return requestOptions;\n}\n\nexports.checkRequestBodyIsRaw = checkRequestBodyIsRaw;\nexports.handleParams = handleParams;\nexports.handleContentType = handleContentType;\nexports.crossRequest = crossRequest;\nexports.handleCurrDomain = handleCurrDomain;\nexports.checkNameIsExistInArray = checkNameIsExistInArray;\n"]}