'use strict';

var _typeof2 = require('babel-runtime/helpers/typeof');

var _typeof3 = _interopRequireDefault(_typeof2);

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _message2 = require('antd/lib/message');

var _message3 = _interopRequireDefault(_message2);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function improtData(importDataModule) {
  var run = function () {
    var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee(res) {
      var interfaceData;
      return _regenerator2.default.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              _context.prev = 0;
              interfaceData = { apis: [], cats: [] };

              res = JSON.parse(res);
              res.forEach(function (item) {
                interfaceData.cats.push({
                  name: item.name,
                  desc: item.desc
                });
                item.list.forEach(function (api) {
                  api.catname = item.name;
                });
                interfaceData.apis = interfaceData.apis.concat(item.list);
              });
              return _context.abrupt('return', interfaceData);

            case 7:
              _context.prev = 7;
              _context.t0 = _context['catch'](0);

              console.error(_context.t0);
              _message3.default.error('数据格式有误');

            case 11:
            case 'end':
              return _context.stop();
          }
        }
      }, _callee, this, [[0, 7]]);
    }));

    return function run(_x) {
      return _ref.apply(this, arguments);
    };
  }();

  if (!importDataModule || (typeof importDataModule === 'undefined' ? 'undefined' : (0, _typeof3.default)(importDataModule)) !== 'object') {
    console.error('importDataModule 参数Must be Object Type');
    return null;
  }

  importDataModule.json = {
    name: 'json',
    run: run,
    desc: 'YApi接口 json数据导入'
  };
}

module.exports = function () {
  this.bindHook('import_data', improtData);
};