{"version":3,"sources":["node_modules\\json-schema-editor-visual\\package\\models\\schema.js"],"names":["_","require","fieldNum","state","message","data","title","type","properties","required","open","changeEditorSchemaAction","action","value","changeNameAction","oldState","keys","prefix","name","oldData","parentKeys","utils","getParentKeys","parentData","getData","requiredData","concat","propertiesData","newPropertiesData","curData","openKeys","join","JSONPATH_JOIN_CHAR","oldOpenKeys","map","item","push","setData","i","changeValueAction","key","deleteData","changeTypeAction","newParentDataItem","defaultSchema","parentDataItem","description","newParentData","Object","assign","newKeys","enableRequireAction","index","indexOf","splice","length","requireAllAction","cloneObject","handleSchemaRequired","deleteItemAction","addFieldAction","ranName","string","addChildFieldAction","setOpenValueAction","status","isUndefined"],"mappings":"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","file":"schema.js","sourceRoot":"C:/Users/DUOYI/Desktop/api/test/vendors","sourcesContent":["const _ = require('underscore');\nimport utils from '../utils';\nlet fieldNum = 1;\nimport handleSchema from '../schema.js';\n\nexport default {\n  state: {\n    message: null,\n    data: {\n      title: '',\n      type: 'object',\n      properties: {},\n      required: []\n    },\n    open: {\n      properties: true\n    }\n  },\n\n  changeEditorSchemaAction: function(state, action) {\n    handleSchema(action.value);\n    state.data = action.value;\n  },\n\n  changeNameAction: function(state, action, oldState) {\n    const keys = action.prefix;\n    const name = action.name;\n    const value = action.value;\n    let oldData = oldState.data;\n    let parentKeys = utils.getParentKeys(keys);\n    let parentData = utils.getData(oldData, parentKeys);\n    let requiredData = [].concat(parentData.required || []);\n    let propertiesData = utils.getData(oldData, keys);\n    let newPropertiesData = {};\n\n    let curData = propertiesData[name];\n    let openKeys = [].concat(keys, value, 'properties').join(utils.JSONPATH_JOIN_CHAR);\n    let oldOpenKeys = [].concat(keys, name, 'properties').join(utils.JSONPATH_JOIN_CHAR);\n    if (curData.properties) {\n      delete state.open[oldOpenKeys];\n      state.open[openKeys] = true;\n    }\n\n    if (propertiesData[value] && typeof propertiesData[value] === 'object') {\n      return;\n    }\n\n    requiredData = requiredData.map(item => {\n      if (item === name) return value;\n      return item;\n    });\n\n    parentKeys.push('required');\n    utils.setData(state.data, parentKeys, requiredData);\n\n    for (let i in propertiesData) {\n      if (i === name) {\n        newPropertiesData[value] = propertiesData[i];\n      } else newPropertiesData[i] = propertiesData[i];\n    }\n\n    utils.setData(state.data, keys, newPropertiesData);\n  },\n\n  changeValueAction: function(state, action) {\n    const keys = action.key;\n    if (action.value) {\n      utils.setData(state.data, keys, action.value);\n    } else {\n      utils.deleteData(state.data, keys);\n    }\n  },\n\n  changeTypeAction: function(state, action, oldState) {\n    const keys = action.key;\n    const value = action.value;\n\n    let parentKeys = utils.getParentKeys(keys);\n    let oldData = oldState.data;\n    let parentData = utils.getData(oldData, parentKeys);\n    if (parentData.type === value) {\n      return;\n    }\n    // let newParentData = utils.defaultSchema[value];\n    let newParentDataItem = utils.defaultSchema[value];\n\n    // 将备注过滤出来\n    let parentDataItem = parentData.description ? { description: parentData.description } : {};\n    let newParentData = Object.assign({}, newParentDataItem, parentDataItem);\n\n    let newKeys = [].concat('data', parentKeys);\n    utils.setData(state, newKeys, newParentData);\n  },\n\n  enableRequireAction: function(state, action, oldState) {\n    const keys = action.prefix;\n    let parentKeys = utils.getParentKeys(keys);\n    let oldData = oldState.data;\n    let parentData = utils.getData(oldData, parentKeys);\n    let requiredData = [].concat(parentData.required || []);\n    let index = requiredData.indexOf(action.name);\n\n    if (!action.required && index >= 0) {\n      requiredData.splice(index, 1);\n      parentKeys.push('required');\n      if (requiredData.length === 0) {\n        utils.deleteData(state.data, parentKeys);\n      } else {\n        utils.setData(state.data, parentKeys, requiredData);\n      }\n    } else if (action.required && index === -1) {\n      requiredData.push(action.name);\n      parentKeys.push('required');\n      utils.setData(state.data, parentKeys, requiredData);\n    }\n  },\n\n  requireAllAction: function(state, action, oldState) {\n    // let oldData = oldState.data;\n    let data = utils.cloneObject(action.value);\n    utils.handleSchemaRequired(data, action.required);\n\n    state.data = data;\n  },\n\n  deleteItemAction: function(state, action, oldState) {\n    const keys = action.key;\n\n    let name = keys[keys.length - 1];\n    let oldData = oldState.data;\n    let parentKeys = utils.getParentKeys(keys);\n    let parentData = utils.getData(oldData, parentKeys);\n    let newParentData = {};\n    for (let i in parentData) {\n      if (i !== name) {\n        newParentData[i] = parentData[i];\n      }\n    }\n\n    utils.setData(state.data, parentKeys, newParentData);\n  },\n\n  addFieldAction: function(state, action, oldState) {\n    const keys = action.prefix;\n    let oldData = oldState.data;\n    let name = action.name;\n    let propertiesData = utils.getData(oldData, keys);\n    let newPropertiesData = {};\n\n    let parentKeys = utils.getParentKeys(keys);\n    let parentData = utils.getData(oldData, parentKeys);\n    let requiredData = [].concat(parentData.required || []);\n\n    if (!name) {\n      newPropertiesData = Object.assign({}, propertiesData);\n      let ranName = 'field_' + fieldNum++;\n      newPropertiesData[ranName] = utils.defaultSchema.string;\n      requiredData.push(ranName);\n    } else {\n      for (let i in propertiesData) {\n        newPropertiesData[i] = propertiesData[i];\n        if (i === name) {\n          let ranName = 'field_' + fieldNum++;\n          newPropertiesData[ranName] = utils.defaultSchema.string;\n          requiredData.push(ranName);\n        }\n      }\n    }\n    utils.setData(state.data, keys, newPropertiesData);\n    // add required\n    parentKeys.push('required');\n    utils.setData(state.data, parentKeys, requiredData);\n  },\n  addChildFieldAction: function(state, action, oldState) {\n    const keys = action.key;\n    let oldData = oldState.data;\n    let propertiesData = utils.getData(oldData, keys);\n    let newPropertiesData = {};\n\n    newPropertiesData = Object.assign({}, propertiesData);\n    let ranName = 'field_' + fieldNum++;\n    newPropertiesData[ranName] = utils.defaultSchema.string;\n    utils.setData(state.data, keys, newPropertiesData);\n\n    // add required\n    let parentKeys = utils.getParentKeys(keys);\n    let parentData = utils.getData(oldData, parentKeys);\n    let requiredData = [].concat(parentData.required || []);\n    requiredData.push(ranName);\n    parentKeys.push('required');\n    utils.setData(state.data, parentKeys, requiredData);\n  },\n\n  setOpenValueAction: function(state, action, oldState) {\n    const keys = action.key.join(utils.JSONPATH_JOIN_CHAR);\n\n    let status;\n    if (_.isUndefined(action.value)) {\n      status = utils.getData(oldState.open, [keys]) ? false : true;\n    } else {\n      status = action.value;\n    }\n    utils.setData(state.open, [keys], status);\n  }\n};\n"]}