{"version":3,"sources":["client\\containers\\Group\\MemberList\\MemberList.js"],"names":["Option","arrayAddKey","arr","map","item","index","key","MemberList","currGroup","state","group","uid","user","role","fetchGroupMemberList","fetchGroupMsg","addMember","delMember","changeMemberRole","props","showAddMemberModal","setState","visible","reFetchList","_id","then","userInfo","res","payload","data","handleOk","id","member_uids","inputUids","inputRole","errcode","add_members","exist_members","addLength","length","existLength","success","changeNewMemberRole","value","deleteConfirm","member_uid","errmsg","changeUserRole","e","split","handleCancel","dataSource","componentWillReceiveProps","nextProps","_groupId","componentDidMount","currGroupId","onUserSelect","uids","render","columns","title","group_name","dataIndex","text","record","location","protocol","host","className","userinfo","ownerinfo","devinfo","guestinfo","i","push","emptyText","Component","propTypes","PropTypes","object","number","func","string","autobind"],"mappings":"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","file":"MemberList.js","sourceRoot":"C:/Users/DUOYI/Desktop/api/test/vendors","sourcesContent":["import React, { PureComponent as Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Table, Select, Button, Modal, Row, Col, message, Popconfirm } from 'antd';\nimport { Link } from 'react-router-dom';\nimport './MemberList.scss';\nimport { autobind } from 'core-decorators';\nimport {\n  fetchGroupMemberList,\n  fetchGroupMsg,\n  addMember,\n  delMember,\n  changeMemberRole\n} from '../../../reducer/modules/group.js';\nimport ErrMsg from '../../../components/ErrMsg/ErrMsg.js';\nimport UsernameAutoComplete from '../../../components/UsernameAutoComplete/UsernameAutoComplete.js';\nconst Option = Select.Option;\n\nfunction arrayAddKey(arr) {\n  return arr.map((item, index) => {\n    return {\n      ...item,\n      key: index\n    };\n  });\n}\n\n@connect(\n  state => {\n    return {\n      currGroup: state.group.currGroup,\n      uid: state.user.uid,\n      role: state.group.role\n    };\n  },\n  {\n    fetchGroupMemberList,\n    fetchGroupMsg,\n    addMember,\n    delMember,\n    changeMemberRole\n  }\n)\nclass MemberList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userInfo: [],\n      role: '',\n      visible: false,\n      dataSource: [],\n      inputUids: [],\n      inputRole: 'dev'\n    };\n  }\n  static propTypes = {\n    currGroup: PropTypes.object,\n    uid: PropTypes.number,\n    fetchGroupMemberList: PropTypes.func,\n    fetchGroupMsg: PropTypes.func,\n    addMember: PropTypes.func,\n    delMember: PropTypes.func,\n    changeMemberRole: PropTypes.func,\n    role: PropTypes.string\n  };\n\n  showAddMemberModal = () => {\n    this.setState({\n      visible: true\n    });\n  };\n\n  // 重新获取列表\n  reFetchList = () => {\n    this.props.fetchGroupMemberList(this.props.currGroup._id).then(res => {\n      this.setState({\n        userInfo: arrayAddKey(res.payload.data.data),\n        visible: false\n      });\n    });\n  };\n\n  // 增 - 添加成员\n\n  handleOk = () => {\n    this.props\n      .addMember({\n        id: this.props.currGroup._id,\n        member_uids: this.state.inputUids,\n        role: this.state.inputRole\n      })\n      .then(res => {\n        if (!res.payload.data.errcode) {\n          const { add_members, exist_members } = res.payload.data.data;\n          const addLength = add_members.length;\n          const existLength = exist_members.length;\n          this.setState({\n            inputRole: 'dev',\n            inputUids: []\n          });\n          message.success(`添加成功! 已成功添加 ${addLength} 人，其中 ${existLength} 人已存在`);\n          this.reFetchList(); // 添加成功后重新获取分组成员列表\n        }\n      });\n  };\n  // 添加成员时 选择新增成员权限\n\n  changeNewMemberRole = value => {\n    this.setState({\n      inputRole: value\n    });\n  };\n\n  // 删 - 删除分组成员\n\n  deleteConfirm = member_uid => {\n    return () => {\n      const id = this.props.currGroup._id;\n      this.props.delMember({ id, member_uid }).then(res => {\n        if (!res.payload.data.errcode) {\n          message.success(res.payload.data.errmsg);\n          this.reFetchList(); // 添加成功后重新获取分组成员列表\n        }\n      });\n    };\n  };\n\n  // 改 - 修改成员权限\n  changeUserRole = e => {\n    const id = this.props.currGroup._id;\n    const role = e.split('-')[0];\n    const member_uid = e.split('-')[1];\n    this.props.changeMemberRole({ id, member_uid, role }).then(res => {\n      if (!res.payload.data.errcode) {\n        message.success(res.payload.data.errmsg);\n        this.reFetchList(); // 添加成功后重新获取分组成员列表\n      }\n    });\n  };\n\n  // 关闭模态框\n\n  handleCancel = () => {\n    this.setState({\n      visible: false\n    });\n  };\n\n  componentWillReceiveProps(nextProps) {\n    if (this._groupId !== this._groupId) {\n      return null;\n    }\n    if (this.props.currGroup._id !== nextProps.currGroup._id) {\n      this.props.fetchGroupMemberList(nextProps.currGroup._id).then(res => {\n        this.setState({\n          userInfo: arrayAddKey(res.payload.data.data)\n        });\n      });\n      this.props.fetchGroupMsg(nextProps.currGroup._id).then(res => {\n        this.setState({\n          role: res.payload.data.data.role\n        });\n      });\n    }\n  }\n\n  componentDidMount() {\n    const currGroupId = (this._groupId = this.props.currGroup._id);\n    this.props.fetchGroupMsg(currGroupId).then(res => {\n      this.setState({\n        role: res.payload.data.data.role\n      });\n    });\n    this.props.fetchGroupMemberList(currGroupId).then(res => {\n      this.setState({\n        userInfo: arrayAddKey(res.payload.data.data)\n      });\n    });\n  }\n\n  @autobind\n  onUserSelect(uids) {\n    this.setState({\n      inputUids: uids\n    });\n  }\n\n  render() {\n    const columns = [\n      {\n        title:\n          this.props.currGroup.group_name + ' 分组成员 (' + this.state.userInfo.length + ') 人',\n        dataIndex: 'username',\n        key: 'username',\n        render: (text, record) => {\n          return (\n            <div className=\"m-user\">\n              <Link to={`/user/profile/${record.uid}`}>\n                <img\n                  src={\n                    location.protocol + '//' + location.host + '/api/user/avatar?uid=' + record.uid\n                  }\n                  className=\"m-user-img\"\n                />\n              </Link>\n              <Link to={`/user/profile/${record.uid}`}>\n                <p className=\"m-user-name\">{text}</p>\n              </Link>\n            </div>\n          );\n        }\n      },\n      {\n        title:\n          this.state.role === 'owner' || this.state.role === 'admin' ? (\n            <div className=\"btn-container\">\n              <Button className=\"btn\" type=\"primary\" onClick={this.showAddMemberModal}>\n                添加成员\n              </Button>\n            </div>\n          ) : (\n            ''\n          ),\n        key: 'action',\n        className: 'member-opration',\n        render: (text, record) => {\n          if (this.state.role === 'owner' || this.state.role === 'admin') {\n            return (\n              <div>\n                <Select\n                  value={record.role + '-' + record.uid}\n                  className=\"select\"\n                  onChange={this.changeUserRole}\n                >\n                  <Option value={'owner-' + record.uid}>组长</Option>\n                  <Option value={'dev-' + record.uid}>开发者</Option>\n                  <Option value={'guest-' + record.uid}>访客</Option>\n                </Select>\n                <Popconfirm\n                  placement=\"topRight\"\n                  title=\"你确定要删除吗? \"\n                  onConfirm={this.deleteConfirm(record.uid)}\n                  okText=\"确定\"\n                  cancelText=\"\"\n                >\n                  <Button type=\"danger\" icon=\"delete\" className=\"btn-danger\" />\n                  {/* <Icon type=\"delete\" className=\"btn-danger\"/> */}\n                </Popconfirm>\n              </div>\n            );\n          } else {\n            // 非管理员可以看到权限 但无法修改\n            if (record.role === 'owner') {\n              return '组长';\n            } else if (record.role === 'dev') {\n              return '开发者';\n            } else if (record.role === 'guest') {\n              return '访客';\n            } else {\n              return '';\n            }\n          }\n        }\n      }\n    ];\n    let userinfo = this.state.userInfo;\n    let ownerinfo = [];\n    let devinfo = [];\n    let guestinfo = [];\n    for (let i = 0; i < userinfo.length; i++) {\n      if (userinfo[i].role === 'owner') {\n        ownerinfo.push(userinfo[i]);\n      }\n      if (userinfo[i].role === 'dev') {\n        devinfo.push(userinfo[i]);\n      }\n      if (userinfo[i].role === 'guest') {\n        guestinfo.push(userinfo[i]);\n      }\n    }\n    userinfo = [...ownerinfo, ...devinfo, ...guestinfo];\n    return (\n      <div className=\"m-panel\">\n        {this.state.visible ? (\n          <Modal\n            title=\"添加成员\"\n            visible={this.state.visible}\n            onOk={this.handleOk}\n            onCancel={this.handleCancel}\n          >\n            <Row gutter={6} className=\"modal-input\">\n              <Col span=\"5\">\n                <div className=\"label usernamelabel\">用户名: </div>\n              </Col>\n              <Col span=\"15\">\n                <UsernameAutoComplete callbackState={this.onUserSelect} />\n              </Col>\n            </Row>\n            <Row gutter={6} className=\"modal-input\">\n              <Col span=\"5\">\n                <div className=\"label usernameauth\">权限: </div>\n              </Col>\n              <Col span=\"15\">\n                <Select defaultValue=\"dev\" className=\"select\" onChange={this.changeNewMemberRole}>\n                  <Option value=\"owner\">组长</Option>\n                  <Option value=\"dev\">开发者</Option>\n                  <Option value=\"guest\">访客</Option>\n                </Select>\n              </Col>\n            </Row>\n          </Modal>\n        ) : (\n          ''\n        )}\n        <Table\n          columns={columns}\n          dataSource={userinfo}\n          pagination={false}\n          locale={{ emptyText: <ErrMsg type=\"noMemberInGroup\" /> }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default MemberList;\n"]}