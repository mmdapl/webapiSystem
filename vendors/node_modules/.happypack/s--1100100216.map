{"version":3,"sources":["client\\components\\TimeLine\\TimeLine.js"],"names":["jsondiffpatch","require","formattersHtml","formatters","html","Option","OptGroup","AddDiffView","title","props","content","className","__html","propTypes","PropTypes","string","TimeTree","newsData","state","news","curpage","curUid","user","uid","fetchNewsData","fetchMoreNews","fetchInterfaceList","handleCancel","setState","visible","openDiff","curDiffData","data","handleSelectApi","curSelectValue","selectValue","typeid","type","bidden","loading","apiList","getMore","that","total","then","componentWillMount","getApiList","project_id","limit","result","payload","list","render","logType","project","group","interface","interface_col","other","children","map","methodColor","variable","METHOD_COLOR","item","method","toLowerCase","_id","path","color","backgroundColor","bac","border","unshift","length","i","interfaceDiff","add_time","padding","pending","bind","diffView","minWidth","index","width","inputValue","options","value","indexOf","Component","object","func","setLoading","bool","number"],"mappings":"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","file":"TimeLine.js","sourceRoot":"C:/Users/DUOYI/Desktop/api/test/vendors","sourcesContent":["import React, { PureComponent as Component } from 'react';\nimport { Timeline, Spin, Row, Col, Tag, Avatar, Button, Modal, AutoComplete } from 'antd';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { formatTime } from '../../common.js';\nimport showDiffMsg from '../../../common/diff-view.js';\nimport variable from '../../constants/variable';\nimport { Link } from 'react-router-dom';\nimport { fetchNewsData, fetchMoreNews } from '../../reducer/modules/news.js';\nimport { fetchInterfaceList } from '../../reducer/modules/interface.js';\nimport ErrMsg from '../ErrMsg/ErrMsg.js';\nconst jsondiffpatch = require('jsondiffpatch/dist/jsondiffpatch.umd.js');\nconst formattersHtml = jsondiffpatch.formatters.html;\nimport 'jsondiffpatch/dist/formatters-styles/annotated.css';\nimport 'jsondiffpatch/dist/formatters-styles/html.css';\nimport './TimeLine.scss';\nimport { timeago } from '../../../common/utils.js';\n\n// const Option = AutoComplete.Option;\nconst { Option, OptGroup } = AutoComplete;\n\nconst AddDiffView = props => {\n  const { title, content, className } = props;\n\n  if (!content) {\n    return null;\n  }\n\n  return (\n    <div className={className}>\n      <h3 className=\"title\">{title}</h3>\n      <div dangerouslySetInnerHTML={{ __html: content }} />\n    </div>\n  );\n};\n\nAddDiffView.propTypes = {\n  title: PropTypes.string,\n  content: PropTypes.string,\n  className: PropTypes.string\n};\n\n// timeago(new Date().getTime() - 40);\n\n@connect(\n  state => {\n    return {\n      newsData: state.news.newsData,\n      curpage: state.news.curpage,\n      curUid: state.user.uid\n    };\n  },\n  {\n    fetchNewsData,\n    fetchMoreNews,\n    fetchInterfaceList\n  }\n)\nclass TimeTree extends Component {\n  static propTypes = {\n    newsData: PropTypes.object,\n    fetchNewsData: PropTypes.func,\n    fetchMoreNews: PropTypes.func,\n    setLoading: PropTypes.func,\n    loading: PropTypes.bool,\n    curpage: PropTypes.number,\n    typeid: PropTypes.number,\n    curUid: PropTypes.number,\n    type: PropTypes.string,\n    fetchInterfaceList: PropTypes.func\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      bidden: '',\n      loading: false,\n      visible: false,\n      curDiffData: {},\n      apiList: []\n    };\n    this.curSelectValue = '';\n  }\n\n  getMore() {\n    const that = this;\n\n    if (this.props.curpage <= this.props.newsData.total) {\n      this.setState({ loading: true });\n      this.props\n        .fetchMoreNews(\n          this.props.typeid,\n          this.props.type,\n          this.props.curpage + 1,\n          10,\n          this.curSelectValue\n        )\n        .then(function() {\n          that.setState({ loading: false });\n          if (that.props.newsData.total === that.props.curpage) {\n            that.setState({ bidden: 'logbidden' });\n          }\n        });\n    }\n  }\n\n  handleCancel = () => {\n    this.setState({\n      visible: false\n    });\n  };\n\n  componentWillMount() {\n    this.props.fetchNewsData(this.props.typeid, this.props.type, 1, 10);\n    if (this.props.type === 'project') {\n      this.getApiList();\n    }\n  }\n\n  openDiff = data => {\n    this.setState({\n      curDiffData: data,\n      visible: true\n    });\n  };\n\n  async getApiList() {\n    let result = await this.props.fetchInterfaceList({\n      project_id: this.props.typeid,\n      limit: 'all'\n    });\n    this.setState({\n      apiList: result.payload.data.data.list\n    });\n  }\n\n  handleSelectApi = selectValue => {\n    this.curSelectValue = selectValue;\n    this.props.fetchNewsData(this.props.typeid, this.props.type, 1, 10, selectValue);\n  };\n\n  render() {\n    let data = this.props.newsData ? this.props.newsData.list : [];\n\n    const curDiffData = this.state.curDiffData;\n    let logType = {\n      project: '项目',\n      group: '分组',\n      interface: '接口',\n      interface_col: '接口集',\n      user: '用户',\n      other: '其他'\n    };\n\n    const children = this.state.apiList.map(item => {\n      let methodColor = variable.METHOD_COLOR[item.method ? item.method.toLowerCase() : 'get'];\n      return (\n        <Option title={item.title} value={item._id + ''} path={item.path} key={item._id}>\n          {item.title}{' '}\n          <Tag\n            style={{ color: methodColor ? methodColor.color : '#cfefdf', backgroundColor: methodColor ? methodColor.bac : '#00a854', border: 'unset' }}\n          >\n            {item.method}\n          </Tag>\n        </Option>\n      );\n    });\n\n    children.unshift(\n      <Option value=\"\" key=\"all\">\n        选择全部\n      </Option>\n    );\n\n    if (data && data.length) {\n      data = data.map((item, i) => {\n        let interfaceDiff = false;\n        // 去掉了 && item.data.interface_id\n        if (item.data && typeof item.data === 'object') {\n          interfaceDiff = true;\n        }\n        return (\n          <Timeline.Item\n            dot={\n              <Link to={`/user/profile/${item.uid}`}>\n                <Avatar src={`/api/user/avatar?uid=${item.uid}`} />\n              </Link>\n            }\n            key={i}\n          >\n            <div className=\"logMesHeade\">\n              <span className=\"logoTimeago\">{timeago(item.add_time)}</span>\n              {/*<span className=\"logusername\"><Link to={`/user/profile/${item.uid}`}><Icon type=\"user\" />{item.username}</Link></span>*/}\n              <span className=\"logtype\">{logType[item.type]}动态</span>\n              <span className=\"logtime\">{formatTime(item.add_time)}</span>\n            </div>\n            <span className=\"logcontent\" dangerouslySetInnerHTML={{ __html: item.content }} />\n            <div style={{ padding: '10px 0 0 10px' }}>\n              {interfaceDiff && <Button onClick={() => this.openDiff(item.data)}>改动详情</Button>}\n            </div>\n          </Timeline.Item>\n        );\n      });\n    } else {\n      data = '';\n    }\n    let pending =\n      this.props.newsData.total <= this.props.curpage ? (\n        <a className=\"logbidden\">以上为全部内容</a>\n      ) : (\n        <a className=\"loggetMore\" onClick={this.getMore.bind(this)}>\n          查看更多\n        </a>\n      );\n    if (this.state.loading) {\n      pending = <Spin />;\n    }\n    let diffView = showDiffMsg(jsondiffpatch, formattersHtml, curDiffData);\n\n    return (\n      <section className=\"news-timeline\">\n        <Modal\n          style={{ minWidth: '800px' }}\n          title=\"Api 改动日志\"\n          visible={this.state.visible}\n          footer={null}\n          onCancel={this.handleCancel}\n        >\n          <i>注： 绿色代表新增内容，红色代表删除内容</i>\n          <div className=\"project-interface-change-content\">\n            {diffView.map((item, index) => {\n              return (\n                <AddDiffView\n                  className=\"item-content\"\n                  title={item.title}\n                  key={index}\n                  content={item.content}\n                />\n              );\n            })}\n            {diffView.length === 0 && <ErrMsg type=\"noChange\" />}\n          </div>\n        </Modal>\n        {this.props.type === 'project' && (\n          <Row className=\"news-search\">\n            <Col span=\"3\">选择查询的 Api：</Col>\n            <Col span=\"10\">\n              <AutoComplete\n                onSelect={this.handleSelectApi}\n                style={{ width: '100%' }}\n                placeholder=\"Select Api\"\n                optionLabelProp=\"title\"\n                filterOption={(inputValue, options) => {\n                  if (options.props.value == '') return true;\n                  if (\n                    options.props.path.indexOf(inputValue) !== -1 ||\n                    options.props.title.indexOf(inputValue) !== -1\n                  ) {\n                    return true;\n                  }\n                  return false;\n                }}\n              >\n                {/* {children} */}\n                <OptGroup label=\"other\">\n                  <Option value=\"wiki\" path=\"\" title=\"wiki\">\n                    wiki\n                  </Option>\n                </OptGroup>\n                <OptGroup label=\"api\">{children}</OptGroup>\n              </AutoComplete>\n            </Col>\n          </Row>\n        )}\n        {data ? (\n          <Timeline className=\"news-content\" pending={pending}>\n            {data}\n          </Timeline>\n        ) : (\n          <ErrMsg type=\"noData\" />\n        )}\n      </section>\n    );\n  }\n}\n\nexport default TimeTree;\n"]}