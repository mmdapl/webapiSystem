{"version":3,"sources":["node_modules\\json-schema-editor-visual\\package\\App.js"],"names":["FormItem","Item","Option","TextArea","TabPane","GenerateSchema","require","utils","jsonSchema","props","showModal","setState","visible","handleOk","importJsonType","jsonData","error","Model","changeEditorSchemaAction","value","jsonSchemaData","handleCancel","alterMsg","handleParams","e","text","format","changeType","key","changeTypeAction","handleImportJson","handleImportJsonSchema","addChildField","addChildFieldAction","show","clickIcon","state","changeValue","mock","changeValueAction","handleEditOk","editVisible","name","descriptionKey","handleEditCancel","showEdit","prefix","type","concat","editorModalName","changeDesc","handleAdvOk","itemKey","length","curItemCustomValue","advVisible","handleAdvCancel","showAdv","changeCustomValue","newValue","changeCheckBox","checked","requireAllAction","required","schema","description","componentWillReceiveProps","nextProps","onChange","oldData","JSON","stringify","newData","data","parse","componentWillMount","getChildContext","getOpenValue","getData","open","keys","isMock","render","disabled","target","minRows","maxRows","showEditor","SCHEMA_TYPE","map","item","index","React","Component","childContextTypes","PropTypes","func","object","bool","propTypes","string"],"mappings":"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","file":"App.js","sourceRoot":"C:/Users/DUOYI/Desktop/api/test/vendors","sourcesContent":["import React from 'react';\nimport {\n  Input,\n  Row,\n  Tooltip,\n  Col,\n  Form,\n  Select,\n  Checkbox,\n  Button,\n  Icon,\n  Modal,\n  message,\n  Tabs,\n  AutoComplete\n} from 'antd';\nconst FormItem = Form.Item;\nconst Option = Select.Option;\nconst { TextArea } = Input;\nconst TabPane = Tabs.TabPane;\n\nimport './index.css';\nimport AceEditor from './components/AceEditor/AceEditor.js';\nimport _ from 'underscore';\nimport { connect } from 'react-redux';\nimport SchemaJson from './components/SchemaComponents/SchemaJson.js';\nimport PropTypes from 'prop-types';\nimport { SCHEMA_TYPE, debounce } from './utils.js';\nimport handleSchema from './schema';\nconst GenerateSchema = require('generate-schema/src/schemas/json.js');\nconst utils = require('./utils');\nimport CustomItem from './components/SchemaComponents/SchemaOther.js';\nimport LocalProvider from './components/LocalProvider/index.js';\nimport MockSelect from './components/MockSelect/index.js';\n\n\n\nclass jsonSchema extends React.Component {\n  constructor(props) {\n    super(props);\n    this.alterMsg = debounce(this.alterMsg, 2000);\n    this.state = {\n      visible: false,\n      show: true,\n      editVisible: false,\n      description: '',\n      descriptionKey: null,\n      advVisible: false,\n      itemKey: [],\n      curItemCustomValue: null,\n      checked: false,\n      editorModalName: '', // 弹窗名称desctiption | mock\n      mock: ''\n    };\n    this.Model = this.props.Model.schema;\n    this.jsonSchemaData = null;\n    this.jsonData = null;\n  }\n\n  // json 导入弹窗\n  showModal = () => {\n    this.setState({\n      visible: true\n    });\n  };\n  handleOk = () => {\n    if (this.importJsonType !== 'schema') {\n      if (!this.jsonData) {\n        return message.error('json 数据格式有误');\n      }\n\n      let jsonData = GenerateSchema(this.jsonData);\n      this.Model.changeEditorSchemaAction({ value: jsonData });\n    } else {\n      if (!this.jsonSchemaData) {\n        return message.error('json 数据格式有误');\n      }\n      this.Model.changeEditorSchemaAction({ value: this.jsonSchemaData });\n    }\n    this.setState({ visible: false });\n  };\n  handleCancel = () => {\n    this.setState({ visible: false });\n  };\n\n  componentWillReceiveProps(nextProps) {\n    if (typeof this.props.onChange === 'function' && this.props.schema !== nextProps.schema) {\n      let oldData = JSON.stringify(this.props.schema || '');\n      let newData = JSON.stringify(nextProps.schema || '');\n      if (oldData !== newData) return this.props.onChange(newData);\n    }\n    if (this.props.data && this.props.data !== nextProps.data) {\n      this.Model.changeEditorSchemaAction({ value: JSON.parse(nextProps.data) });\n    }\n  }\n\n  componentWillMount() {\n    let data = this.props.data;\n    if (!data) {\n      data = `{\n        \"type\": \"object\",\n        \"title\": \"empty object\",\n        \"properties\":{}\n      }`;\n    }\n    this.Model.changeEditorSchemaAction({ value: JSON.parse(data) });\n  }\n\n  getChildContext() {\n    return {\n      getOpenValue: keys => {\n        return utils.getData(this.props.open, keys);\n      },\n      changeCustomValue: this.changeCustomValue,\n      Model: this.props.Model,\n      isMock: this.props.isMock\n    };\n  }\n\n  alterMsg = () => {\n    // return message.error(LocalProvider('valid_json'));\n  };\n\n  // AceEditor 中的数据\n  handleParams = e => {\n    if (!e.text) return;\n    // 将数据map 到store中\n    if (e.format !== true) {\n      return this.alterMsg();\n    }\n    handleSchema(e.jsonData);\n    this.Model.changeEditorSchemaAction({\n      value: e.jsonData\n    });\n  };\n\n  // 修改数据类型\n  changeType = (key, value) => {\n    this.Model.changeTypeAction({ key: [key], value });\n  };\n\n  handleImportJson = e => {\n    if (!e.text || e.format !== true) {\n      return (this.jsonData = null);\n    }\n    this.jsonData = e.jsonData;\n  };\n\n  handleImportJsonSchema = e => {\n    if (!e.text || e.format !== true) {\n      return (this.jsonSchemaData = null);\n    }\n    this.jsonSchemaData = e.jsonData;\n  };\n  // 增加子节点\n  addChildField = key => {\n    this.Model.addChildFieldAction({ key: [key] });\n    this.setState({ show: true });\n  };\n\n  clickIcon = () => {\n    this.setState({ show: !this.state.show });\n  };\n\n  // 修改备注信息\n  changeValue = (key, value) => {\n    if (key[0] === 'mock') {\n      value = value ? { mock: value } : '';\n    }\n    this.Model.changeValueAction({ key, value });\n  };\n\n  // 备注/mock弹窗 点击ok 时\n  handleEditOk = name => {\n    this.setState({\n      editVisible: false\n    });\n    let value = this.state[name];\n    if (name === 'mock') {\n      value = value ? { mock: value } : '';\n    }\n    this.Model.changeValueAction({ key: this.state.descriptionKey, value });\n  };\n\n  handleEditCancel = () => {\n    this.setState({\n      editVisible: false\n    });\n  };\n  /*\n    展示弹窗modal\n    prefix: 节点前缀信息\n    name: 弹窗的名称 ['description', 'mock']\n    value: 输入值\n    type: 如果当前字段是object || array showEdit 不可用\n  */\n  showEdit = (prefix, name, value, type) => {\n    if (type === 'object' || type === 'array') {\n      return;\n    }\n    let descriptionKey = [].concat(prefix, name);\n\n    value = name === 'mock' ? (value ? value.mock : '') : value;\n    this.setState({\n      editVisible: true,\n      [name]: value,\n      descriptionKey,\n      editorModalName: name\n    });\n  };\n\n  // 修改备注/mock参数信息\n  changeDesc = (e, name) => {\n    this.setState({\n      [name]: e\n    });\n  };\n\n  // 高级设置\n  handleAdvOk = () => {\n    if (this.state.itemKey.length === 0) {\n      this.Model.changeEditorSchemaAction({\n        value: this.state.curItemCustomValue\n      });\n    } else {\n      this.Model.changeValueAction({\n        key: this.state.itemKey,\n        value: this.state.curItemCustomValue\n      });\n    }\n    this.setState({\n      advVisible: false\n    });\n  };\n  handleAdvCancel = () => {\n    this.setState({\n      advVisible: false\n    });\n  };\n  showAdv = (key, value) => {\n    this.setState({\n      advVisible: true,\n      itemKey: key,\n      curItemCustomValue: value // 当前节点的数据信息\n    });\n  };\n\n  //  修改弹窗中的json-schema 值\n  changeCustomValue = newValue => {\n    this.setState({\n      curItemCustomValue: newValue\n    });\n  };\n\n  changeCheckBox = e => {\n    this.setState({ checked: e });\n    this.Model.requireAllAction({ required: e, value: this.props.schema });\n  };\n\n  render() {\n    const {\n      visible,\n      editVisible,\n      description,\n      advVisible,\n      type,\n      checked,\n      editorModalName\n    } = this.state;\n    const { schema } = this.props;\n\n    let disabled =\n      this.props.schema.type === 'object' || this.props.schema.type === 'array' ? false : true;\n\n    return (\n      <div className=\"json-schema-react-editor\">\n        <Button className=\"import-json-button\" type=\"primary\" onClick={this.showModal}>\n          {LocalProvider('import_json')}\n        </Button>\n        <Modal\n          maskClosable={false}\n          visible={visible}\n          title={LocalProvider('import_json')}\n          onOk={this.handleOk}\n          onCancel={this.handleCancel}\n          className=\"json-schema-react-editor-import-modal\"\n          okText={'ok'}\n          cancelText={LocalProvider('cancel')}\n          footer={[\n            <Button key=\"back\" onClick={this.handleCancel}>\n              {LocalProvider('cancel')}\n            </Button>,\n            <Button key=\"submit\" type=\"primary\" onClick={this.handleOk}>\n              {LocalProvider('ok')}\n            </Button>\n          ]}\n        >\n          <Tabs\n            defaultActiveKey=\"json\"\n            onChange={key => {\n              this.importJsonType = key;\n            }}\n          >\n            <TabPane tab=\"JSON\" key=\"json\">\n              <AceEditor data=\"\" mode=\"json\" onChange={this.handleImportJson} />\n            </TabPane>\n            <TabPane tab=\"JSON-SCHEMA\" key=\"schema\">\n              <AceEditor data=\"\" mode=\"json\" onChange={this.handleImportJsonSchema} />\n            </TabPane>\n          </Tabs>\n        </Modal>\n\n        <Modal\n          title={\n            <div>\n              {LocalProvider(editorModalName)}\n              &nbsp;\n              {editorModalName === 'mock' && (\n                <Tooltip title={LocalProvider('mockLink')}>\n                  <a\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    href=\"https://yapi.ymfe.org/documents/mock.html#方式2.-json-schema\"\n                  >\n                    <Icon type=\"question-circle-o\" />\n                  </a>\n                </Tooltip>\n              )}\n            </div>\n          }\n          maskClosable={false}\n          visible={editVisible}\n          onOk={() => this.handleEditOk(editorModalName)}\n          onCancel={this.handleEditCancel}\n          okText={LocalProvider('ok')}\n          cancelText={LocalProvider('cancel')}\n        >\n          <TextArea\n            value={this.state[editorModalName]}\n            placeholder={LocalProvider(editorModalName)}\n            onChange={e => this.changeDesc(e.target.value, editorModalName)}\n            autosize={{ minRows: 6, maxRows: 10 }}\n          />\n        </Modal>\n\n        {advVisible && (\n          <Modal\n            title={LocalProvider('adv_setting')}\n            maskClosable={false}\n            visible={advVisible}\n            onOk={this.handleAdvOk}\n            onCancel={this.handleAdvCancel}\n            okText={LocalProvider('ok')}\n            width={780}\n            cancelText={LocalProvider('cancel')}\n            className=\"json-schema-react-editor-adv-modal\"\n          >\n            <CustomItem data={JSON.stringify(this.state.curItemCustomValue, null, 2)} />\n          </Modal>\n        )}\n\n        <Row>\n          {this.props.showEditor && (\n            <Col span={8}>\n              <AceEditor\n                className=\"pretty-editor\"\n                mode=\"json\"\n                data={JSON.stringify(schema, null, 2)}\n                onChange={this.handleParams}\n              />\n            </Col>\n          )}\n          <Col span={this.props.showEditor ? 16 : 24} className=\"wrapper object-style\">\n            <Row type=\"flex\" align=\"middle\">\n              <Col span={this.props.isMock ? 10 : 12} className=\"col-item name-item col-item-name\">\n                <Row type=\"flex\" justify=\"space-around\" align=\"middle\">\n                  <Col span={2} className=\"down-style-col\">\n                    {schema.type === 'object' ? (\n                      <span className=\"down-style\" onClick={this.clickIcon}>\n                        {this.state.show ? (\n                          <Icon className=\"icon-object\" type=\"caret-down\" />\n                        ) : (\n                          <Icon className=\"icon-object\" type=\"caret-right\" />\n                        )}\n                      </span>\n                    ) : null}\n                  </Col>\n                  <Col span={22}>\n                    <Input\n                      addonAfter={\n                        <Tooltip placement=\"top\" title={'checked_all'}>\n                          <Checkbox\n                            checked={checked}\n                            disabled={disabled}\n                            onChange={e => this.changeCheckBox(e.target.checked)}\n                          />\n                        </Tooltip>\n                      }\n                      disabled\n                      value=\"root\"\n                    />\n                  </Col>\n                </Row>\n              </Col>\n              <Col span={4} className=\"col-item col-item-type\">\n                <Select\n                  className=\"type-select-style\"\n                  onChange={e => this.changeType(`type`, e)}\n                  value={schema.type || 'object'}\n                >\n                  {SCHEMA_TYPE.map((item, index) => {\n                    return (\n                      <Option value={item} key={index}>\n                        {item}\n                      </Option>\n                    );\n                  })}\n                </Select>\n              </Col>\n              {this.props.isMock && (\n                <Col span={3} className=\"col-item col-item-mock\">\n                  <MockSelect\n                    schema={schema}\n                    showEdit={() => this.showEdit([], 'mock', schema.mock, schema.type)}\n                    onChange={value => this.changeValue(['mock'], value)}\n                  />\n                </Col>\n              )}\n              <Col span={this.props.isMock ? 4 : 5} className=\"col-item col-item-desc\">\n                <Input\n                  addonAfter={\n                    <Icon\n                      type=\"edit\"\n                      onClick={() =>\n                        this.showEdit([], 'description', this.props.schema.description)\n                      }\n                    />\n                  }\n                  placeholder={'description'}\n                  value={schema.description}\n                  onChange={e => this.changeValue(['description'], e.target.value)}\n                />\n              </Col>\n              <Col span={3} className=\"col-item col-item-setting\">\n                <span className=\"adv-set\" onClick={() => this.showAdv([], this.props.schema)}>\n                  <Tooltip placement=\"top\" title={LocalProvider('adv_setting')}>\n                    <Icon type=\"setting\" />\n                  </Tooltip>\n                </span>\n                {schema.type === 'object' ? (\n                  <span onClick={() => this.addChildField('properties')}>\n                    <Tooltip placement=\"top\" title={LocalProvider('add_child_node')}>\n                      <Icon type=\"plus\" className=\"plus\" />\n                    </Tooltip>\n                  </span>\n                ) : null}\n              </Col>\n            </Row>\n            {this.state.show && (\n              <SchemaJson\n                data={this.props.schema}\n                showEdit={this.showEdit}\n                showAdv={this.showAdv}\n              />\n            )}\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\njsonSchema.childContextTypes = {\n  getOpenValue: PropTypes.func,\n  changeCustomValue: PropTypes.func,\n  Model: PropTypes.object,\n  isMock: PropTypes.bool\n};\n\njsonSchema.propTypes = {\n  data: PropTypes.string,\n  onChange: PropTypes.func,\n  showEditor: PropTypes.bool,\n  isMock: PropTypes.bool,\n  Model: PropTypes.object\n};\n\nexport default connect(state => ({\n  schema: state.schema.data,\n  open: state.schema.open\n}))(jsonSchema);\n"]}