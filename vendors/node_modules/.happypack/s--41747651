'use strict';

exports.__esModule = true;
exports.fetchMockCol = undefined;

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

// Action Creators
var fetchMockCol = exports.fetchMockCol = function () {
  var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee(interfaceId) {
    var result;
    return _regenerator2.default.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.next = 2;
            return _axios2.default.get('/api/plugin/advmock/case/list?interface_id=' + interfaceId);

          case 2:
            result = _context.sent;
            return _context.abrupt('return', {
              type: FETCH_MOCK_COL,
              payload: result.data
            });

          case 4:
          case 'end':
            return _context.stop();
        }
      }
    }, _callee, this);
  }));

  return function fetchMockCol(_x2) {
    return _ref.apply(this, arguments);
  };
}();

var _axios = require('axios');

var _axios2 = _interopRequireDefault(_axios);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Actions
var FETCH_MOCK_COL = 'yapi/mockCol/FETCH_MOCK_COL';

// Reducer
var initialState = {
  list: []
};

exports.default = function () {
  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
  var action = arguments[1];

  switch (action.type) {
    case FETCH_MOCK_COL:
      return (0, _extends3.default)({}, state, {
        list: action.payload.data
      });
    default:
      return state;
  }
};