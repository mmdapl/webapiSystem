'use strict';

exports.__esModule = true;

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _select = require('antd/lib/select');

var _select2 = _interopRequireDefault(_select);

var _class, _temp;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _axios = require('axios');

var _axios2 = _interopRequireDefault(_axios);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Option = _select2.default.Option;

/**
 * 用户名输入框自动完成组件
 *
 * @component UsernameAutoComplete
 * @examplelanguage js
 *
 * * 用户名输入框自动完成组件
 * * 用户名输入框自动完成组件
 *
 *s
 */

/**
 * 获取自动输入的用户信息
 *
 * 获取子组件state
 * @property callbackState
 * @type function
 * @description 类型提示：支持数组传值；也支持用函数格式化字符串：函数有两个参数(scale, index)；
 * 受控属性：滑块滑到某一刻度时所展示的刻度文本信息。如果不需要标签，请将该属性设置为 [] 空列表来覆盖默认转换函数。
 * @returns {object} {uid: xxx, username: xxx}
 * @examplelanguage js
 * @example
 * onUserSelect(childState) {
 *   this.setState({
 *     uid: childState.uid,
 *     username: childState.username
 *   })
 * }
 *
 */
var UsernameAutoComplete = (_temp = _class = function (_Component) {
  (0, _inherits3.default)(UsernameAutoComplete, _Component);

  function UsernameAutoComplete(props) {
    (0, _classCallCheck3.default)(this, UsernameAutoComplete);

    // this.lastFetchId = 0;
    // this.fetchUser = debounce(this.fetchUser, 800);
    var _this = (0, _possibleConstructorReturn3.default)(this, _Component.call(this, props));

    _this.state = {
      dataSource: [],
      fetching: false
    };

    _this.handleSearch = function (value) {
      var params = { q: value };
      // this.lastFetchId += 1;
      // const fetchId = this.lastFetchId;
      _this.setState({ fetching: true });
      _axios2.default.get('/api/user/search', { params: params }).then(function (data) {
        // if (fetchId !== this.lastFetchId) { // for fetch callback order
        //   return;
        // }
        var userList = [];
        data = data.data.data;

        if (data) {
          data.forEach(function (v) {
            return userList.push({
              username: v.username,
              id: v.uid
            });
          });
          // 取回搜索值后，设置 dataSource
          _this.setState({
            dataSource: userList
          });
        }
      });
    };

    _this.handleChange = function (value) {
      _this.setState({
        dataSource: [],
        // value,
        fetching: false
      });
      _this.props.callbackState(value);
    };

    return _this;
  }

  // 搜索回调


  // 选中候选词时


  UsernameAutoComplete.prototype.render = function render() {
    var _state = this.state,
        dataSource = _state.dataSource,
        fetching = _state.fetching;


    var children = dataSource.map(function (item, index) {
      return _react2.default.createElement(
        Option,
        { key: index, value: '' + item.id },
        item.username
      );
    });

    // if (!children.length) {
    //   fetching = false;
    // }
    return _react2.default.createElement(
      _select2.default,
      {
        mode: 'multiple',
        style: { width: '100%' },
        placeholder: '\u8BF7\u8F93\u5165\u7528\u6237\u540D',
        filterOption: false,
        optionLabelProp: 'children',
        notFoundContent: fetching ? _react2.default.createElement(
          'span',
          { style: { color: 'red' } },
          ' \u5F53\u524D\u7528\u6237\u4E0D\u5B58\u5728'
        ) : null,
        onSearch: this.handleSearch,
        onChange: this.handleChange
      },
      children
    );
  };

  return UsernameAutoComplete;
}(_react.PureComponent), _class.propTypes = {
  callbackState: _propTypes2.default.func
}, _temp);
exports.default = UsernameAutoComplete;