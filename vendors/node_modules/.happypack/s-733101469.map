{"version":3,"sources":["client\\components\\CaseEnv\\index.js"],"names":["Option","Panel","CaseEnv","props","callback","changeClose","key","render","margin","marginBottom","collapseKey","envList","length","map","item","_id","name","width","envValue","currProjectEnvChange","val","env","domain","React","Component","propTypes","PropTypes","array","func","any","object"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mBAAA;;AAEA;;;;AACA;;;;AAIA;;;;AAFA,IAAMA,SAAS,iBAAOA,MAAtB;AACA,IAAMC,QAAQ,mBAASA,KAAvB;IAGqBC,O;;;AACnB,mBAAYC,KAAZ,EAAmB;AAAA;;AAAA,+DACjB,4BAAMA,KAAN,CADiB;;AAAA,UAYnBC,QAZmB,GAYR,eAAO;AAChB,YAAKD,KAAL,CAAWE,WAAX,IAA0B,MAAKF,KAAL,CAAWE,WAAX,CAAuBC,GAAvB,CAA1B;AACD,KAdkB;;AAAA;AAElB;;oBAcDC,M,qBAAS;AAAA;;AACP,WACE;AAAA;AAAA;AACE,eAAO;AACLC,kBAAQ,CADH;AAELC,wBAAc;AAFT,SADT;AAKE,kBAAU,KAAKL;AACf;AANF,UAOE,WAAW,KAAKD,KAAL,CAAWO;AAPxB;AASE;AAAC,aAAD;AAAA;AACE,kBACE;AAAA;AAAA;AACG,eADH;AAAA;AAGE;AAAA;AAAA,gBAAS,OAAM,gFAAf;AACG,iBADH;AAEE,8DAAM,MAAK,mBAAX,GAFF;AAEoC;AAFpC;AAHF,WAFJ;AAWE,eAAI;AAXN;AAaE;AAAA;AAAA,YAAK,WAAU,UAAf;AACG,eAAKP,KAAL,CAAWQ,OAAX,CAAmBC,MAAnB,GAA4B,CAA5B,IACC;AAAA;AAAA;AACG,iBAAKT,KAAL,CAAWQ,OAAX,CAAmBE,GAAnB,CAAuB,gBAAQ;AAC9B,qBACE;AAAA;AAAA;AACE,uBAAKC,KAAKC,GADZ;AAEE,wBAAK,MAFP;AAGE,2BAAQ,cAHV;AAIE,yBAAM,QAJR;AAKE,6BAAU;AALZ;AAOE;AAAA;AAAA,oBAAK,MAAM,CAAX,EAAc,WAAU,OAAxB;AACE;AAAA;AAAA,sBAAS,OAAOD,KAAKE,IAArB;AACE;AAAA;AAAA,wBAAM,WAAU,YAAhB;AAA8BF,2BAAKE;AAAnC;AADF;AADF,iBAPF;AAYE;AAAA;AAAA,oBAAK,MAAM,EAAX;AACE;AAAA;AAAA;AACE,6BAAO;AACLC,+BAAO;AADF,uBADT;AAIE,6BAAO,OAAKd,KAAL,CAAWe,QAAX,CAAoBJ,KAAKC,GAAzB,KAAiC,EAJ1C;AAKE,oCAAa,EALf;AAME,gCAAU;AAAA,+BAAO,OAAKZ,KAAL,CAAWgB,oBAAX,CAAgCC,GAAhC,EAAqCN,KAAKC,GAA1C,CAAP;AAAA;AANZ;AAQE;AAAC,4BAAD;AAAA,wBAAQ,KAAI,SAAZ,EAAsB,OAAM,EAA5B;AAAA;AAAA,qBARF;AAYGD,yBAAKO,GAAL,CAASR,GAAT,CAAa,eAAO;AACnB,6BACE;AAAC,8BAAD;AAAA,0BAAQ,OAAOP,IAAIU,IAAnB,EAAyB,KAAKV,IAAIS,GAAlC;AACGT,4BAAIU,IAAJ,GAAW,IAAX,GAAkBV,IAAIgB;AADzB,uBADF;AAKD,qBANA;AAZH;AADF;AAZF,eADF;AAqCD,aAtCA;AADH;AAFJ;AAbF;AATF,KADF;AAuED,G;;;EAzFkCC,gBAAMC,S,UAKlCC,S,GAAY;AACjBd,WAASe,oBAAUC,KADF;AAEjBR,wBAAsBO,oBAAUE,IAFf;AAGjBvB,eAAaqB,oBAAUE,IAHN;AAIjBlB,eAAagB,oBAAUG,GAJN;AAKjBX,YAAUQ,oBAAUI;AALH,C;kBALA5B,O","file":"index.js","sourceRoot":"C:/Users/DUOYI/Desktop/api/test/vendors","sourcesContent":["// 测试集合中的环境切换\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Select, Row, Col, Collapse, Icon, Tooltip } from 'antd';\nconst Option = Select.Option;\nconst Panel = Collapse.Panel;\nimport './index.scss';\n\nexport default class CaseEnv extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  static propTypes = {\n    envList: PropTypes.array,\n    currProjectEnvChange: PropTypes.func,\n    changeClose: PropTypes.func,\n    collapseKey: PropTypes.any,\n    envValue: PropTypes.object\n  };\n\n  callback = key => {\n    this.props.changeClose && this.props.changeClose(key);\n  };\n\n  render() {\n    return (\n      <Collapse\n        style={{\n          margin: 0,\n          marginBottom: '16px'\n        }}\n        onChange={this.callback}\n        // activeKey={this.state.activeKey}\n        activeKey={this.props.collapseKey}\n      >\n        <Panel\n          header={\n            <span>\n              {' '}\n              选择测试用例环境\n              <Tooltip title=\"默认使用测试用例选择的环境\">\n                {' '}\n                <Icon type=\"question-circle-o\" />{' '}\n              </Tooltip>\n            </span>\n          }\n          key=\"1\"\n        >\n          <div className=\"case-env\">\n            {this.props.envList.length > 0 && (\n              <div>\n                {this.props.envList.map(item => {\n                  return (\n                    <Row\n                      key={item._id}\n                      type=\"flex\"\n                      justify=\"space-around\"\n                      align=\"middle\"\n                      className=\"env-item\"\n                    >\n                      <Col span={6} className=\"label\">\n                        <Tooltip title={item.name}>\n                          <span className=\"label-name\">{item.name}</span>\n                        </Tooltip>\n                      </Col>\n                      <Col span={18}>\n                        <Select\n                          style={{\n                            width: '100%'\n                          }}\n                          value={this.props.envValue[item._id] || ''}\n                          defaultValue=\"\"\n                          onChange={val => this.props.currProjectEnvChange(val, item._id)}\n                        >\n                          <Option key=\"default\" value=\"\">\n                            默认环境\n                          </Option>\n\n                          {item.env.map(key => {\n                            return (\n                              <Option value={key.name} key={key._id}>\n                                {key.name + ': ' + key.domain}\n                              </Option>\n                            );\n                          })}\n                        </Select>\n                      </Col>\n                    </Row>\n                  );\n                })}\n              </div>\n            )}\n          </div>\n        </Panel>\n      </Collapse>\n    );\n  }\n}\n"]}