'use strict';

exports.__esModule = true;

var _table = require('antd/lib/table');

var _table2 = _interopRequireDefault(_table);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _keys = require('babel-runtime/core-js/object/keys');

var _keys2 = _interopRequireDefault(_keys);

var _class, _temp;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _json = require('json5');

var _json2 = _interopRequireDefault(_json);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _shemaTransformToTable = require('../../../common/shema-transformTo-table.js');

var _underscore = require('underscore');

var _underscore2 = _interopRequireDefault(_underscore);

require('./index.scss');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var messageMap = {
  desc: '备注',
  default: '实例',
  maximum: '最大值',
  minimum: '最小值',
  maxItems: '最大数量',
  minItems: '最小数量',
  maxLength: '最大长度',
  minLength: '最小长度',
  enum: '枚举',
  enumDesc: '枚举备注',
  uniqueItems: '元素是否都不同',
  itemType: 'item 类型',
  format: 'format',
  itemFormat: 'format',
  mock: 'mock'
};

var columns = [{
  title: '名称',
  dataIndex: 'name',
  key: 'name',
  width: 200
}, {
  title: '类型',
  dataIndex: 'type',
  key: 'type',
  width: 100,
  render: function render(text, item) {
    // console.log('text',item.sub);
    return text === 'array' ? _react2.default.createElement(
      'span',
      null,
      item.sub ? item.sub.itemType || '' : 'array',
      ' []'
    ) : _react2.default.createElement(
      'span',
      null,
      text
    );
  }
}, {
  title: '是否必须',
  dataIndex: 'required',
  key: 'required',
  width: 80,
  render: function render(text) {
    return _react2.default.createElement(
      'div',
      null,
      text ? '必须' : '非必须'
    );
  }
}, {
  title: '默认值',
  dataIndex: 'default',
  key: 'default',
  width: 80,
  render: function render(text) {
    return _react2.default.createElement(
      'div',
      null,
      _underscore2.default.isBoolean(text) ? text + '' : text
    );
  }
}, {
  title: '备注',
  dataIndex: 'desc',
  key: 'desc',
  render: function render(text, item) {
    return _underscore2.default.isUndefined(item.childrenDesc) ? _react2.default.createElement(
      'span',
      { className: 'table-desc' },
      text
    ) : _react2.default.createElement(
      'span',
      { className: 'table-desc' },
      item.childrenDesc
    );
  }
}, {
  title: '其他信息',
  dataIndex: 'sub',
  key: 'sub',
  width: 180,
  render: function render(text, record) {
    var result = text || record;

    return (0, _keys2.default)(result).map(function (item, index) {
      var name = messageMap[item];
      var value = result[item];
      var isShow = !_underscore2.default.isUndefined(result[item]) && !_underscore2.default.isUndefined(name);

      return isShow && _react2.default.createElement(
        'p',
        { key: index },
        _react2.default.createElement(
          'span',
          { style: { fontWeight: '700' } },
          name,
          ': '
        ),
        _react2.default.createElement(
          'span',
          null,
          value.toString()
        )
      );
    });
  }
}];

var SchemaTable = (_temp = _class = function (_Component) {
  (0, _inherits3.default)(SchemaTable, _Component);

  function SchemaTable(props) {
    (0, _classCallCheck3.default)(this, SchemaTable);
    return (0, _possibleConstructorReturn3.default)(this, _Component.call(this, props));
  }

  SchemaTable.prototype.render = function render() {
    var product = void 0;
    try {
      product = _json2.default.parse(this.props.dataSource);
    } catch (e) {
      product = null;
    }
    if (!product) {
      return null;
    }
    var data = (0, _shemaTransformToTable.schemaTransformToTable)(product);
    data = _underscore2.default.isArray(data) ? data : [];
    return _react2.default.createElement(_table2.default, { bordered: true, size: 'small', pagination: false, dataSource: data, columns: columns });
  };

  return SchemaTable;
}(_react.Component), _class.propTypes = {
  dataSource: _propTypes2.default.string
}, _temp);
exports.default = SchemaTable;