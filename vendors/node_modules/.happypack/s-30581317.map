{"version":3,"sources":["client\\containers\\Project\\Setting\\ProjectData\\ProjectData.js"],"names":["Dragger","Option","confirm","plugin","require","RadioGroup","Group","importDataModule","exportDataModule","HandleImportData","handleExportRouteParams","url","status","isWiki","urlObj","URL","parse","query","format","pathname","ProjectData","curCatid","state","inter","curdata","catid","basePath","project","currProject","basepath","updateLogList","news","swaggerUrlData","saveImportData","fetchUpdateLogData","handleSwaggerUrlData","props","uploadChange","info","file","console","log","fileList","success","name","error","handleAddInterface","res","match","params","id","selectCatid","menuList","dataSync","setState","showLoading","handleFile","curImportType","reader","FileReader","readAsText","onload","run","target","result","showConfirm","that","typeid","apiCollections","apis","map","method","item","path","type","domainData","payload","data","ref","title","width","okType","iconType","className","okText","cancelText","content","index","__html","onOk","onCancel","destroy","handleImportType","val","isSwaggerUrl","handleExportType","curExportType","onChange","checked","handleUrlChange","swaggerUrlInput","swaggerUrl","onUrlUpload","message","handleChange","exportContent","e","value","handleWikiChange","componentWillMount","axios","get","then","errcode","_id","emitHook","selectChange","render","uploadMess","multiple","showUploadList","action","customRequest","exportUrl","route","exportHref","bind","input","option","children","toLowerCase","indexOf","key","color","stopPropagation","desc","marginLeft","display","length","Component","propTypes","PropTypes","object","number","string","func","array"],"mappings":"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","file":"ProjectData.js","sourceRoot":"C:/Users/DUOYI/Desktop/api/test/vendors","sourcesContent":["import React, { PureComponent as Component } from 'react';\nimport {\n  Upload,\n  Icon,\n  message,\n  Select,\n  Tooltip,\n  Button,\n  Spin,\n  Switch,\n  Modal,\n  Radio,\n  Input,\n  Checkbox\n} from 'antd';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport './ProjectData.scss';\nimport axios from 'axios';\n\nimport URL from 'url';\n\nconst Dragger = Upload.Dragger;\nimport { saveImportData } from '../../../../reducer/modules/interface';\nimport { fetchUpdateLogData } from '../../../../reducer/modules/news.js';\nimport { handleSwaggerUrlData } from '../../../../reducer/modules/project';\nconst Option = Select.Option;\nconst confirm = Modal.confirm;\nconst plugin = require('client/plugin.js');\nconst RadioGroup = Radio.Group;\nconst importDataModule = {};\nconst exportDataModule = {};\nconst HandleImportData = require('common/HandleImportData');\nfunction handleExportRouteParams(url, status, isWiki) {\n  if (!url) {\n    return;\n  }\n  let urlObj = URL.parse(url, true),\n    query = {};\n  query = Object.assign(query, urlObj.query, { status, isWiki });\n  return URL.format({\n    pathname: urlObj.pathname,\n    query\n  });\n}\n\n// exportDataModule.pdf = {\n//   name: 'Pdf',\n//   route: '/api/interface/download_crx',\n//   desc: '导出项目接口文档为 pdf 文件'\n// }\n@connect(\n  state => {\n    return {\n      curCatid: -(-state.inter.curdata.catid),\n      basePath: state.project.currProject.basepath,\n      updateLogList: state.news.updateLogList,\n      swaggerUrlData: state.project.swaggerUrlData\n    };\n  },\n  {\n    saveImportData,\n    fetchUpdateLogData,\n    handleSwaggerUrlData\n  }\n)\nclass ProjectData extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectCatid: '',\n      menuList: [],\n      curImportType: 'swagger',\n      curExportType: null,\n      showLoading: false,\n      dataSync: 'merge',\n      exportContent: 'all',\n      isSwaggerUrl: false,\n      swaggerUrl: '',\n      isWiki: false\n    };\n  }\n  static propTypes = {\n    match: PropTypes.object,\n    curCatid: PropTypes.number,\n    basePath: PropTypes.string,\n    saveImportData: PropTypes.func,\n    fetchUpdateLogData: PropTypes.func,\n    updateLogList: PropTypes.array,\n    handleSwaggerUrlData: PropTypes.func,\n    swaggerUrlData: PropTypes.string\n  };\n\n  componentWillMount() {\n    axios.get(`/api/interface/getCatMenu?project_id=${this.props.match.params.id}`).then(data => {\n      if (data.data.errcode === 0) {\n        let menuList = data.data.data;\n        this.setState({\n          menuList: menuList,\n          selectCatid: menuList[0]._id\n        });\n      }\n    });\n    plugin.emitHook('import_data', importDataModule);\n    plugin.emitHook('export_data', exportDataModule, this.props.match.params.id);\n  }\n\n  selectChange(value) {\n    this.setState({\n      selectCatid: +value\n    });\n  }\n\n  uploadChange = info => {\n    const status = info.file.status;\n    if (status !== 'uploading') {\n      console.log(info.file, info.fileList);\n    }\n    if (status === 'done') {\n      message.success(`${info.file.name} 文件上传成功`);\n    } else if (status === 'error') {\n      message.error(`${info.file.name} 文件上传失败`);\n    }\n  };\n\n  handleAddInterface = async res => {\n    return await HandleImportData(\n      res,\n      this.props.match.params.id,\n      this.state.selectCatid,\n      this.state.menuList,\n      this.props.basePath,\n      this.state.dataSync,\n      message.error,\n      message.success,\n      () => this.setState({ showLoading: false })\n    );\n  };\n\n  // 本地文件上传\n  handleFile = info => {\n    if (!this.state.curImportType) {\n      return message.error('请选择导入数据的方式');\n    }\n    if (this.state.selectCatid) {\n      this.setState({ showLoading: true });\n      let reader = new FileReader();\n      reader.readAsText(info.file);\n      reader.onload = async res => {\n        res = await importDataModule[this.state.curImportType].run(res.target.result);\n        if (this.state.dataSync === 'merge') {\n          // 开启同步\n          this.showConfirm(res);\n        } else {\n          // 未开启同步\n          await this.handleAddInterface(res);\n        }\n      };\n    } else {\n      message.error('请选择上传的默认分类');\n    }\n  };\n\n  showConfirm = async res => {\n    let that = this;\n    let typeid = this.props.match.params.id;\n    let apiCollections = res.apis.map(item => {\n      return {\n        method: item.method,\n        path: item.path\n      };\n    });\n    let result = await this.props.fetchUpdateLogData({\n      type: 'project',\n      typeid,\n      apis: apiCollections\n    });\n    let domainData = result.payload.data.data;\n    const ref = confirm({\n      title: '您确认要进行数据同步????',\n      width: 600,\n      okType: 'danger',\n      iconType: 'exclamation-circle',\n      className: 'dataImport-confirm',\n      okText: '确认',\n      cancelText: '取消',\n      content: (\n        <div className=\"postman-dataImport-modal\">\n          <div className=\"postman-dataImport-modal-content\">\n            {domainData.map((item, index) => {\n              return (\n                <div key={index} className=\"postman-dataImport-show-diff\">\n                  <span className=\"logcontent\" dangerouslySetInnerHTML={{ __html: item.content }} />\n                </div>\n              );\n            })}\n          </div>\n          <p className=\"info\">温馨提示： 数据同步后，可能会造成原本的修改数据丢失</p>\n        </div>\n      ),\n      async onOk() {\n        await that.handleAddInterface(res);\n      },\n      onCancel() {\n        that.setState({ showLoading: false, dataSync: 'normal' });\n        ref.destroy();\n      }\n    });\n  };\n\n  handleImportType = val => {\n    this.setState({\n      curImportType: val,\n      isSwaggerUrl: false\n    });\n  };\n\n  handleExportType = val => {\n    this.setState({\n      curExportType: val,\n      isWiki: false\n    });\n  };\n\n  // 处理导入信息同步\n  onChange = checked => {\n    this.setState({\n      dataSync: checked\n    });\n  };\n\n  // 处理swagger URL 导入\n  handleUrlChange = checked => {\n    this.setState({\n      isSwaggerUrl: checked\n    });\n  };\n\n  // 记录输入的url\n  swaggerUrlInput = url => {\n    this.setState({\n      swaggerUrl: url\n    });\n  };\n\n  // url导入上传\n  onUrlUpload = async () => {\n    if (!this.state.curImportType) {\n      return message.error('请选择导入数据的方式');\n    }\n\n    if (!this.state.swaggerUrl) {\n      return message.error('url 不能为空');\n    }\n    if (this.state.selectCatid) {\n      this.setState({ showLoading: true });\n      try {\n        // 处理swagger url 导入\n        await this.props.handleSwaggerUrlData(this.state.swaggerUrl);\n        // let result = json5_parse(this.props.swaggerUrlData)\n        let res = await importDataModule[this.state.curImportType].run(this.props.swaggerUrlData);\n        if (this.state.dataSync === 'merge') {\n          // merge\n          this.showConfirm(res);\n        } else {\n          // 未开启同步\n          await this.handleAddInterface(res);\n        }\n      } catch (e) {\n        this.setState({ showLoading: false });\n        message.error(e.message);\n      }\n    } else {\n      message.error('请选择上传的默认分类');\n    }\n  };\n\n  // 处理导出接口是全部还是公开\n  handleChange = e => {\n    this.setState({ exportContent: e.target.value });\n  };\n\n  //  处理是否开启wiki导出\n  handleWikiChange = e => {\n    this.setState({\n      isWiki: e.target.checked\n    });\n  };\n\n  /**\n   *\n   *\n   * @returns\n   * @memberof ProjectData\n   */\n  render() {\n    const uploadMess = {\n      name: 'interfaceData',\n      multiple: true,\n      showUploadList: false,\n      action: '/api/interface/interUpload',\n      customRequest: this.handleFile,\n      onChange: this.uploadChange\n    };\n\n    let exportUrl =\n      this.state.curExportType &&\n      exportDataModule[this.state.curExportType] &&\n      exportDataModule[this.state.curExportType].route;\n    let exportHref = handleExportRouteParams(\n      exportUrl,\n      this.state.exportContent,\n      this.state.isWiki\n    );\n\n    // console.log('inter', this.state.exportContent);\n    return (\n      <div className=\"g-row\">\n        <div className=\"m-panel\">\n          <div className=\"postman-dataImport\">\n            <div className=\"dataImportCon\">\n              <div>\n                <h3>\n                  数据导入&nbsp;\n                  <a\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    href=\"https://hellosean1025.github.io/yapi/documents/data.html\"\n                  >\n                    <Tooltip title=\"点击查看文档\">\n                      <Icon type=\"question-circle-o\" />\n                    </Tooltip>\n                  </a>\n                </h3>\n              </div>\n              <div className=\"dataImportTile\">\n                <Select\n                  placeholder=\"请选择导入数据的方式\"\n                  value={this.state.curImportType}\n                  onChange={this.handleImportType}\n                >\n                  {Object.keys(importDataModule).map(name => {\n                    return (\n                      <Option key={name} value={name}>\n                        {importDataModule[name].name}\n                      </Option>\n                    );\n                  })}\n                </Select>\n              </div>\n              <div className=\"catidSelect\">\n                <Select\n                  value={this.state.selectCatid + ''}\n                  showSearch\n                  style={{ width: '100%' }}\n                  placeholder=\"请选择数据导入的默认分类\"\n                  optionFilterProp=\"children\"\n                  onChange={this.selectChange.bind(this)}\n                  filterOption={(input, option) =>\n                    option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                  }\n                >\n                  {this.state.menuList.map((item, key) => {\n                    return (\n                      <Option key={key} value={item._id + ''}>\n                        {item.name}\n                      </Option>\n                    );\n                  })}\n                </Select>\n              </div>\n              <div className=\"dataSync\">\n                <span className=\"label\">\n                  数据同步&nbsp;\n                  <Tooltip\n                    title={\n                      <div>\n                        <h3 style={{ color: 'white' }}>普通模式</h3>\n                        <p>不导入已存在的接口</p>\n                        <br />\n                        <h3 style={{ color: 'white' }}>智能合并</h3>\n                        <p>\n                          已存在的接口，将合并返回数据的 response，适用于导入了 swagger\n                          数据，保留对数据结构的改动\n                        </p>\n                        <br />\n                        <h3 style={{ color: 'white' }}>完全覆盖</h3>\n                        <p>不保留旧数据，完全使用新数据，适用于接口定义完全交给后端定义</p>\n                      </div>\n                    }\n                  >\n                    <Icon type=\"question-circle-o\" />\n                  </Tooltip>{' '}\n                </span>\n                <Select value={this.state.dataSync} onChange={this.onChange}>\n                  <Option value=\"normal\">普通模式</Option>\n                  <Option value=\"good\">智能合并</Option>\n                  <Option value=\"merge\">完全覆盖</Option>\n                </Select>\n\n                {/* <Switch checked={this.state.dataSync} onChange={this.onChange} /> */}\n              </div>\n              {this.state.curImportType === 'swagger' && (\n                <div className=\"dataSync\">\n                  <span className=\"label\">\n                    开启url导入&nbsp;\n                    <Tooltip title=\"swagger url 导入\">\n                      <Icon type=\"question-circle-o\" />\n                    </Tooltip>{' '}\n                    &nbsp;&nbsp;\n                  </span>\n\n                  <Switch checked={this.state.isSwaggerUrl} onChange={this.handleUrlChange} />\n                </div>\n              )}\n              {this.state.isSwaggerUrl ? (\n                <div className=\"import-content url-import-content\">\n                  <Input\n                    placeholder=\"http://demo.swagger.io/v2/swagger.json\"\n                    onChange={e => this.swaggerUrlInput(e.target.value)}\n                  />\n                  <Button\n                    type=\"primary\"\n                    className=\"url-btn\"\n                    onClick={this.onUrlUpload}\n                    loading={this.state.showLoading}\n                  >\n                    上传\n                  </Button>\n                </div>\n              ) : (\n                <div className=\"import-content\">\n                  <Spin spinning={this.state.showLoading} tip=\"上传中...\">\n                    <Dragger {...uploadMess}>\n                      <p className=\"ant-upload-drag-icon\">\n                        <Icon type=\"inbox\" />\n                      </p>\n                      <p className=\"ant-upload-text\">点击或者拖拽文件到上传区域</p>\n                      <p\n                        className=\"ant-upload-hint\"\n                        onClick={e => {\n                          e.stopPropagation();\n                        }}\n                        dangerouslySetInnerHTML={{\n                          __html: this.state.curImportType\n                            ? importDataModule[this.state.curImportType].desc\n                            : null\n                        }}\n                      />\n                    </Dragger>\n                  </Spin>\n                </div>\n              )}\n            </div>\n\n            <div\n              className=\"dataImportCon\"\n              style={{\n                marginLeft: '20px',\n                display: Object.keys(exportDataModule).length > 0 ? '' : 'none'\n              }}\n            >\n              <div>\n                <h3>数据导出</h3>\n              </div>\n              <div className=\"dataImportTile\">\n                <Select placeholder=\"请选择导出数据的方式\" onChange={this.handleExportType}>\n                  {Object.keys(exportDataModule).map(name => {\n                    return (\n                      <Option key={name} value={name}>\n                        {exportDataModule[name].name}\n                      </Option>\n                    );\n                  })}\n                </Select>\n              </div>\n\n              <div className=\"dataExport\">\n                <RadioGroup defaultValue=\"all\" onChange={this.handleChange}>\n                  <Radio value=\"all\">全部接口</Radio>\n                  <Radio value=\"open\">公开接口</Radio>\n                </RadioGroup>\n              </div>\n              <div className=\"export-content\">\n                {this.state.curExportType ? (\n                  <div>\n                    <p className=\"export-desc\">{exportDataModule[this.state.curExportType].desc}</p>\n                    <a \n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                      href={exportHref}>\n                      <Button className=\"export-button\" type=\"primary\" size=\"large\">\n                        {' '}\n                        导出{' '}\n                      </Button>\n                    </a>\n                    <Checkbox\n                      checked={this.state.isWiki}\n                      onChange={this.handleWikiChange}\n                      className=\"wiki-btn\"\n                      disabled={this.state.curExportType === 'json'}\n                    >\n                      添加wiki&nbsp;\n                      <Tooltip title=\"开启后 html 和 markdown 数据导出会带上wiki数据\">\n                        <Icon type=\"question-circle-o\" />\n                      </Tooltip>{' '}\n                    </Checkbox>\n                  </div>\n                ) : (\n                  <Button disabled className=\"export-button\" type=\"primary\" size=\"large\">\n                    {' '}\n                    导出{' '}\n                  </Button>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ProjectData;\n"]}