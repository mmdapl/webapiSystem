'use strict';

exports.__esModule = true;

var _button = require('antd/lib/button');

var _button2 = _interopRequireDefault(_button);

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _input = require('antd/lib/input');

var _input2 = _interopRequireDefault(_input);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _keys = require('babel-runtime/core-js/object/keys');

var _keys2 = _interopRequireDefault(_keys);

var _form = require('antd/lib/form');

var _form2 = _interopRequireDefault(_form);

var _class, _temp2;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var FormItem = _form2.default.Item;
function hasErrors(fieldsError) {
  return (0, _keys2.default)(fieldsError).some(function (field) {
    return fieldsError[field];
  });
}
var AddInterfaceForm = (_temp2 = _class = function (_Component) {
  (0, _inherits3.default)(AddInterfaceForm, _Component);

  function AddInterfaceForm() {
    var _temp, _this, _ret;

    (0, _classCallCheck3.default)(this, AddInterfaceForm);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.handleSubmit = function (e) {
      e.preventDefault();
      _this.props.form.validateFields(function (err, values) {
        if (!err) {
          _this.props.onSubmit(values);
        }
      });
    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
  }

  AddInterfaceForm.prototype.render = function render() {
    var _props$form = this.props.form,
        getFieldDecorator = _props$form.getFieldDecorator,
        getFieldsError = _props$form.getFieldsError;

    var formItemLayout = {
      labelCol: {
        xs: { span: 24 },
        sm: { span: 6 }
      },
      wrapperCol: {
        xs: { span: 24 },
        sm: { span: 14 }
      }
    };

    return _react2.default.createElement(
      _form2.default,
      { onSubmit: this.handleSubmit },
      _react2.default.createElement(
        FormItem,
        (0, _extends3.default)({}, formItemLayout, { label: '\u5206\u7C7B\u540D' }),
        getFieldDecorator('name', {
          rules: [{
            required: true,
            message: '请输入分类名称!'
          }],
          initialValue: this.props.catdata ? this.props.catdata.name || null : null
        })(_react2.default.createElement(_input2.default, { placeholder: '\u5206\u7C7B\u540D\u79F0' }))
      ),
      _react2.default.createElement(
        FormItem,
        (0, _extends3.default)({}, formItemLayout, { label: '\u5907\u6CE8' }),
        getFieldDecorator('desc', {
          initialValue: this.props.catdata ? this.props.catdata.desc || null : null
        })(_react2.default.createElement(_input2.default, { placeholder: '\u5907\u6CE8' }))
      ),
      _react2.default.createElement(
        FormItem,
        { className: 'catModalfoot', wrapperCol: { span: 24, offset: 8 } },
        _react2.default.createElement(
          _button2.default,
          { onClick: this.props.onCancel, style: { marginRight: '10px' } },
          '\u53D6\u6D88'
        ),
        _react2.default.createElement(
          _button2.default,
          { type: 'primary', htmlType: 'submit', disabled: hasErrors(getFieldsError()) },
          '\u63D0\u4EA4'
        )
      )
    );
  };

  return AddInterfaceForm;
}(_react.PureComponent), _class.propTypes = {
  form: _propTypes2.default.object,
  onSubmit: _propTypes2.default.func,
  onCancel: _propTypes2.default.func,
  catdata: _propTypes2.default.object
}, _temp2);
exports.default = _form2.default.create()(AddInterfaceForm);