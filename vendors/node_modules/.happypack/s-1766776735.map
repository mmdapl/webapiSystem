{"version":3,"sources":["client\\components\\Postman\\Postman.js"],"names":["require","handleParamsValue","ArrayToObject","schemaValidator","handleParams","checkRequestBodyIsRaw","handleContentType","crossRequest","checkNameIsExistInArray","createContext","HTTP_METHOD","constants","InputGroup","Group","Option","Panel","InsertCodeMap","code","title","ParamsNameComponent","example","props","desc","name","isNull","TooltipTitle","propTypes","PropTypes","string","Run","handleReqHeader","value","env","index","findIndex","item","req_header","concat","data","req_headers","header","forEach","abled","push","filter","selectDomain","headers","state","setState","case_env","onOpenTest","test_script","d","text","handleInsertCode","aceEditor","editor","insertCode","handleRequestBody","req_body_other","reqRealInterface","loading","options","handleValue","result","taskId","curUid","pre_script","after_script","projectId","interfaceId","res","body","status","statusText","runTime","message","tempJson","res_body_type","validResult","resBodyValidator","valid","test_valid_msg","resStatusCode","resStatusText","test_res_header","test_res_body","interfaceData","res_body_is_json_schema","res_body","schema","params","changeParam","v","key","pathParam","enable","changeBody","bodyForm","req_body_form","type","showModal","val","inputValue","cursurPosition","session","doc","positionToIndex","selection","getCursor","getInstallValue","oTxt1","document","getElementById","selectionStart","modalVisible","inputIndex","modalType","handleModalOk","changeInstallBody","changeInstallParam","oldValue","newValue","left","right","substr","leftPostion","lastIndexOf","leftPostion2","rightPostion","indexOf","substring","handleModalCancel","showEnvModal","envModalVisible","handleEnvOk","newEnv","handleEnvCancel","mock_verify","enable_script","hasPlugin","row","column","autoPreviewHTML","checkInterfaceData","_id","initState","req_body_type","req_body_is_json_schema","json5","parse","console","log","axios","post","required","reduce","map","initEnvState","s","_","find","componentWillMount","_crossRequestInterval","componentWillUnmount","clearInterval","componentWillReceiveProps","nextProps","interface_up_time","global","globalValue","render","method","path","req_params","req_query","project_id","display","flexBasis","toUpperCase","flexGrow","domain","cursor","color","changePath","marginLeft","save","length","e","target","addPathParam","checked","addQuery","addHeader","justifyContent","request_body","addBody","renderer","setShowGutter","visibility","testResponseBodyIsHTML","margin","hd","String","Component","object","func","number","isRequired"],"mappings":"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","file":"Postman.js","sourceRoot":"C:/Users/DUOYI/Desktop/api/test/vendors","sourcesContent":["import React, { PureComponent as Component } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  Input,\n  Checkbox,\n  Modal,\n  Select,\n  Spin,\n  Icon,\n  Collapse,\n  Tooltip,\n  Tabs,\n  Switch,\n  Row,\n  Col,\n  Alert\n} from 'antd';\nimport constants from '../../constants/variable.js';\nimport AceEditor from 'client/components/AceEditor/AceEditor';\nimport _ from 'underscore';\nimport { isJson, deepCopyJson, json5_parse } from '../../common.js';\nimport axios from 'axios';\nimport ModalPostman from '../ModalPostman/index.js';\nimport CheckCrossInstall, { initCrossRequest } from './CheckCrossInstall.js';\nimport './Postman.scss';\nimport ProjectEnv from '../../containers/Project/Setting/ProjectEnv/index.js';\nimport json5 from 'json5';\nconst { handleParamsValue, ArrayToObject, schemaValidator } = require('common/utils.js');\nconst {\n  handleParams,\n  checkRequestBodyIsRaw,\n  handleContentType,\n  crossRequest,\n  checkNameIsExistInArray\n} = require('common/postmanLib.js');\n\nconst createContext = require('common/createContext')\n\nconst HTTP_METHOD = constants.HTTP_METHOD;\nconst InputGroup = Input.Group;\nconst Option = Select.Option;\nconst Panel = Collapse.Panel;\n\nexport const InsertCodeMap = [\n  {\n    code: 'assert.equal(status, 200)',\n    title: '断言 httpCode 等于 200'\n  },\n  {\n    code: 'assert.equal(body.code, 0)',\n    title: '断言返回数据 code 是 0'\n  },\n  {\n    code: 'assert.notEqual(status, 404)',\n    title: '断言 httpCode 不是 404'\n  },\n  {\n    code: 'assert.notEqual(body.code, 40000)',\n    title: '断言返回数据 code 不是 40000'\n  },\n  {\n    code: 'assert.deepEqual(body, {\"code\": 0})',\n    title: '断言对象 body 等于 {\"code\": 0}'\n  },\n  {\n    code: 'assert.notDeepEqual(body, {\"code\": 0})',\n    title: '断言对象 body 不等于 {\"code\": 0}'\n  }\n];\n\nconst ParamsNameComponent = props => {\n  const { example, desc, name } = props;\n  const isNull = !example && !desc;\n  const TooltipTitle = () => {\n    return (\n      <div>\n        {example && (\n          <div>\n            示例： <span className=\"table-desc\">{example}</span>\n          </div>\n        )}\n        {desc && (\n          <div>\n            备注： <span className=\"table-desc\">{desc}</span>\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  return (\n    <div>\n      {isNull ? (\n        <Input disabled value={name} className=\"key\" />\n      ) : (\n        <Tooltip placement=\"topLeft\" title={<TooltipTitle />}>\n          <Input disabled value={name} className=\"key\" />\n        </Tooltip>\n      )}\n    </div>\n  );\n};\nParamsNameComponent.propTypes = {\n  example: PropTypes.string,\n  desc: PropTypes.string,\n  name: PropTypes.string\n};\nexport default class Run extends Component {\n  static propTypes = {\n    data: PropTypes.object, //接口原有数据\n    save: PropTypes.func, //保存回调方法\n    type: PropTypes.string, //enum[case, inter], 判断是在接口页面使用还是在测试集\n    curUid: PropTypes.number.isRequired,\n    interfaceId: PropTypes.number.isRequired,\n    projectId: PropTypes.number.isRequired\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false,\n      resStatusCode: null,\n      test_valid_msg: null,\n      resStatusText: null,\n      case_env: '',\n      mock_verify: false,\n      enable_script: false,\n      test_script: '',\n      hasPlugin: true,\n      inputValue: '',\n      cursurPosition: { row: 1, column: -1 },\n      envModalVisible: false,\n      test_res_header: null,\n      test_res_body: null,\n      autoPreviewHTML: true,\n      ...this.props.data\n    };\n  }\n\n  get testResponseBodyIsHTML() {\n    const hd = this.state.test_res_header\n    return hd != null\n      && typeof hd === 'object'\n      && String(hd['Content-Type'] || hd['content-type']).indexOf('text/html') !== -1\n  }\n\n  checkInterfaceData(data) {\n    if (!data || typeof data !== 'object' || !data._id) {\n      return false;\n    }\n    return true;\n  }\n\n  // 整合header信息\n  handleReqHeader = (value, env) => {\n    let index = value\n      ? env.findIndex(item => {\n          return item.name === value;\n        })\n      : 0;\n    index = index === -1 ? 0 : index;\n\n    let req_header = [].concat(this.props.data.req_headers || []);\n    let header = [].concat(env[index].header || []);\n    header.forEach(item => {\n      if (!checkNameIsExistInArray(item.name, req_header)) {\n        item = {\n          ...item,\n          abled: true\n        };\n        req_header.push(item);\n      }\n    });\n    req_header = req_header.filter(item => {\n      return item && typeof item === 'object';\n    });\n    return req_header;\n  };\n\n  selectDomain = value => {\n    let headers = this.handleReqHeader(value, this.state.env);\n    this.setState({\n      case_env: value,\n      req_headers: headers\n    });\n  };\n\n  async initState(data) {\n    if (!this.checkInterfaceData(data)) {\n      return null;\n    }\n\n    const { req_body_other, req_body_type, req_body_is_json_schema } = data;\n    let body = req_body_other;\n    // 运行时才会进行转换\n    if (\n      this.props.type === 'inter' &&\n      req_body_type === 'json' &&\n      req_body_other &&\n      req_body_is_json_schema\n    ) {\n      let schema = {};\n      try {\n        schema = json5.parse(req_body_other);\n      } catch (e) {\n        console.log('e', e);\n        return;\n      }\n      let result = await axios.post('/api/interface/schema2json', {\n        schema: schema,\n        required: true\n      });\n      body = JSON.stringify(result.data);\n    }\n\n    let example = {}\n    if(this.props.type === 'inter'){\n      example = ['req_headers', 'req_query', 'req_body_form'].reduce(\n        (res, key) => {\n          res[key] = (data[key] || []).map(item => {\n            if (\n              item.type !== 'file' // 不是文件类型\n                && (item.value == null || item.value === '') // 初始值为空\n                && item.example != null // 有示例值\n            ) {\n              item.value = item.example;\n            }\n            return item;\n          })\n          return res;\n        },\n        {}\n      )\n    }\n\n    this.setState(\n      {\n        ...this.state,\n        test_res_header: null,\n        test_res_body: null,\n        ...data,\n        ...example,\n        req_body_other: body,\n        resStatusCode: null,\n        test_valid_msg: null,\n        resStatusText: null\n      },\n      () => this.props.type === 'inter' && this.initEnvState(data.case_env, data.env)\n    );\n  }\n\n  initEnvState(case_env, env) {\n    let headers = this.handleReqHeader(case_env, env);\n\n    this.setState(\n      {\n        req_headers: headers,\n        env: env\n      },\n      () => {\n        let s = !_.find(env, item => item.name === this.state.case_env);\n        if (!this.state.case_env || s) {\n          this.setState({\n            case_env: this.state.env[0].name\n          });\n        }\n      }\n    );\n  }\n\n  componentWillMount() {\n    this._crossRequestInterval = initCrossRequest(hasPlugin => {\n      this.setState({\n        hasPlugin: hasPlugin\n      });\n    });\n    this.initState(this.props.data);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this._crossRequestInterval);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.checkInterfaceData(nextProps.data) && this.checkInterfaceData(this.props.data)) {\n      if (nextProps.data._id !== this.props.data._id) {\n        this.initState(nextProps.data);\n      } else if (nextProps.data.interface_up_time !== this.props.data.interface_up_time) {\n        this.initState(nextProps.data);\n      }\n      if (nextProps.data.env !== this.props.data.env) {\n        this.initEnvState(this.state.case_env, nextProps.data.env);\n      }\n    }\n  }\n\n  handleValue(val, global) {\n    let globalValue = ArrayToObject(global);\n    return handleParamsValue(val, {\n      global: globalValue\n    });\n  }\n\n  onOpenTest = d => {\n    this.setState({\n      test_script: d.text\n    });\n  };\n\n  handleInsertCode = code => {\n    this.aceEditor.editor.insertCode(code);\n  };\n\n  handleRequestBody = d => {\n    this.setState({\n      req_body_other: d.text\n    });\n  };\n\n  reqRealInterface = async () => {\n    if (this.state.loading === true) {\n      this.setState({\n        loading: false\n      });\n      return null;\n    }\n    this.setState({\n      loading: true\n    });\n\n    let options = handleParams(this.state, this.handleValue),\n      result;\n\n    try {\n      options.taskId = this.props.curUid;\n      result = await crossRequest(options, this.state.pre_script, this.state.after_script, createContext(\n        this.props.curUid,\n        this.props.projectId,\n        this.props.interfaceId\n      ));\n      result = {\n        header: result.res.header,\n        body: result.res.body,\n        status: result.res.status,\n        statusText: result.res.statusText,\n        runTime: result.runTime\n      };\n    } catch (data) {\n      result = {\n        header: data.header,\n        body: data.body,\n        status: null,\n        statusText: data.message\n      };\n    }\n    if (this.state.loading === true) {\n      this.setState({\n        loading: false\n      });\n    } else {\n      return null;\n    }\n\n    let tempJson = result.body;\n    if (tempJson && typeof tempJson === 'object') {\n      result.body = JSON.stringify(tempJson, null, '  ');\n      this.setState({\n        res_body_type: 'json'\n      });\n    } else if (isJson(result.body)) {\n      this.setState({\n        res_body_type: 'json'\n      });\n    }\n\n    // 对 返回值数据结构 和定义的 返回数据结构 进行 格式校验\n    let validResult = this.resBodyValidator(this.props.data, result.body);\n    if (!validResult.valid) {\n      this.setState({ test_valid_msg: `返回参数 ${validResult.message}` });\n    } else {\n      this.setState({ test_valid_msg: '' });\n    }\n\n    this.setState({\n      resStatusCode: result.status,\n      resStatusText: result.statusText,\n      test_res_header: result.header,\n      test_res_body: result.body\n    });\n  };\n\n  // 返回数据与定义数据的比较判断\n  resBodyValidator = (interfaceData, test_res_body) => {\n    const { res_body_type, res_body_is_json_schema, res_body } = interfaceData;\n    let validResult = { valid: true };\n\n    if (res_body_type === 'json' && res_body_is_json_schema) {\n      const schema = json5_parse(res_body);\n      const params = json5_parse(test_res_body);\n      validResult = schemaValidator(schema, params);\n    }\n\n    return validResult;\n  };\n\n  changeParam = (name, v, index, key) => {\n    \n    key = key || 'value';\n    const pathParam = deepCopyJson(this.state[name]);\n\n    pathParam[index][key] = v;\n    if (key === 'value') {\n      pathParam[index].enable = !!v;\n    }\n    this.setState({\n      [name]: pathParam\n    });\n  };\n\n  changeBody = (v, index, key) => {\n    const bodyForm = deepCopyJson(this.state.req_body_form);\n    key = key || 'value';\n    if (key === 'value') {\n      bodyForm[index].enable = !!v;\n      if (bodyForm[index].type === 'file') {\n        bodyForm[index].value = 'file_' + index;\n      } else {\n        bodyForm[index].value = v;\n      }\n    } else if (key === 'enable') {\n      bodyForm[index].enable = v;\n    }\n    this.setState({ req_body_form: bodyForm });\n  };\n\n  // 模态框的相关操作\n  showModal = (val, index, type) => {\n    let inputValue = '';\n    let cursurPosition;\n    if (type === 'req_body_other') {\n      // req_body\n      let editor = this.aceEditor.editor.editor;\n      cursurPosition = editor.session.doc.positionToIndex(editor.selection.getCursor());\n      // 获取选中的数据\n      inputValue = this.getInstallValue(val || '', cursurPosition).val;\n    } else {\n      // 其他input 输入\n      let oTxt1 = document.getElementById(`${type}_${index}`);\n      cursurPosition = oTxt1.selectionStart;\n      inputValue = this.getInstallValue(val || '', cursurPosition).val;\n      // cursurPosition = {row: 1, column: position}\n    }\n\n    this.setState({\n      modalVisible: true,\n      inputIndex: index,\n      inputValue,\n      cursurPosition,\n      modalType: type\n    });\n  };\n\n  // 点击插入\n  handleModalOk = val => {\n    const { inputIndex, modalType } = this.state;\n    if (modalType === 'req_body_other') {\n      this.changeInstallBody(modalType, val);\n    } else {\n      this.changeInstallParam(modalType, val, inputIndex);\n    }\n\n    this.setState({ modalVisible: false });\n  };\n\n  // 根据鼠标位置往req_body中动态插入数据\n  changeInstallBody = (type, value) => {\n    const pathParam = deepCopyJson(this.state[type]);\n    // console.log(pathParam)\n    let oldValue = pathParam || '';\n    let newValue = this.getInstallValue(oldValue, this.state.cursurPosition);\n    let left = newValue.left;\n    let right = newValue.right;\n    this.setState({\n      [type]: `${left}${value}${right}`\n    });\n  };\n\n  // 获取截取的字符串\n  getInstallValue = (oldValue, cursurPosition) => {\n    let left = oldValue.substr(0, cursurPosition);\n    let right = oldValue.substr(cursurPosition);\n\n    let leftPostion = left.lastIndexOf('{{');\n    let leftPostion2 = left.lastIndexOf('}}');\n    let rightPostion = right.indexOf('}}');\n    // console.log(leftPostion, leftPostion2,rightPostion, rightPostion2);\n    let val = '';\n    // 需要切除原来的变量\n    if (leftPostion !== -1 && rightPostion !== -1 && leftPostion > leftPostion2) {\n      left = left.substr(0, leftPostion);\n      right = right.substr(rightPostion + 2);\n      val = oldValue.substring(leftPostion, cursurPosition + rightPostion + 2);\n    }\n    return {\n      left,\n      right,\n      val\n    };\n  };\n\n  // 根据鼠标位置动态插入数据\n  changeInstallParam = (name, v, index, key) => {\n    key = key || 'value';\n    const pathParam = deepCopyJson(this.state[name]);\n    let oldValue = pathParam[index][key] || '';\n    let newValue = this.getInstallValue(oldValue, this.state.cursurPosition);\n    let left = newValue.left;\n    let right = newValue.right;\n    pathParam[index][key] = `${left}${v}${right}`;\n    this.setState({\n      [name]: pathParam\n    });\n  };\n\n  // 取消参数插入\n  handleModalCancel = () => {\n    this.setState({ modalVisible: false, cursurPosition: -1 });\n  };\n\n  // 环境变量模态框相关操作\n  showEnvModal = () => {\n    this.setState({\n      envModalVisible: true\n    });\n  };\n\n  handleEnvOk = (newEnv, index) => {\n    this.setState({\n      envModalVisible: false,\n      case_env: newEnv[index].name\n    });\n  };\n\n  handleEnvCancel = () => {\n    this.setState({\n      envModalVisible: false\n    });\n  };\n\n  render() {\n    const {\n      method,\n      env,\n      path,\n      req_params = [],\n      req_headers = [],\n      req_query = [],\n      req_body_type,\n      req_body_form = [],\n      loading,\n      case_env,\n      inputValue,\n      hasPlugin\n    } = this.state;\n    // console.log(env);\n    return (\n      <div className=\"interface-test postman\">\n        {this.state.modalVisible && (\n          <ModalPostman\n            visible={this.state.modalVisible}\n            handleCancel={this.handleModalCancel}\n            handleOk={this.handleModalOk}\n            inputValue={inputValue}\n            envType={this.props.type}\n            id={+this.state._id}\n          />\n        )}\n\n        {this.state.envModalVisible && (\n          <Modal\n            title=\"环境设置\"\n            visible={this.state.envModalVisible}\n            onOk={this.handleEnvOk}\n            onCancel={this.handleEnvCancel}\n            footer={null}\n            width={800}\n            className=\"env-modal\"\n          >\n            <ProjectEnv projectId={this.props.data.project_id} onOk={this.handleEnvOk} />\n          </Modal>\n        )}\n        <CheckCrossInstall hasPlugin={hasPlugin} />\n\n        <div className=\"url\">\n          <InputGroup compact style={{ display: 'flex' }}>\n            <Select disabled value={method} style={{ flexBasis: 60 }}>\n              {Object.keys(HTTP_METHOD).map(name => {\n                <Option value={name.toUpperCase()}>{name.toUpperCase()}</Option>;\n              })}\n            </Select>\n            <Select\n              value={case_env}\n              style={{ flexBasis: 180, flexGrow: 1 }}\n              onSelect={this.selectDomain}\n            >\n              {env.map((item, index) => (\n                <Option value={item.name} key={index}>\n                  {item.name + '：' + item.domain}\n                </Option>\n              ))}\n              <Option value=\"环境配置\" disabled style={{ cursor: 'pointer', color: '#2395f1' }}>\n                <Button type=\"primary\" onClick={this.showEnvModal}>\n                  环境配置\n                </Button>\n              </Option>\n            </Select>\n\n            <Input\n              disabled\n              value={path}\n              onChange={this.changePath}\n              spellCheck=\"false\"\n              style={{ flexBasis: 180, flexGrow: 1 }}\n            />\n          </InputGroup>\n\n          <Tooltip\n            placement=\"bottom\"\n            title={(() => {\n              if (hasPlugin) {\n                return '发送请求';\n              } else {\n                return '请安装 cross-request 插件';\n              }\n            })()}\n          >\n            <Button\n              disabled={!hasPlugin}\n              onClick={this.reqRealInterface}\n              type=\"primary\"\n              style={{ marginLeft: 10 }}\n              icon={loading ? 'loading' : ''}\n            >\n              {loading ? '取消' : '发送'}\n            </Button>\n          </Tooltip>\n\n          <Tooltip\n            placement=\"bottom\"\n            title={() => {\n              return this.props.type === 'inter' ? '保存到测试集' : '更新该用例';\n            }}\n          >\n            <Button onClick={this.props.save} type=\"primary\" style={{ marginLeft: 10 }}>\n              {this.props.type === 'inter' ? '保存' : '更新'}\n            </Button>\n          </Tooltip>\n        </div>\n\n        <Collapse defaultActiveKey={['0', '1', '2', '3']} bordered={true}>\n          <Panel\n            header=\"PATH PARAMETERS\"\n            key=\"0\"\n            className={req_params.length === 0 ? 'hidden' : ''}\n          >\n            {req_params.map((item, index) => {\n              return (\n                <div key={index} className=\"key-value-wrap\">\n                  {/* <Tooltip\n                    placement=\"topLeft\"\n                    title={<TooltipContent example={item.example} desc={item.desc} />}\n                  >\n                    <Input disabled value={item.name} className=\"key\" />\n                  </Tooltip> */}\n                  <ParamsNameComponent example={item.example} desc={item.desc} name={item.name} />\n                  <span className=\"eq-symbol\">=</span>\n                  <Input\n                    value={item.value}\n                    className=\"value\"\n                    onChange={e => this.changeParam('req_params', e.target.value, index)}\n                    placeholder=\"参数值\"\n                    id={`req_params_${index}`}\n                    addonAfter={\n                      <Icon\n                        type=\"edit\"\n                        onClick={() => this.showModal(item.value, index, 'req_params')}\n                      />\n                    }\n                  />\n                </div>\n              );\n            })}\n            <Button\n              style={{ display: 'none' }}\n              type=\"primary\"\n              icon=\"plus\"\n              onClick={this.addPathParam}\n            >\n              添加Path参数\n            </Button>\n          </Panel>\n          <Panel\n            header=\"QUERY PARAMETERS\"\n            key=\"1\"\n            className={req_query.length === 0 ? 'hidden' : ''}\n          >\n            {req_query.map((item, index) => {\n              return (\n                <div key={index} className=\"key-value-wrap\">\n                  {/* <Tooltip\n                    placement=\"topLeft\"\n                    title={<TooltipContent example={item.example} desc={item.desc} />}\n                  >\n                    <Input disabled value={item.name} className=\"key\" />\n                  </Tooltip> */}\n                  <ParamsNameComponent example={item.example} desc={item.desc} name={item.name} />\n                  &nbsp;\n                  {item.required == 1 ? (\n                    <Checkbox className=\"params-enable\" checked={true} disabled />\n                  ) : (\n                    <Checkbox\n                      className=\"params-enable\"\n                      checked={item.enable}\n                      onChange={e =>\n                        this.changeParam('req_query', e.target.checked, index, 'enable')\n                      }\n                    />\n                  )}\n                  <span className=\"eq-symbol\">=</span>\n                  <Input\n                    value={item.value}\n                    className=\"value\"\n                    onChange={e => this.changeParam('req_query', e.target.value, index)}\n                    placeholder=\"参数值\"\n                    id={`req_query_${index}`}\n                    addonAfter={\n                      <Icon\n                        type=\"edit\"\n                        onClick={() => this.showModal(item.value, index, 'req_query')}\n                      />\n                    }\n                  />\n                </div>\n              );\n            })}\n            <Button style={{ display: 'none' }} type=\"primary\" icon=\"plus\" onClick={this.addQuery}>\n              添加Query参数\n            </Button>\n          </Panel>\n          <Panel header=\"HEADERS\" key=\"2\" className={req_headers.length === 0 ? 'hidden' : ''}>\n            {req_headers.map((item, index) => {\n              return (\n                <div key={index} className=\"key-value-wrap\">\n                  {/* <Tooltip\n                    placement=\"topLeft\"\n                    title={<TooltipContent example={item.example} desc={item.desc} />}\n                  >\n                    <Input disabled value={item.name} className=\"key\" />\n                  </Tooltip> */}\n                  <ParamsNameComponent example={item.example} desc={item.desc} name={item.name} />\n                  <span className=\"eq-symbol\">=</span>\n                  <Input\n                    value={item.value}\n                    disabled={!!item.abled}\n                    className=\"value\"\n                    onChange={e => this.changeParam('req_headers', e.target.value, index)}\n                    placeholder=\"参数值\"\n                    id={`req_headers_${index}`}\n                    addonAfter={\n                      !item.abled && (\n                        <Icon\n                          type=\"edit\"\n                          onClick={() => this.showModal(item.value, index, 'req_headers')}\n                        />\n                      )\n                    }\n                  />\n                </div>\n              );\n            })}\n            <Button style={{ display: 'none' }} type=\"primary\" icon=\"plus\" onClick={this.addHeader}>\n              添加Header\n            </Button>\n          </Panel>\n          <Panel\n            header={\n              <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                <Tooltip title=\"F9 全屏编辑\">BODY(F9)</Tooltip>\n              </div>\n            }\n            key=\"3\"\n            className={\n              HTTP_METHOD[method].request_body &&\n              ((req_body_type === 'form' && req_body_form.length > 0) || req_body_type !== 'form')\n                ? 'POST'\n                : 'hidden'\n            }\n          >\n            <div\n              style={{ display: checkRequestBodyIsRaw(method, req_body_type) ? 'block' : 'none' }}\n            >\n              {req_body_type === 'json' && (\n                <div className=\"adv-button\">\n                  <Button\n                    onClick={() => this.showModal(this.state.req_body_other, 0, 'req_body_other')}\n                  >\n                    高级参数设置\n                  </Button>\n                  <Tooltip title=\"高级参数设置只在json字段值中生效\">\n                    {'  '}\n                    <Icon type=\"question-circle-o\" />\n                  </Tooltip>\n                </div>\n              )}\n\n              <AceEditor\n                className=\"pretty-editor\"\n                ref={editor => (this.aceEditor = editor)}\n                data={this.state.req_body_other}\n                mode={req_body_type === 'json' ? null : 'text'}\n                onChange={this.handleRequestBody}\n                fullScreen={true}\n              />\n            </div>\n\n            {HTTP_METHOD[method].request_body &&\n              req_body_type === 'form' && (\n                <div>\n                  {req_body_form.map((item, index) => {\n                    return (\n                      <div key={index} className=\"key-value-wrap\">\n                        {/* <Tooltip\n                          placement=\"topLeft\"\n                          title={<TooltipContent example={item.example} desc={item.desc} />}\n                        >\n                          <Input disabled value={item.name} className=\"key\" />\n                        </Tooltip> */}\n                        <ParamsNameComponent\n                          example={item.example}\n                          desc={item.desc}\n                          name={item.name}\n                        />\n                        &nbsp;\n                        {item.required == 1 ? (\n                          <Checkbox className=\"params-enable\" checked={true} disabled />\n                        ) : (\n                          <Checkbox\n                            className=\"params-enable\"\n                            checked={item.enable}\n                            onChange={e => this.changeBody(e.target.checked, index, 'enable')}\n                          />\n                        )}\n                        <span className=\"eq-symbol\">=</span>\n                        {item.type === 'file' ? (\n                          '因Chrome最新版安全策略限制，不再支持文件上传'\n                          // <Input\n                          //   type=\"file\"\n                          //   id={'file_' + index}\n                          //   onChange={e => this.changeBody(e.target.value, index, 'value')}\n                          //   multiple\n                          //   className=\"value\"\n                          // />\n                        ) : (\n                          <Input\n                            value={item.value}\n                            className=\"value\"\n                            onChange={e => this.changeBody(e.target.value, index)}\n                            placeholder=\"参数值\"\n                            id={`req_body_form_${index}`}\n                            addonAfter={\n                              <Icon\n                                type=\"edit\"\n                                onClick={() => this.showModal(item.value, index, 'req_body_form')}\n                              />\n                            }\n                          />\n                        )}\n                      </div>\n                    );\n                  })}\n                  <Button\n                    style={{ display: 'none' }}\n                    type=\"primary\"\n                    icon=\"plus\"\n                    onClick={this.addBody}\n                  >\n                    添加Form参数\n                  </Button>\n                </div>\n              )}\n            {HTTP_METHOD[method].request_body &&\n              req_body_type === 'file' && (\n                <div>\n                  <Input type=\"file\" id=\"single-file\" />\n                </div>\n              )}\n          </Panel>\n        </Collapse>\n\n        <Tabs size=\"large\" defaultActiveKey=\"res\" className=\"response-tab\">\n          <Tabs.TabPane tab=\"Response\" key=\"res\">\n            <Spin spinning={this.state.loading}>\n              <h2\n                style={{ display: this.state.resStatusCode ? '' : 'none' }}\n                className={\n                  'res-code ' +\n                  (this.state.resStatusCode >= 200 &&\n                  this.state.resStatusCode < 400 &&\n                  !this.state.loading\n                    ? 'success'\n                    : 'fail')\n                }\n              >\n                {this.state.resStatusCode + '  ' + this.state.resStatusText}\n              </h2>\n              <div>\n                <a rel=\"noopener noreferrer\"  target=\"_blank\" href=\"https://juejin.im/post/5c888a3e5188257dee0322af\">YApi 新版如何查看 http 请求数据</a>\n              </div>\n              {this.state.test_valid_msg && (\n                <Alert\n                  message={\n                    <span>\n                      Warning &nbsp;\n                      <Tooltip title=\"针对定义为 json schema 的返回数据进行格式校验\">\n                        <Icon type=\"question-circle-o\" />\n                      </Tooltip>\n                    </span>\n                  }\n                  type=\"warning\"\n                  showIcon\n                  description={this.state.test_valid_msg}\n                />\n              )}\n\n              <div className=\"container-header-body\">\n                <div className=\"header\">\n                  <div className=\"container-title\">\n                    <h4>Headers</h4>\n                  </div>\n                  <AceEditor\n                    callback={editor => {\n                      editor.renderer.setShowGutter(false);\n                    }}\n                    readOnly={true}\n                    className=\"pretty-editor-header\"\n                    data={this.state.test_res_header}\n                    mode=\"json\"\n                  />\n                </div>\n                <div className=\"resizer\">\n                  <div className=\"container-title\">\n                    <h4 style={{ visibility: 'hidden' }}>1</h4>\n                  </div>\n                </div>\n                <div className=\"body\">\n                  <div className=\"container-title\">\n                    <h4>Body</h4>\n                    <Checkbox\n                      checked={this.state.autoPreviewHTML}\n                      onChange={e => this.setState({ autoPreviewHTML: e.target.checked })}>\n                      <span>自动预览HTML</span>\n                    </Checkbox>\n                  </div>\n                  {\n                    this.state.autoPreviewHTML && this.testResponseBodyIsHTML\n                      ? <iframe\n                          className=\"pretty-editor-body\"\n                          srcDoc={this.state.test_res_body}\n                        />\n                      : <AceEditor\n                          readOnly={true}\n                          className=\"pretty-editor-body\"\n                          data={this.state.test_res_body}\n                          mode={handleContentType(this.state.test_res_header)}\n                      />\n                  }\n                </div>\n              </div>\n            </Spin>\n          </Tabs.TabPane>\n          {this.props.type === 'case' ? (\n            <Tabs.TabPane\n              className=\"response-test\"\n              tab={<Tooltip title=\"测试脚本，可断言返回结果，使用方法请查看文档\">Test</Tooltip>}\n              key=\"test\"\n            >\n              <h3 style={{ margin: '5px' }}>\n                &nbsp;是否开启:&nbsp;\n                <Switch\n                  checked={this.state.enable_script}\n                  onChange={e => this.setState({ enable_script: e })}\n                />\n              </h3>\n              <p style={{ margin: '10px' }}>注：Test 脚本只有做自动化测试才执行</p>\n              <Row>\n                <Col span=\"18\">\n                  <AceEditor\n                    onChange={this.onOpenTest}\n                    className=\"case-script\"\n                    data={this.state.test_script}\n                    ref={aceEditor => {\n                      this.aceEditor = aceEditor;\n                    }}\n                  />\n                </Col>\n                <Col span=\"6\">\n                  <div className=\"insert-code\">\n                    {InsertCodeMap.map(item => {\n                      return (\n                        <div\n                          style={{ cursor: 'pointer' }}\n                          className=\"code-item\"\n                          key={item.title}\n                          onClick={() => {\n                            this.handleInsertCode('\\n' + item.code);\n                          }}\n                        >\n                          {item.title}\n                        </div>\n                      );\n                    })}\n                  </div>\n                </Col>\n              </Row>\n            </Tabs.TabPane>\n          ) : null}\n        </Tabs>\n      </div>\n    );\n  }\n}\n"]}