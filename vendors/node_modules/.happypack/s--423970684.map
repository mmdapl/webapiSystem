{"version":3,"sources":["client\\containers\\Project\\Interface\\InterfaceList\\Run\\AddColModal.js"],"names":["TextArea","Panel","AddColModal","interfaceColList","state","interfaceCol","fetchInterfaceColList","withRouter","props","visible","addColName","addColDesc","id","caseName","addCol","name","desc","project_id","match","params","axios","post","res","data","errcode","success","setState","_id","error","errmsg","select","componentWillMount","componentWillReceiveProps","nextProps","render","onOk","onCancel","e","target","value","length","map","col","marginRight","float","Component","propTypes","PropTypes","bool","array","func","object","string"],"mappings":"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","file":"AddColModal.js","sourceRoot":"C:/Users/DUOYI/Desktop/api/test/vendors","sourcesContent":["import React, { PureComponent as Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Modal, Collapse, Row, Col, Input, message, Button, Icon } from 'antd';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport { withRouter } from 'react-router';\nimport { fetchInterfaceColList } from '../../../../../reducer/modules/interfaceCol';\n\nconst { TextArea } = Input;\nconst Panel = Collapse.Panel;\n\n@connect(\n  state => ({\n    interfaceColList: state.interfaceCol.interfaceColList\n  }),\n  {\n    fetchInterfaceColList\n  }\n)\n@withRouter\nexport default class AddColModal extends Component {\n  static propTypes = {\n    visible: PropTypes.bool,\n    interfaceColList: PropTypes.array,\n    fetchInterfaceColList: PropTypes.func,\n    match: PropTypes.object,\n    onOk: PropTypes.func,\n    onCancel: PropTypes.func,\n    caseName: PropTypes.string\n  };\n\n  state = {\n    visible: false,\n    addColName: '',\n    addColDesc: '',\n    id: 0,\n    caseName: ''\n  };\n\n  constructor(props) {\n    super(props);\n  }\n\n  componentWillMount() {\n    this.props.fetchInterfaceColList(this.props.match.params.id);\n    this.setState({ caseName: this.props.caseName });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({ id: nextProps.interfaceColList[0]._id });\n    this.setState({ caseName: nextProps.caseName });\n  }\n\n  addCol = async () => {\n    const { addColName: name, addColDesc: desc } = this.state;\n    const project_id = this.props.match.params.id;\n    const res = await axios.post('/api/col/add_col', { name, desc, project_id });\n    if (!res.data.errcode) {\n      message.success('添加集合成功');\n      await this.props.fetchInterfaceColList(project_id);\n\n      this.setState({ id: res.data.data._id });\n    } else {\n      message.error(res.data.errmsg);\n    }\n  };\n\n  select = id => {\n    this.setState({ id });\n  };\n\n  render() {\n    const { interfaceColList = [] } = this.props;\n    const { id } = this.state;\n    return (\n      <Modal\n        className=\"add-col-modal\"\n        title=\"添加到集合\"\n        visible={this.props.visible}\n        onOk={() => this.props.onOk(id, this.state.caseName)}\n        onCancel={this.props.onCancel}\n      >\n        <Row gutter={6} className=\"modal-input\">\n          <Col span=\"5\">\n            <div className=\"label\">接口用例名：</div>\n          </Col>\n          <Col span=\"15\">\n            <Input\n              placeholder=\"请输入接口用例名称\"\n              value={this.state.caseName}\n              onChange={e => this.setState({ caseName: e.target.value })}\n            />\n          </Col>\n        </Row>\n        <p>请选择添加到的集合：</p>\n        <ul className=\"col-list\">\n          {interfaceColList.length ? (\n            interfaceColList.map(col => (\n              <li\n                key={col._id}\n                className={`col-item ${col._id === id ? 'selected' : ''}`}\n                onClick={() => this.select(col._id)}\n              >\n                <Icon type=\"folder-open\" style={{ marginRight: 6 }} />\n                {col.name}\n              </li>\n            ))\n          ) : (\n            <span>暂无集合，请添加！</span>\n          )}\n        </ul>\n        <Collapse>\n          <Panel header=\"添加新集合\">\n            <Row gutter={6} className=\"modal-input\">\n              <Col span=\"5\">\n                <div className=\"label\">集合名：</div>\n              </Col>\n              <Col span=\"15\">\n                <Input\n                  placeholder=\"请输入集合名称\"\n                  value={this.state.addColName}\n                  onChange={e => this.setState({ addColName: e.target.value })}\n                />\n              </Col>\n            </Row>\n            <Row gutter={6} className=\"modal-input\">\n              <Col span=\"5\">\n                <div className=\"label\">简介：</div>\n              </Col>\n              <Col span=\"15\">\n                <TextArea\n                  rows={3}\n                  placeholder=\"请输入集合描述\"\n                  value={this.state.addColDesc}\n                  onChange={e => this.setState({ addColDesc: e.target.value })}\n                />\n              </Col>\n            </Row>\n            <Row type=\"flex\" justify=\"end\">\n              <Button style={{ float: 'right' }} type=\"primary\" onClick={this.addCol}>\n                添 加\n              </Button>\n            </Row>\n          </Panel>\n        </Collapse>\n      </Modal>\n    );\n  }\n}\n"]}