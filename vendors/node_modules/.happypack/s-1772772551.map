{"version":3,"sources":["client\\containers\\Login\\Reg.js"],"names":["FormItem","Item","formItemStyle","marginBottom","changeHeight","height","Reg","loginData","state","user","regActions","withRouter","props","handleSubmit","e","preventDefault","form","validateFieldsAndScroll","err","values","then","res","payload","data","errcode","history","replace","success","checkPassword","rule","value","callback","getFieldValue","checkConfirm","confirmDirty","validateFields","force","render","getFieldDecorator","rules","required","message","fontSize","pattern","validator","Component","propTypes","PropTypes","object","func","RegForm","create"],"mappings":"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","file":"Reg.js","sourceRoot":"C:/Users/DUOYI/Desktop/api/test/vendors","sourcesContent":["import React, { PureComponent as Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Form, Button, Input, Icon, message } from 'antd';\nimport { regActions } from '../../reducer/modules/user';\nimport { withRouter } from 'react-router';\nconst FormItem = Form.Item;\nconst formItemStyle = {\n  marginBottom: '.16rem'\n};\n\nconst changeHeight = {\n  height: '.42rem'\n};\n\n@connect(\n  state => {\n    return {\n      loginData: state.user\n    };\n  },\n  {\n    regActions\n  }\n)\n@withRouter\nclass Reg extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      confirmDirty: false\n    };\n  }\n\n  static propTypes = {\n    form: PropTypes.object,\n    history: PropTypes.object,\n    regActions: PropTypes.func\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const form = this.props.form;\n    form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        this.props.regActions(values).then(res => {\n          if (res.payload.data.errcode == 0) {\n            this.props.history.replace('/group');\n            message.success('注册成功! ');\n          }\n        });\n      }\n    });\n  };\n\n  checkPassword = (rule, value, callback) => {\n    const form = this.props.form;\n    if (value && value !== form.getFieldValue('password')) {\n      callback('两次输入的密码不一致啊!');\n    } else {\n      callback();\n    }\n  };\n\n  checkConfirm = (rule, value, callback) => {\n    const form = this.props.form;\n    if (value && this.state.confirmDirty) {\n      form.validateFields(['confirm'], { force: true });\n    }\n    callback();\n  };\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        {/* 用户名 */}\n        <FormItem style={formItemStyle}>\n          {getFieldDecorator('userName', {\n            rules: [{ required: true, message: '请输入用户名!' }]\n          })(\n            <Input\n              style={changeHeight}\n              prefix={<Icon type=\"user\" style={{ fontSize: 13 }} />}\n              placeholder=\"Username\"\n            />\n          )}\n        </FormItem>\n\n        {/* Emaiil */}\n        <FormItem style={formItemStyle}>\n          {getFieldDecorator('email', {\n            rules: [\n              {\n                required: true,\n                message: '请输入email!',\n                pattern: /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{1,})+$/\n              }\n            ]\n          })(\n            <Input\n              style={changeHeight}\n              prefix={<Icon type=\"mail\" style={{ fontSize: 13 }} />}\n              placeholder=\"Email\"\n            />\n          )}\n        </FormItem>\n\n        {/* 密码 */}\n        <FormItem style={formItemStyle}>\n          {getFieldDecorator('password', {\n            rules: [\n              {\n                required: true,\n                message: '请输入密码!'\n              },\n              {\n                validator: this.checkConfirm\n              }\n            ]\n          })(\n            <Input\n              style={changeHeight}\n              prefix={<Icon type=\"lock\" style={{ fontSize: 13 }} />}\n              type=\"password\"\n              placeholder=\"Password\"\n            />\n          )}\n        </FormItem>\n\n        {/* 密码二次确认 */}\n        <FormItem style={formItemStyle}>\n          {getFieldDecorator('confirm', {\n            rules: [\n              {\n                required: true,\n                message: '请再次输入密码密码!'\n              },\n              {\n                validator: this.checkPassword\n              }\n            ]\n          })(\n            <Input\n              style={changeHeight}\n              prefix={<Icon type=\"lock\" style={{ fontSize: 13 }} />}\n              type=\"password\"\n              placeholder=\"Confirm Password\"\n            />\n          )}\n        </FormItem>\n\n        {/* 注册按钮 */}\n        <FormItem style={formItemStyle}>\n          <Button\n            style={changeHeight}\n            type=\"primary\"\n            htmlType=\"submit\"\n            className=\"login-form-button\"\n          >\n            注册\n          </Button>\n        </FormItem>\n      </Form>\n    );\n  }\n}\nconst RegForm = Form.create()(Reg);\nexport default RegForm;\n"]}