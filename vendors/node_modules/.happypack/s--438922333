'use strict';

exports.__esModule = true;

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

exports.fetchNewsData = fetchNewsData;
exports.fetchMoreNews = fetchMoreNews;
exports.getMockUrl = getMockUrl;
exports.fetchUpdateLogData = fetchUpdateLogData;

var _axios = require('axios');

var _axios2 = _interopRequireDefault(_axios);

var _variable = require('../../constants/variable');

var _variable2 = _interopRequireDefault(_variable);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Actions
var FETCH_NEWS_DATA = 'yapi/news/FETCH_NEWS_DATA';
var FETCH_MORE_NEWS = 'yapi/news/FETCH_MORE_NEWS';
// Reducer
var initialState = {
  newsData: {
    list: [],
    total: 0
  },
  curpage: 1
};

exports.default = function () {
  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
  var action = arguments[1];

  switch (action.type) {
    case FETCH_NEWS_DATA:
      {
        var list = action.payload.data.data.list;
        state.newsData.list = list;
        state.curpage = 1;
        state.newsData.list.sort(function (a, b) {
          return b.add_time - a.add_time;
        });
        return (0, _extends3.default)({}, state, {
          newsData: {
            total: action.payload.data.data.total,
            list: state.newsData.list
          }
        });
      }
    case FETCH_MORE_NEWS:
      {
        var _state$newsData$list;

        var _list = action.payload.data.data.list;
        (_state$newsData$list = state.newsData.list).push.apply(_state$newsData$list, _list);
        state.newsData.list.sort(function (a, b) {
          return b.add_time - a.add_time;
        });
        if (_list && _list.length) {
          state.curpage++;
        }
        return (0, _extends3.default)({}, state, {
          newsData: {
            total: action.payload.data.data.total,
            list: state.newsData.list
          }
        });
      }
    default:
      return state;
  }
};

// Action Creators


function fetchNewsData(typeid, type, page, limit, selectValue) {
  var param = {
    typeid: typeid,
    type: type,
    page: page,
    limit: limit ? limit : _variable2.default.PAGE_LIMIT,
    selectValue: selectValue
  };

  return {
    type: FETCH_NEWS_DATA,
    payload: _axios2.default.get('/api/log/list', {
      params: param
    })
  };
}
function fetchMoreNews(typeid, type, page, limit, selectValue) {
  var param = {
    typeid: typeid,
    type: type,
    page: page,
    limit: limit ? limit : _variable2.default.PAGE_LIMIT,
    selectValue: selectValue
  };
  return {
    type: FETCH_MORE_NEWS,
    payload: _axios2.default.get('/api/log/list', {
      params: param
    })
  };
}

function getMockUrl(project_id) {
  var params = { id: project_id };
  return {
    type: '',
    payload: _axios2.default.get('/api/project/get', { params: params })
  };
}

function fetchUpdateLogData(params) {
  return {
    type: '',
    payload: _axios2.default.post('/api/log/list_by_update', params)
  };
}