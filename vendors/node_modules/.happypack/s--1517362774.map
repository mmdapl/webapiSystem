{"version":3,"sources":["client\\containers\\Project\\Interface\\InterfaceList\\View.js"],"names":["HTTP_METHOD","constants","View","curData","state","inter","curdata","custom_field","group","field","currProject","project","props","enterItem","setState","enter","leaveItem","copyUrl","url","success","flagMsg","mock","strice","init","req_body_form","req_body_type","columns","title","dataIndex","key","width","render","text","toLowerCase","_","item","whiteSpace","example","value","dataSource","length","map","i","push","name","desc","required","type","display","res_body","res_body_type","res_body_is_json_schema","minHeight","req_body","req_body_other","req_body_is_json_schema","req_query","query","countEnter","str","c","indexOf","componentDidMount","req_headers","req_dataSource","req_params","req_params_columns","status","undone","done","bodyShow","requestShow","methodColor","variable","METHOD_COLOR","method","tag","up_time","uid","username","res","marginTop","join","color","backgroundColor","bac","basepath","path","is_mock_open","window","open","location","protocol","hostname","port","_id","custom_field_value","enable","margin","padding","float","__html","toUpperCase","request_body","Component","propTypes","PropTypes","object"],"mappings":"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","file":"View.js","sourceRoot":"C:/Users/DUOYI/Desktop/api/test/vendors","sourcesContent":["import './View.scss';\nimport React, { PureComponent as Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Table, Icon, Row, Col, Tooltip, message } from 'antd';\nimport { Link } from 'react-router-dom';\nimport AceEditor from 'client/components/AceEditor/AceEditor';\nimport { formatTime, safeArray } from '../../../../common.js';\nimport ErrMsg from '../../../../components/ErrMsg/ErrMsg.js';\nimport variable from '../../../../constants/variable';\nimport constants from '../../../../constants/variable.js';\nimport copy from 'copy-to-clipboard';\nimport SchemaTable from '../../../../components/SchemaTable/SchemaTable.js';\n\nconst HTTP_METHOD = constants.HTTP_METHOD;\n\n@connect(state => {\n  return {\n    curData: state.inter.curdata,\n    custom_field: state.group.field,\n    currProject: state.project.currProject\n  };\n})\nclass View extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      init: true,\n      enter: false\n    };\n  }\n  static propTypes = {\n    curData: PropTypes.object,\n    currProject: PropTypes.object,\n    custom_field: PropTypes.object\n  };\n\n  req_body_form(req_body_type, req_body_form) {\n    if (req_body_type === 'form') {\n      const columns = [\n        {\n          title: '参数名称',\n          dataIndex: 'name',\n          key: 'name',\n          width: 140\n        },\n        {\n          title: '参数类型',\n          dataIndex: 'type',\n          key: 'type',\n          width: 100,\n          render: text => {\n            text = text || '';\n            return text.toLowerCase() === 'text' ? (\n              <span>\n                <i className=\"query-icon text\">T</i>文本\n              </span>\n            ) : (\n              <span>\n                <Icon type=\"file\" className=\"query-icon\" />文件\n              </span>\n            );\n          }\n        },\n        {\n          title: '是否必须',\n          dataIndex: 'required',\n          key: 'required',\n          width: 100\n        },\n        {\n          title: '示例',\n          dataIndex: 'example',\n          key: 'example',\n          width: 80,\n          render(_, item) {\n            return <p style={{ whiteSpace: 'pre-wrap' }}>{item.example}</p>;\n          }\n        },\n        {\n          title: '备注',\n          dataIndex: 'value',\n          key: 'value',\n          render(_, item) {\n            return <p style={{ whiteSpace: 'pre-wrap' }}>{item.value}</p>;\n          }\n        }\n      ];\n\n      const dataSource = [];\n      if (req_body_form && req_body_form.length) {\n        req_body_form.map((item, i) => {\n          dataSource.push({\n            key: i,\n            name: item.name,\n            value: item.desc,\n            example: item.example,\n            required: item.required == 0 ? '否' : '是',\n            type: item.type\n          });\n        });\n      }\n\n      return (\n        <div style={{ display: dataSource.length ? '' : 'none' }} className=\"colBody\">\n          <Table\n            bordered\n            size=\"small\"\n            pagination={false}\n            columns={columns}\n            dataSource={dataSource}\n          />\n        </div>\n      );\n    }\n  }\n  res_body(res_body_type, res_body, res_body_is_json_schema) {\n    if (res_body_type === 'json') {\n      if (res_body_is_json_schema) {\n        return <SchemaTable dataSource={res_body} />;\n      } else {\n        return (\n          <div className=\"colBody\">\n            {/* <div id=\"vres_body_json\" style={{ minHeight: h * 16 + 100 }}></div> */}\n            <AceEditor data={res_body} readOnly={true} style={{ minHeight: 600 }} />\n          </div>\n        );\n      }\n    } else if (res_body_type === 'raw') {\n      return (\n        <div className=\"colBody\">\n          <AceEditor data={res_body} readOnly={true} mode=\"text\" style={{ minHeight: 300 }} />\n        </div>\n      );\n    }\n  }\n\n  req_body(req_body_type, req_body_other, req_body_is_json_schema) {\n    if (req_body_other) {\n      if (req_body_is_json_schema && req_body_type === 'json') {\n        return <SchemaTable dataSource={req_body_other} />;\n      } else {\n        return (\n          <div className=\"colBody\">\n            <AceEditor\n              data={req_body_other}\n              readOnly={true}\n              style={{ minHeight: 300 }}\n              mode={req_body_type === 'json' ? 'javascript' : 'text'}\n            />\n          </div>\n        );\n      }\n    }\n  }\n\n  req_query(query) {\n    const columns = [\n      {\n        title: '参数名称',\n        dataIndex: 'name',\n        width: 140,\n        key: 'name'\n      },\n      {\n        title: '是否必须',\n        width: 100,\n        dataIndex: 'required',\n        key: 'required'\n      },\n      {\n        title: '示例',\n        dataIndex: 'example',\n        key: 'example',\n        width: 80,\n        render(_, item) {\n          return <p style={{ whiteSpace: 'pre-wrap' }}>{item.example}</p>;\n        }\n      },\n      {\n        title: '备注',\n        dataIndex: 'value',\n        key: 'value',\n        render(_, item) {\n          return <p style={{ whiteSpace: 'pre-wrap' }}>{item.value}</p>;\n        }\n      }\n    ];\n\n    const dataSource = [];\n    if (query && query.length) {\n      query.map((item, i) => {\n        dataSource.push({\n          key: i,\n          name: item.name,\n          value: item.desc,\n          example: item.example,\n          required: item.required == 0 ? '否' : '是'\n        });\n      });\n    }\n\n    return (\n      <Table bordered size=\"small\" pagination={false} columns={columns} dataSource={dataSource} />\n    );\n  }\n\n  countEnter(str) {\n    let i = 0;\n    let c = 0;\n    if (!str || !str.indexOf) {\n      return 0;\n    }\n    while (str.indexOf('\\n', i) > -1) {\n      i = str.indexOf('\\n', i) + 2;\n      c++;\n    }\n    return c;\n  }\n\n  componentDidMount() {\n    if (!this.props.curData.title && this.state.init) {\n      this.setState({ init: false });\n    }\n  }\n\n  enterItem = () => {\n    this.setState({\n      enter: true\n    });\n  };\n\n  leaveItem = () => {\n    this.setState({\n      enter: false\n    });\n  };\n\n  copyUrl = url => {\n    copy(url);\n    message.success('已经成功复制到剪切板');\n  };\n\n  flagMsg = (mock, strice) => {\n    if (mock && strice) {\n      return <span>( 全局mock & 严格模式 )</span>;\n    } else if (!mock && strice) {\n      return <span>( 严格模式 )</span>;\n    } else if (mock && !strice) {\n      return <span>( 全局mock )</span>;\n    } else {\n      return;\n    }\n  };\n\n  render() {\n    const dataSource = [];\n    if (this.props.curData.req_headers && this.props.curData.req_headers.length) {\n      this.props.curData.req_headers.map((item, i) => {\n        dataSource.push({\n          key: i,\n          name: item.name,\n          required: item.required == 0 ? '否' : '是',\n          value: item.value,\n          example: item.example,\n          desc: item.desc\n        });\n      });\n    }\n\n    const req_dataSource = [];\n    if (this.props.curData.req_params && this.props.curData.req_params.length) {\n      this.props.curData.req_params.map((item, i) => {\n        req_dataSource.push({\n          key: i,\n          name: item.name,\n          desc: item.desc,\n          example: item.example\n        });\n      });\n    }\n    const req_params_columns = [\n      {\n        title: '参数名称',\n        dataIndex: 'name',\n        key: 'name',\n        width: 140\n      },\n      {\n        title: '示例',\n        dataIndex: 'example',\n        key: 'example',\n        width: 80,\n        render(_, item) {\n          return <p style={{ whiteSpace: 'pre-wrap' }}>{item.example}</p>;\n        }\n      },\n      {\n        title: '备注',\n        dataIndex: 'desc',\n        key: 'desc',\n        render(_, item) {\n          return <p style={{ whiteSpace: 'pre-wrap' }}>{item.desc}</p>;\n        }\n      }\n    ];\n\n    const columns = [\n      {\n        title: '参数名称',\n        dataIndex: 'name',\n        key: 'name',\n        width: '200px'\n      },\n      {\n        title: '参数值',\n        dataIndex: 'value',\n        key: 'value',\n        width: '300px'\n      },\n      {\n        title: '是否必须',\n        dataIndex: 'required',\n        key: 'required',\n        width: '100px'\n      },\n      {\n        title: '示例',\n        dataIndex: 'example',\n        key: 'example',\n        width: '80px',\n        render(_, item) {\n          return <p style={{ whiteSpace: 'pre-wrap' }}>{item.example}</p>;\n        }\n      },\n      {\n        title: '备注',\n        dataIndex: 'desc',\n        key: 'desc',\n        render(_, item) {\n          return <p style={{ whiteSpace: 'pre-wrap' }}>{item.desc}</p>;\n        }\n      }\n    ];\n    let status = {\n      undone: '未完成',\n      done: '已完成'\n    };\n\n    let bodyShow =\n      this.props.curData.req_body_other ||\n      (this.props.curData.req_body_type === 'form' &&\n        this.props.curData.req_body_form &&\n        this.props.curData.req_body_form.length);\n\n    let requestShow =\n      (dataSource && dataSource.length) ||\n      (req_dataSource && req_dataSource.length) ||\n      (this.props.curData.req_query && this.props.curData.req_query.length) ||\n      bodyShow;\n\n    let methodColor =\n      variable.METHOD_COLOR[\n        this.props.curData.method ? this.props.curData.method.toLowerCase() : 'get'\n      ];\n\n    // statusColor = statusColor[this.props.curData.status?this.props.curData.status.toLowerCase():\"undone\"];\n    // const aceEditor = <div style={{ display: this.props.curData.req_body_other && (this.props.curData.req_body_type !== \"form\") ? \"block\" : \"none\" }} className=\"colBody\">\n    //   <AceEditor data={this.props.curData.req_body_other} readOnly={true} style={{ minHeight: 300 }} mode={this.props.curData.req_body_type === 'json' ? 'javascript' : 'text'} />\n    // </div>\n    if (!methodColor) {\n      methodColor = 'get';\n    }\n\n    const { tag, up_time, title, uid, username } = this.props.curData;\n\n    let res = (\n      <div className=\"caseContainer\">\n        <h2 className=\"interface-title\" style={{ marginTop: 0 }}>\n          基本信息\n        </h2>\n        <div className=\"panel-view\">\n          <Row className=\"row\">\n            <Col span={4} className=\"colKey\">\n              接口名称：\n            </Col>\n            <Col span={8} className=\"colName\">\n              {title}\n            </Col>\n            <Col span={4} className=\"colKey\">\n              创&ensp;建&ensp;人：\n            </Col>\n            <Col span={8} className=\"colValue\">\n              <Link className=\"user-name\" to={'/user/profile/' + uid}>\n                <img src={'/api/user/avatar?uid=' + uid} className=\"user-img\" />\n                {username}\n              </Link>\n            </Col>\n          </Row>\n          <Row className=\"row\">\n            <Col span={4} className=\"colKey\">\n              状&emsp;&emsp;态：\n            </Col>\n            <Col span={8} className={'tag-status ' + this.props.curData.status}>\n              {status[this.props.curData.status]}\n            </Col>\n            <Col span={4} className=\"colKey\">\n              更新时间：\n            </Col>\n            <Col span={8}>{formatTime(up_time)}</Col>\n          </Row>\n          {safeArray(tag) &&\n            safeArray(tag).length > 0 && (\n              <Row className=\"row remark\">\n                <Col span={4} className=\"colKey\">\n                  Tag ：\n                </Col>\n                <Col span={18} className=\"colValue\">\n                  {tag.join(' , ')}\n                </Col>\n              </Row>\n            )}\n          <Row className=\"row\">\n            <Col span={4} className=\"colKey\">\n              接口路径：\n            </Col>\n            <Col\n              span={18}\n              className=\"colValue\"\n              onMouseEnter={this.enterItem}\n              onMouseLeave={this.leaveItem}\n            >\n              <span\n                style={{ color: methodColor.color, backgroundColor: methodColor.bac }}\n                className=\"colValue tag-method\"\n              >\n                {this.props.curData.method}\n              </span>\n              <span className=\"colValue\">\n                {this.props.currProject.basepath}\n                {this.props.curData.path}\n              </span>\n              <Tooltip title=\"复制路径\">\n                <Icon\n                  type=\"copy\"\n                  className=\"interface-url-icon\"\n                  onClick={() => this.copyUrl(this.props.currProject.basepath + this.props.curData.path)}\n                  style={{ display: this.state.enter ? 'inline-block' : 'none' }}\n                />\n              </Tooltip>\n            </Col>\n          </Row>\n          <Row className=\"row\">\n            <Col span={4} className=\"colKey\">\n              Mock地址：\n            </Col>\n            <Col span={18} className=\"colValue\">\n              {this.flagMsg(this.props.currProject.is_mock_open, this.props.currProject.strice)}\n              <span\n                className=\"href\"\n                onClick={() =>\n                  window.open(\n                    location.protocol +\n                      '//' +\n                      location.hostname +\n                      (location.port !== '' ? ':' + location.port : '') +\n                      `/mock/${this.props.currProject._id}${this.props.currProject.basepath}${\n                        this.props.curData.path\n                      }`,\n                    '_blank'\n                  )\n                }\n              >\n                {location.protocol +\n                  '//' +\n                  location.hostname +\n                  (location.port !== '' ? ':' + location.port : '') +\n                  `/mock/${this.props.currProject._id}${this.props.currProject.basepath}${\n                    this.props.curData.path\n                  }`}\n              </span>\n            </Col>\n          </Row>\n          {this.props.curData.custom_field_value &&\n            this.props.custom_field.enable && (\n              <Row className=\"row remark\">\n                <Col span={4} className=\"colKey\">\n                  {this.props.custom_field.name}：\n                </Col>\n                <Col span={18} className=\"colValue\">\n                  {this.props.curData.custom_field_value}\n                </Col>\n              </Row>\n            )}\n        </div>\n        {this.props.curData.desc && <h2 className=\"interface-title\">备注</h2>}\n        {this.props.curData.desc && (\n          <div\n            className=\"tui-editor-contents\"\n            style={{ margin: '0px', padding: '0px 20px', float: 'none' }}\n            dangerouslySetInnerHTML={{ __html: this.props.curData.desc }}\n          />\n        )}\n        <h2 className=\"interface-title\" style={{ display: requestShow ? '' : 'none' }}>\n          请求参数\n        </h2>\n        {req_dataSource.length ? (\n          <div className=\"colHeader\">\n            <h3 className=\"col-title\">路径参数：</h3>\n            <Table\n              bordered\n              size=\"small\"\n              pagination={false}\n              columns={req_params_columns}\n              dataSource={req_dataSource}\n            />\n          </div>\n        ) : (\n          ''\n        )}\n        {dataSource.length ? (\n          <div className=\"colHeader\">\n            <h3 className=\"col-title\">Headers：</h3>\n            <Table\n              bordered\n              size=\"small\"\n              pagination={false}\n              columns={columns}\n              dataSource={dataSource}\n            />\n          </div>\n        ) : (\n          ''\n        )}\n        {this.props.curData.req_query && this.props.curData.req_query.length ? (\n          <div className=\"colQuery\">\n            <h3 className=\"col-title\">Query：</h3>\n            {this.req_query(this.props.curData.req_query)}\n          </div>\n        ) : (\n          ''\n        )}\n\n        <div\n          style={{\n            display:\n              this.props.curData.method &&\n              HTTP_METHOD[this.props.curData.method.toUpperCase()].request_body\n                ? ''\n                : 'none'\n          }}\n        >\n          <h3 style={{ display: bodyShow ? '' : 'none' }} className=\"col-title\">\n            Body:\n          </h3>\n          {this.props.curData.req_body_type === 'form'\n            ? this.req_body_form(this.props.curData.req_body_type, this.props.curData.req_body_form)\n            : this.req_body(\n                this.props.curData.req_body_type,\n                this.props.curData.req_body_other,\n                this.props.curData.req_body_is_json_schema\n              )}\n        </div>\n\n        <h2 className=\"interface-title\">返回数据</h2>\n        {this.res_body(\n          this.props.curData.res_body_type,\n          this.props.curData.res_body,\n          this.props.curData.res_body_is_json_schema\n        )}\n      </div>\n    );\n\n    if (!this.props.curData.title) {\n      if (this.state.init) {\n        res = <div />;\n      } else {\n        res = <ErrMsg type=\"noData\" />;\n      }\n    }\n    return res;\n  }\n}\n\nexport default View;\n"]}