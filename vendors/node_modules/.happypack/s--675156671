'use strict';

exports.__esModule = true;
exports.default = undefined;

var _table = require('antd/lib/table');

var _table2 = _interopRequireDefault(_table);

var _tooltip = require('antd/lib/tooltip');

var _tooltip2 = _interopRequireDefault(_tooltip);

var _icon = require('antd/lib/icon');

var _icon2 = _interopRequireDefault(_icon);

var _popconfirm = require('antd/lib/popconfirm');

var _popconfirm2 = _interopRequireDefault(_popconfirm);

var _button = require('antd/lib/button');

var _button2 = _interopRequireDefault(_button);

var _keys = require('babel-runtime/core-js/object/keys');

var _keys2 = _interopRequireDefault(_keys);

var _message2 = require('antd/lib/message');

var _message3 = _interopRequireDefault(_message2);

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _assign = require('babel-runtime/core-js/object/assign');

var _assign2 = _interopRequireDefault(_assign);

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _stringify = require('babel-runtime/core-js/json/stringify');

var _stringify2 = _interopRequireDefault(_stringify);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _dec, _class, _class2, _temp;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactRedux = require('react-redux');

var _axios = require('axios');

var _axios2 = _interopRequireDefault(_axios);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reactRouterDom = require('react-router-dom');

var _mockCol = require('../../../client/reducer/modules/mockCol');

var _common = require('../../../client/common.js');

var _variable = require('../../../client/constants/variable.js');

var _variable2 = _interopRequireDefault(_variable);

var _CaseDesModal = require('./CaseDesModal');

var _CaseDesModal2 = _interopRequireDefault(_CaseDesModal);

var _common2 = require('../../../client/common');

var _underscore = require('underscore');

var _underscore2 = _interopRequireDefault(_underscore);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var MockCol = (_dec = (0, _reactRedux.connect)(function (state) {
  return {
    list: state.mockCol.list,
    currInterface: state.inter.curdata,
    currProject: state.project.currProject
  };
}, {
  fetchMockCol: _mockCol.fetchMockCol
}), _dec(_class = (0, _reactRouterDom.withRouter)(_class = (_temp = _class2 = function (_Component) {
  (0, _inherits3.default)(MockCol, _Component);

  function MockCol(props) {
    var _this2 = this;

    (0, _classCallCheck3.default)(this, MockCol);

    var _this = (0, _possibleConstructorReturn3.default)(this, _Component.call(this, props));

    _this.state = {
      caseData: {},
      caseDesModalVisible: false,
      isAdd: false
    };

    _this.openModal = function (record, isAdd) {
      return (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee() {
        var result, _result;

        return _regenerator2.default.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                if (!(_this.props.currInterface.res_body_is_json_schema && isAdd)) {
                  _context.next = 5;
                  break;
                }

                _context.next = 3;
                return _axios2.default.post('/api/interface/schema2json', {
                  schema: (0, _common2.json5_parse)(_this.props.currInterface.res_body),
                  required: true
                });

              case 3:
                result = _context.sent;

                record.res_body = (0, _stringify2.default)(result.data);

              case 5:
                if (!_this.props.currInterface.req_body_is_json_schema) {
                  _context.next = 10;
                  break;
                }

                _context.next = 8;
                return _axios2.default.post('/api/interface/schema2json', {
                  schema: (0, _common2.json5_parse)(_this.props.currInterface.req_body_other),
                  required: true
                });

              case 8:
                _result = _context.sent;

                record.req_body_other = (0, _stringify2.default)(_result.data);

              case 10:

                _this.setState({
                  isAdd: isAdd,
                  caseDesModalVisible: true,
                  caseData: record
                });

              case 11:
              case 'end':
                return _context.stop();
            }
          }
        }, _callee, _this2);
      }));
    };

    _this.handleOk = function () {
      var _ref2 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee3(caseData) {
        var currcase, interface_id, project_id;
        return _regenerator2.default.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                if (caseData) {
                  _context3.next = 2;
                  break;
                }

                return _context3.abrupt('return', null);

              case 2:
                currcase = _this.state.caseData;
                interface_id = _this.props.match.params.actionId;
                project_id = _this.props.match.params.id;

                caseData = (0, _assign2.default)((0, _extends3.default)({}, caseData, {
                  interface_id: interface_id,
                  project_id: project_id
                }));
                if (!_this.state.isAdd) {
                  caseData.id = currcase._id;
                }
                _context3.next = 9;
                return _axios2.default.post('/api/plugin/advmock/case/save', caseData).then(function () {
                  var _ref3 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee2(res) {
                    return _regenerator2.default.wrap(function _callee2$(_context2) {
                      while (1) {
                        switch (_context2.prev = _context2.next) {
                          case 0:
                            if (!(res.data.errcode === 0)) {
                              _context2.next = 7;
                              break;
                            }

                            _message3.default.success(_this.state.isAdd ? '添加成功' : '保存成功');
                            _context2.next = 4;
                            return _this.props.fetchMockCol(interface_id);

                          case 4:
                            _this.setState({ caseDesModalVisible: false });
                            _context2.next = 8;
                            break;

                          case 7:
                            _message3.default.error(res.data.errmsg);

                          case 8:
                          case 'end':
                            return _context2.stop();
                        }
                      }
                    }, _callee2, _this2);
                  }));

                  return function (_x2) {
                    return _ref3.apply(this, arguments);
                  };
                }());

              case 9:
              case 'end':
                return _context3.stop();
            }
          }
        }, _callee3, _this2);
      }));

      return function (_x) {
        return _ref2.apply(this, arguments);
      };
    }();

    _this.deleteCase = function () {
      var _ref4 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee5(id) {
        var interface_id;
        return _regenerator2.default.wrap(function _callee5$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
                interface_id = _this.props.match.params.actionId;
                _context5.next = 3;
                return _axios2.default.post('/api/plugin/advmock/case/del', { id: id }).then(function () {
                  var _ref5 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee4(res) {
                    return _regenerator2.default.wrap(function _callee4$(_context4) {
                      while (1) {
                        switch (_context4.prev = _context4.next) {
                          case 0:
                            if (!(res.data.errcode === 0)) {
                              _context4.next = 6;
                              break;
                            }

                            _message3.default.success('删除成功');
                            _context4.next = 4;
                            return _this.props.fetchMockCol(interface_id);

                          case 4:
                            _context4.next = 7;
                            break;

                          case 6:
                            _message3.default.error(res.data.errmsg);

                          case 7:
                          case 'end':
                            return _context4.stop();
                        }
                      }
                    }, _callee4, _this2);
                  }));

                  return function (_x4) {
                    return _ref5.apply(this, arguments);
                  };
                }());

              case 3:
              case 'end':
                return _context5.stop();
            }
          }
        }, _callee5, _this2);
      }));

      return function (_x3) {
        return _ref4.apply(this, arguments);
      };
    }();

    _this.openMockCase = function () {
      var _ref6 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee7(id) {
        var enable = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
        var interface_id;
        return _regenerator2.default.wrap(function _callee7$(_context7) {
          while (1) {
            switch (_context7.prev = _context7.next) {
              case 0:
                interface_id = _this.props.match.params.actionId;
                _context7.next = 3;
                return _axios2.default.post('/api/plugin/advmock/case/hide', {
                  id: id,
                  enable: !enable
                }).then(function () {
                  var _ref7 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee6(res) {
                    return _regenerator2.default.wrap(function _callee6$(_context6) {
                      while (1) {
                        switch (_context6.prev = _context6.next) {
                          case 0:
                            if (!(res.data.errcode === 0)) {
                              _context6.next = 6;
                              break;
                            }

                            _message3.default.success('修改成功');
                            _context6.next = 4;
                            return _this.props.fetchMockCol(interface_id);

                          case 4:
                            _context6.next = 7;
                            break;

                          case 6:
                            _message3.default.error(res.data.errmsg);

                          case 7:
                          case 'end':
                            return _context6.stop();
                        }
                      }
                    }, _callee6, _this2);
                  }));

                  return function (_x7) {
                    return _ref7.apply(this, arguments);
                  };
                }());

              case 3:
              case 'end':
                return _context7.stop();
            }
          }
        }, _callee7, _this2);
      }));

      return function (_x5) {
        return _ref6.apply(this, arguments);
      };
    }();

    return _this;
  }

  MockCol.prototype.componentWillMount = function componentWillMount() {
    var interfaceId = this.props.match.params.actionId;
    this.props.fetchMockCol(interfaceId);
  };

  // mock case 可以设置开启的关闭


  MockCol.prototype.render = function render() {
    var _this3 = this;

    var _props = this.props,
        data = _props.list,
        currInterface = _props.currInterface;
    var _state = this.state,
        isAdd = _state.isAdd,
        caseData = _state.caseData,
        caseDesModalVisible = _state.caseDesModalVisible;


    var role = this.props.currProject.role;
    var isGuest = role === 'guest';
    var initCaseData = {
      ip: '',
      ip_enable: false,
      name: currInterface.title,
      code: '200',
      delay: 0,
      headers: [{ name: '', value: '' }],
      params: {},
      res_body: currInterface.res_body
    };

    var ipFilters = [];
    var ipObj = {};
    var userFilters = [];
    var userObj = {};
    _underscore2.default.isArray(data) && data.forEach(function (item) {
      ipObj[item.ip_enable ? item.ip : ''] = '';
      userObj[item.username] = '';
    });
    ipFilters = (0, _keys2.default)((0, _assign2.default)(ipObj)).map(function (value) {
      if (!value) {
        value = '无过滤';
      }
      return { text: value, value: value };
    });
    userFilters = (0, _keys2.default)((0, _assign2.default)(userObj)).map(function (value) {
      return { text: value, value: value };
    });
    var columns = [{
      title: '期望名称',
      dataIndex: 'name',
      key: 'name'
    }, {
      title: 'ip',
      dataIndex: 'ip',
      key: 'ip',
      render: function render(text, recode) {
        if (!recode.ip_enable) {
          text = '';
        }
        return text;
      },
      onFilter: function onFilter(value, record) {
        return record.ip === value && record.ip_enable || value === '无过滤' && !record.ip_enable;
      },
      filters: ipFilters
    }, {
      title: '创建人',
      dataIndex: 'username',
      key: 'username',
      onFilter: function onFilter(value, record) {
        return record.username === value;
      },
      filters: userFilters
    }, {
      title: '编辑时间',
      dataIndex: 'up_time',
      key: 'up_time',
      render: function render(text) {
        return (0, _common.formatTime)(text);
      }
    }, {
      title: '操作',
      dataIndex: '_id',
      key: '_id',
      render: function render(_id, recode) {
        // console.log(recode)
        return !isGuest && _react2.default.createElement(
          'div',
          null,
          _react2.default.createElement(
            'span',
            { style: { marginRight: 5 } },
            _react2.default.createElement(
              _button2.default,
              { size: 'small', onClick: _this3.openModal(recode) },
              '\u7F16\u8F91'
            )
          ),
          _react2.default.createElement(
            'span',
            { style: { marginRight: 5 } },
            _react2.default.createElement(
              _popconfirm2.default,
              {
                title: '\u4F60\u786E\u5B9A\u8981\u5220\u9664\u8FD9\u6761\u671F\u671B?',
                onConfirm: function onConfirm() {
                  return _this3.deleteCase(_id);
                },
                okText: '\u786E\u5B9A',
                cancelText: '\u53D6\u6D88'
              },
              _react2.default.createElement(
                _button2.default,
                { size: 'small', onClick: function onClick() {} },
                '\u5220\u9664'
              )
            )
          ),
          _react2.default.createElement(
            'span',
            null,
            _react2.default.createElement(
              _button2.default,
              { size: 'small', onClick: function onClick() {
                  return _this3.openMockCase(_id, recode.case_enable);
                } },
              recode.case_enable ? _react2.default.createElement(
                'span',
                null,
                '\u5DF2\u5F00\u542F'
              ) : _react2.default.createElement(
                'span',
                null,
                '\u672A\u5F00\u542F'
              )
            )
          )
        );
      }
    }];

    return _react2.default.createElement(
      'div',
      null,
      _react2.default.createElement(
        'div',
        { style: { marginBottom: 8 } },
        _react2.default.createElement(
          _button2.default,
          { type: 'primary', onClick: this.openModal(initCaseData, true), disabled: isGuest },
          '\u6DFB\u52A0\u671F\u671B'
        ),
        _react2.default.createElement(
          'a',
          {
            target: '_blank',
            rel: 'noopener noreferrer',
            href: _variable2.default.docHref.adv_mock_case,
            style: { marginLeft: 8 }
          },
          _react2.default.createElement(
            _tooltip2.default,
            { title: '\u70B9\u51FB\u67E5\u770B\u6587\u6863' },
            _react2.default.createElement(_icon2.default, { type: 'question-circle-o' })
          )
        )
      ),
      _react2.default.createElement(_table2.default, { columns: columns, dataSource: data, pagination: false, rowKey: '_id' }),
      caseDesModalVisible && _react2.default.createElement(_CaseDesModal2.default, {
        visible: caseDesModalVisible,
        isAdd: isAdd,
        caseData: caseData,
        onOk: this.handleOk,
        onCancel: function onCancel() {
          return _this3.setState({ caseDesModalVisible: false });
        },
        ref: this.saveFormRef
      })
    );
  };

  return MockCol;
}(_react.Component), _class2.propTypes = {
  list: _propTypes2.default.array,
  currInterface: _propTypes2.default.object,
  match: _propTypes2.default.object,
  fetchMockCol: _propTypes2.default.func,
  currProject: _propTypes2.default.object
}, _temp)) || _class) || _class);
exports.default = MockCol;