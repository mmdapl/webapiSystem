{"version":3,"sources":["client\\containers\\Project\\Setting\\ProjectToken\\ProjectToken.js"],"names":["confirm","ProjectToken","token","state","project","getToken","updateToken","copyToken","props","success","that","title","content","okText","cancelText","onOk","projectId","onCancel","componentDidMount","render","curProjectRole","Component","propTypes","PropTypes","number","func","string"],"mappings":"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","file":"ProjectToken.js","sourceRoot":"C:/Users/DUOYI/Desktop/api/test/vendors","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './ProjectToken.scss';\nimport { getToken, updateToken } from '../../../../reducer/modules/project';\nimport { connect } from 'react-redux';\nimport { Icon, Tooltip, message, Modal } from 'antd';\nimport copy from 'copy-to-clipboard';\nconst confirm = Modal.confirm;\n\n@connect(\n  state => {\n    return {\n      token: state.project.token\n    };\n  },\n  {\n    getToken,\n    updateToken\n  }\n)\nclass ProjectToken extends Component {\n  static propTypes = {\n    projectId: PropTypes.number,\n    getToken: PropTypes.func,\n    token: PropTypes.string,\n    updateToken: PropTypes.func,\n    curProjectRole: PropTypes.string\n  };\n\n  async componentDidMount() {\n    await this.props.getToken(this.props.projectId);\n  }\n\n  copyToken = () => {\n    copy(this.props.token);\n    message.success('已经成功复制到剪切板');\n  };\n\n  updateToken = () => {\n    let that = this;\n    confirm({\n      title: '重新生成key',\n      content: '重新生成之后，之前的key将无法使用，确认重新生成吗？',\n      okText: '确认',\n      cancelText: '取消',\n      async onOk() {\n        await that.props.updateToken(that.props.projectId);\n        message.success('更新成功');\n      },\n      onCancel() {}\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"project-token\">\n        <h2 className=\"token-title\">工具标识</h2>\n        <div className=\"message\">\n          每个项目都有唯一的标识token，用户可以使用这个token值来请求项目 openapi.\n        </div>\n        <div className=\"token\">\n          <span>\n            token: <span className=\"token-message\">{this.props.token}</span>\n          </span>\n          <Tooltip title=\"复制\">\n            <Icon className=\"token-btn\" type=\"copy\" onClick={this.copyToken} />\n          </Tooltip>\n          {this.props.curProjectRole === 'admin' || this.props.curProjectRole === 'owner' ? (\n            <Tooltip title=\"刷新\">\n              <Icon className=\"token-btn\" type=\"reload\" onClick={this.updateToken} />\n            </Tooltip>\n          ) : null}\n        </div>\n        <div className=\"blockquote\">\n          为确保项目内数据的安全性和私密性，请勿轻易将该token暴露给项目组外用户。\n        </div>\n        <br />\n        <h2  className=\"token-title\">open接口：</h2>\n        <p><a target=\"_blank\" rel=\"noopener noreferrer\"   href=\"https://hellosean1025.github.io/yapi/openapi.html\">详细接口文档</a></p>\n        <div>\n          <ul className=\"open-api\">\n            <li>/api/open/run_auto_test [运行自动化测试]</li>\n            <li>/api/open/import_data [导入数据]</li>\n            <li>/api/interface/add [新增接口]</li>\n            <li>/api/interface/save [保存接口]</li>\n            <li>/api/interface/up [更新接口]</li>\n            <li>/api/interface/get [获取接口]</li>\n            <li>/api/interface/list [获取接口列表]</li>\n            <li>/api/interface/list_menu [获取接口菜单]</li>\n            <li>/api/interface/add_cat [新增接口分类]</li>\n            <li>/api/interface/getCatMenu [获取所有分类]</li>\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ProjectToken;\n"]}