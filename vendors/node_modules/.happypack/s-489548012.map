{"version":3,"sources":["client\\containers\\Group\\GroupList\\GroupList.js"],"names":["TextArea","Search","tip","GroupList","groupList","state","group","currGroup","curUserRole","user","role","curUserRoleInGroup","studyTip","study","fetchGroupList","setCurrGroup","setGroupList","fetchNewsData","fetchGroupMsg","withRouter","props","addGroupModalVisible","newGroupName","newGroupDesc","currGroupName","currGroupDesc","owner_uids","componentWillMount","groupId","isNaN","match","params","parseInt","length","i","_id","history","push","group_name","group_desc","replace","setState","showModal","hideModal","addGroup","axios","post","res","data","errcode","error","errmsg","editGroup","id","_","find","inputNewGroupName","e","target","value","inputNewGroupDesc","selectGroup","key","onUserSelect","uids","searchGroup","v","filter","RegExp","test","componentWillReceiveProps","nextProps","render","marginTop","display","justifyContent","map","type","zIndex","Component","propTypes","PropTypes","array","object","func","string","number","bool","autobind"],"mappings":"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","file":"GroupList.js","sourceRoot":"C:/Users/DUOYI/Desktop/api/test/vendors","sourcesContent":["import React, { PureComponent as Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Icon, Modal, Input, message,Spin,  Row, Menu, Col, Popover, Tooltip } from 'antd';\nimport { autobind } from 'core-decorators';\nimport axios from 'axios';\nimport { withRouter } from 'react-router-dom';\nconst { TextArea } = Input;\nconst Search = Input.Search;\nimport UsernameAutoComplete from '../../../components/UsernameAutoComplete/UsernameAutoComplete.js';\nimport GuideBtns from '../../../components/GuideBtns/GuideBtns.js';\nimport { fetchNewsData } from '../../../reducer/modules/news.js';\nimport {\n  fetchGroupList,\n  setCurrGroup,\n  setGroupList,\n  fetchGroupMsg\n} from '../../../reducer/modules/group.js';\nimport _ from 'underscore';\n\nimport './GroupList.scss';\n\nconst tip = (\n  <div className=\"title-container\">\n    <h3 className=\"title\">欢迎使用 YApi ~</h3>\n    <p>\n      这里的 <b>“个人空间”</b>{' '}\n      是你自己才能看到的分组，你拥有这个分组的全部权限，可以在这个分组里探索 YApi 的功能。\n    </p>\n  </div>\n);\n\n@connect(\n  state => ({\n    groupList: state.group.groupList,\n    currGroup: state.group.currGroup,\n    curUserRole: state.user.role,\n    curUserRoleInGroup: state.group.currGroup.role || state.group.role,\n    studyTip: state.user.studyTip,\n    study: state.user.study\n  }),\n  {\n    fetchGroupList,\n    setCurrGroup,\n    setGroupList,\n    fetchNewsData,\n    fetchGroupMsg\n  }\n)\n@withRouter\nexport default class GroupList extends Component {\n  static propTypes = {\n    groupList: PropTypes.array,\n    currGroup: PropTypes.object,\n    fetchGroupList: PropTypes.func,\n    setCurrGroup: PropTypes.func,\n    setGroupList: PropTypes.func,\n    match: PropTypes.object,\n    history: PropTypes.object,\n    curUserRole: PropTypes.string,\n    curUserRoleInGroup: PropTypes.string,\n    studyTip: PropTypes.number,\n    study: PropTypes.bool,\n    fetchNewsData: PropTypes.func,\n    fetchGroupMsg: PropTypes.func\n  };\n\n  state = {\n    addGroupModalVisible: false,\n    newGroupName: '',\n    newGroupDesc: '',\n    currGroupName: '',\n    currGroupDesc: '',\n    groupList: [],\n    owner_uids: []\n  };\n\n  constructor(props) {\n    super(props);\n  }\n\n  async componentWillMount() {\n    const groupId = !isNaN(this.props.match.params.groupId)\n      ? parseInt(this.props.match.params.groupId)\n      : 0;\n    await this.props.fetchGroupList();\n    let currGroup = false;\n    if (this.props.groupList.length && groupId) {\n      for (let i = 0; i < this.props.groupList.length; i++) {\n        if (this.props.groupList[i]._id === groupId) {\n          currGroup = this.props.groupList[i];\n        }\n      }\n    } else if (!groupId && this.props.groupList.length) {\n      this.props.history.push(`/group/${this.props.groupList[0]._id}`);\n    }\n    if (!currGroup) {\n      currGroup = this.props.groupList[0] || { group_name: '', group_desc: '' };\n      this.props.history.replace(`${currGroup._id}`);\n    }\n    this.setState({ groupList: this.props.groupList });\n    this.props.setCurrGroup(currGroup);\n  }\n\n  @autobind\n  showModal() {\n    this.setState({\n      addGroupModalVisible: true\n    });\n  }\n  @autobind\n  hideModal() {\n    this.setState({\n      newGroupName: '',\n      group_name: '',\n      owner_uids: [],\n      addGroupModalVisible: false\n    });\n  }\n  @autobind\n  async addGroup() {\n    const { newGroupName: group_name, newGroupDesc: group_desc, owner_uids } = this.state;\n    const res = await axios.post('/api/group/add', { group_name, group_desc, owner_uids });\n    if (!res.data.errcode) {\n      this.setState({\n        newGroupName: '',\n        group_name: '',\n        owner_uids: [],\n        addGroupModalVisible: false\n      });\n      await this.props.fetchGroupList();\n      this.setState({ groupList: this.props.groupList });\n      this.props.fetchGroupMsg(this.props.currGroup._id);\n      this.props.fetchNewsData(this.props.currGroup._id, 'group', 1, 10);\n    } else {\n      message.error(res.data.errmsg);\n    }\n  }\n  @autobind\n  async editGroup() {\n    const { currGroupName: group_name, currGroupDesc: group_desc } = this.state;\n    const id = this.props.currGroup._id;\n    const res = await axios.post('/api/group/up', { group_name, group_desc, id });\n    if (res.data.errcode) {\n      message.error(res.data.errmsg);\n    } else {\n      await this.props.fetchGroupList();\n\n      this.setState({ groupList: this.props.groupList });\n      const currGroup = _.find(this.props.groupList, group => {\n        return +group._id === +id;\n      });\n\n      this.props.setCurrGroup(currGroup);\n      // this.props.setCurrGroup({ group_name, group_desc, _id: id });\n      this.props.fetchGroupMsg(this.props.currGroup._id);\n      this.props.fetchNewsData(this.props.currGroup._id, 'group', 1, 10);\n    }\n  }\n  @autobind\n  inputNewGroupName(e) {\n    this.setState({ newGroupName: e.target.value });\n  }\n  @autobind\n  inputNewGroupDesc(e) {\n    this.setState({ newGroupDesc: e.target.value });\n  }\n\n  @autobind\n  selectGroup(e) {\n    const groupId = e.key;\n    //const currGroup = this.props.groupList.find((group) => { return +group._id === +groupId });\n    const currGroup = _.find(this.props.groupList, group => {\n      return +group._id === +groupId;\n    });\n    this.props.setCurrGroup(currGroup);\n    this.props.history.replace(`${currGroup._id}`);\n    this.props.fetchNewsData(groupId, 'group', 1, 10);\n  }\n\n  @autobind\n  onUserSelect(uids) {\n    this.setState({\n      owner_uids: uids\n    });\n  }\n\n  @autobind\n  searchGroup(e, value) {\n    const v = value || e.target.value;\n    const { groupList } = this.props;\n    if (v === '') {\n      this.setState({ groupList });\n    } else {\n      this.setState({\n        groupList: groupList.filter(group => new RegExp(v, 'i').test(group.group_name))\n      });\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    // GroupSetting 组件设置的分组信息，通过redux同步到左侧分组菜单中\n    if (this.props.groupList !== nextProps.groupList) {\n      this.setState({\n        groupList: nextProps.groupList\n      });\n    }\n  }\n\n  render() {\n    const { currGroup } = this.props;\n    return (\n      <div className=\"m-group\">\n        {!this.props.study ? <div className=\"study-mask\" /> : null}\n        <div className=\"group-bar\">\n          <div className=\"curr-group\">\n            <div className=\"curr-group-name\">\n              <span className=\"name\">{currGroup.group_name}</span>\n              <Tooltip title=\"添加分组\">\n                <a className=\"editSet\">\n                  <Icon className=\"btn\" type=\"folder-add\" onClick={this.showModal} />\n                </a>\n              </Tooltip>\n            \n            </div>\n            <div className=\"curr-group-desc\">简介: {currGroup.group_desc}</div>\n          </div>\n\n          <div className=\"group-operate\">\n            <div className=\"search\">\n              <Search\n                placeholder=\"搜索分类\"\n                onChange={this.searchGroup}\n                onSearch={v => this.searchGroup(null, v)}\n              />\n            </div>\n          </div>\n          {this.state.groupList.length === 0 && <Spin style={{\n            marginTop: 20,\n            display: 'flex',\n            justifyContent: 'center'\n          }} />}\n          <Menu\n            className=\"group-list\"\n            mode=\"inline\"\n            onClick={this.selectGroup}\n            selectedKeys={[`${currGroup._id}`]}\n          >\n            {this.state.groupList.map(group => {\n              if (group.type === 'private') {\n                return (\n                  <Menu.Item\n                    key={`${group._id}`}\n                    className=\"group-item\"\n                    style={{ zIndex: this.props.studyTip === 0 ? 3 : 1 }}\n                  >\n                    <Icon type=\"user\" />\n                    <Popover\n                      overlayClassName=\"popover-index\"\n                      content={<GuideBtns />}\n                      title={tip}\n                      placement=\"right\"\n                      visible={this.props.studyTip === 0 && !this.props.study}\n                    >\n                      {group.group_name}\n                    </Popover>\n                  </Menu.Item>\n                );\n              } else {\n                return (\n                  <Menu.Item key={`${group._id}`} className=\"group-item\">\n                    <Icon type=\"folder-open\" />\n                    {group.group_name}\n                  </Menu.Item>\n                );\n              }\n            })}\n          </Menu>\n        </div>\n        {this.state.addGroupModalVisible ? (\n          <Modal\n            title=\"添加分组\"\n            visible={this.state.addGroupModalVisible}\n            onOk={this.addGroup}\n            onCancel={this.hideModal}\n            className=\"add-group-modal\"\n          >\n            <Row gutter={6} className=\"modal-input\">\n              <Col span=\"5\">\n                <div className=\"label\">分组名：</div>\n              </Col>\n              <Col span=\"15\">\n                <Input placeholder=\"请输入分组名称\" onChange={this.inputNewGroupName} />\n              </Col>\n            </Row>\n            <Row gutter={6} className=\"modal-input\">\n              <Col span=\"5\">\n                <div className=\"label\">简介：</div>\n              </Col>\n              <Col span=\"15\">\n                <TextArea rows={3} placeholder=\"请输入分组描述\" onChange={this.inputNewGroupDesc} />\n              </Col>\n            </Row>\n            <Row gutter={6} className=\"modal-input\">\n              <Col span=\"5\">\n                <div className=\"label\">组长：</div>\n              </Col>\n              <Col span=\"15\">\n                <UsernameAutoComplete callbackState={this.onUserSelect} />\n              </Col>\n            </Row>\n          </Modal>\n        ) : (\n          ''\n        )}\n      </div>\n    );\n  }\n}\n"]}