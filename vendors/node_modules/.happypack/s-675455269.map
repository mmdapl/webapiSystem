{"version":3,"sources":["client\\containers\\Project\\Interface\\InterfaceList\\InterfaceList.js"],"names":["Option","limit","InterfaceList","curData","state","inter","curdata","curProject","project","currProject","catList","list","totalTableList","catTableList","totalCount","count","fetchInterfaceListMenu","fetchInterfaceList","fetchInterfaceCatList","getProject","props","visible","data","filteredInfo","catid","total","current","componentWillMount","actionId","match","params","handleRequest","componentWillReceiveProps","nextProps","_actionId","setState","render","tag","tagFilter","map","text","item","name","value","columns","title","dataIndex","key","width","project_id","_id","record","path","basepath","methodColor","variable","METHOD_COLOR","method","toLowerCase","color","backgroundColor","bac","api_opened","changeInterfaceCat","cat","id","changeInterfaceStatus","filters","onFilter","status","indexOf","textMsg","length","join","intername","desc","i","isNaN","pageConfig","pageSize","isDisabled","padding","display","margin","float","marginTop","handleChangeInterfaceCat","handleChange","handleAddInterface","Component","propTypes","PropTypes","object","array","history","func","number","projectId","option","page","substr","axios","post","then","res","errcode","error","errmsg","success","pagination","sorter","sortedInfo","interfaceId","push","result","split"],"mappings":"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","file":"InterfaceList.js","sourceRoot":"C:/Users/DUOYI/Desktop/api/test/vendors","sourcesContent":["import React, { PureComponent as Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport { Table, Button, Modal, message, Tooltip, Select, Icon } from 'antd';\nimport AddInterfaceForm from './AddInterfaceForm';\nimport {\n  fetchInterfaceListMenu,\n  fetchInterfaceList,\n  fetchInterfaceCatList\n} from '../../../../reducer/modules/interface.js';\nimport { getProject } from '../../../../reducer/modules/project.js';\nimport { Link } from 'react-router-dom';\nimport variable from '../../../../constants/variable';\nimport './Edit.scss';\nimport Label from '../../../../components/Label/Label.js';\n\nconst Option = Select.Option;\nconst limit = 20;\n\n@connect(\n  state => {\n    return {\n      curData: state.inter.curdata,\n      curProject: state.project.currProject,\n      catList: state.inter.list,\n      totalTableList: state.inter.totalTableList,\n      catTableList: state.inter.catTableList,\n      totalCount: state.inter.totalCount,\n      count: state.inter.count\n    };\n  },\n  {\n    fetchInterfaceListMenu,\n    fetchInterfaceList,\n    fetchInterfaceCatList,\n    getProject\n  }\n)\nclass InterfaceList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      visible: false,\n      data: [],\n      filteredInfo: {},\n      catid: null,\n      total: null,\n      current: 1\n    };\n  }\n\n  static propTypes = {\n    curData: PropTypes.object,\n    catList: PropTypes.array,\n    match: PropTypes.object,\n    curProject: PropTypes.object,\n    history: PropTypes.object,\n    fetchInterfaceListMenu: PropTypes.func,\n    fetchInterfaceList: PropTypes.func,\n    fetchInterfaceCatList: PropTypes.func,\n    totalTableList: PropTypes.array,\n    catTableList: PropTypes.array,\n    totalCount: PropTypes.number,\n    count: PropTypes.number,\n    getProject: PropTypes.func\n  };\n\n  handleRequest = async props => {\n    const { params } = props.match;\n    if (!params.actionId) {\n      let projectId = params.id;\n      this.setState({\n        catid: null\n      });\n      let option = {\n        page: this.state.current,\n        limit,\n        project_id: projectId,\n        status: this.state.filteredInfo.status,\n        tag: this.state.filteredInfo.tag\n      };\n      await this.props.fetchInterfaceList(option);\n    } else if (isNaN(params.actionId)) {\n      let catid = params.actionId.substr(4);\n      this.setState({catid: +catid});\n      let option = {\n        page: this.state.current,\n        limit,\n        catid,\n        status: this.state.filteredInfo.status,\n        tag: this.state.filteredInfo.tag\n      };\n      await this.props.fetchInterfaceCatList(option);\n    }\n  };\n\n  // 更新分类简介\n  handleChangeInterfaceCat = (desc, name) => {\n    let params = {\n      catid: this.state.catid,\n      name: name,\n      desc: desc\n    };\n\n    axios.post('/api/interface/up_cat', params).then(async res => {\n      if (res.data.errcode !== 0) {\n        return message.error(res.data.errmsg);\n      }\n      let project_id = this.props.match.params.id;\n      await this.props.getProject(project_id);\n      await this.props.fetchInterfaceListMenu(project_id);\n      message.success('接口集合简介更新成功');\n    });\n  };\n\n  handleChange = (pagination, filters, sorter) => {\n    this.setState({\n      current: pagination.current || 1,\n      sortedInfo: sorter,\n      filteredInfo: filters\n    }, () => this.handleRequest(this.props));\n  };\n\n  componentWillMount() {\n    this.actionId = this.props.match.params.actionId;\n    this.handleRequest(this.props);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    let _actionId = nextProps.match.params.actionId;\n\n    if (this.actionId !== _actionId) {\n      this.actionId = _actionId;\n      this.setState(\n        {\n          current: 1\n        },\n        () => this.handleRequest(nextProps)\n      );\n    }\n  }\n\n  handleAddInterface = data => {\n    data.project_id = this.props.curProject._id;\n    axios.post('/api/interface/add', data).then(res => {\n      if (res.data.errcode !== 0) {\n        return message.error(`${res.data.errmsg}, 你可以在左侧的接口列表中对接口进行删改`);\n      }\n      message.success('接口添加成功');\n      let interfaceId = res.data.data._id;\n      this.props.history.push('/project/' + data.project_id + '/interface/api/' + interfaceId);\n      this.props.fetchInterfaceListMenu(data.project_id);\n    });\n  };\n\n  changeInterfaceCat = async (id, catid) => {\n    const params = {\n      id: id,\n      catid\n    };\n    let result = await axios.post('/api/interface/up', params);\n    if (result.data.errcode === 0) {\n      message.success('修改成功');\n      this.handleRequest(this.props);\n      this.props.fetchInterfaceListMenu(this.props.curProject._id);\n    } else {\n      message.error(result.data.errmsg);\n    }\n  };\n\n  changeInterfaceStatus = async value => {\n    const params = {\n      id: value.split('-')[0],\n      status: value.split('-')[1]\n    };\n    let result = await axios.post('/api/interface/up', params);\n    if (result.data.errcode === 0) {\n      message.success('修改成功');\n      this.handleRequest(this.props);\n    } else {\n      message.error(result.data.errmsg);\n    }\n  };\n\n  //page change will be processed in handleChange by pagination\n  // changePage = current => {\n  //   if (this.state.current !== current) {\n  //     this.setState(\n  //       {\n  //         current: current\n  //       },\n  //       () => this.handleRequest(this.props)\n  //     );\n  //   }\n  // };\n\n  render() {\n    let tag = this.props.curProject.tag;\n    let tagFilter = tag.map(item => {\n      return {text: item.name, value: item.name};\n    });\n\n    const columns = [\n      {\n        title: '接口名称',\n        dataIndex: 'title',\n        key: 'title',\n        width: 30,\n        render: (text, item) => {\n          return (\n            <Link to={'/project/' + item.project_id + '/interface/api/' + item._id}>\n              <span className=\"path\">{text}</span>\n            </Link>\n          );\n        }\n      },\n      {\n        title: '接口路径',\n        dataIndex: 'path',\n        key: 'path',\n        width: 50,\n        render: (item, record) => {\n          const path = this.props.curProject.basepath + item;\n          let methodColor =\n            variable.METHOD_COLOR[record.method ? record.method.toLowerCase() : 'get'] ||\n            variable.METHOD_COLOR['get'];\n          return (\n            <div>\n              <span\n                style={{ color: methodColor.color, backgroundColor: methodColor.bac }}\n                className=\"colValue\"\n              >\n                {record.method}\n              </span>\n              <Tooltip title=\"开放接口\" placement=\"topLeft\">\n                <span>{record.api_opened && <Icon className=\"opened\" type=\"eye-o\" />}</span>\n              </Tooltip>\n              <Tooltip title={path} placement=\"topLeft\" overlayClassName=\"toolTip\">\n                <span className=\"path\">{path}</span>\n              </Tooltip>\n            </div>\n          );\n        }\n      },\n      {\n        title: '接口分类',\n        dataIndex: 'catid',\n        key: 'catid',\n        width: 28,\n        render: (item, record) => {\n          return (\n            <Select\n              value={item + ''}\n              className=\"select path\"\n              onChange={catid => this.changeInterfaceCat(record._id, catid)}\n            >\n              {this.props.catList.map(cat => {\n                return (\n                  <Option key={cat.id + ''} value={cat._id + ''}>\n                    <span>{cat.name}</span>\n                  </Option>\n                );\n              })}\n            </Select>\n          );\n        }\n      },\n      {\n        title: '状态',\n        dataIndex: 'status',\n        key: 'status',\n        width: 24,\n        render: (text, record) => {\n          const key = record.key;\n          return (\n            <Select\n              value={key + '-' + text}\n              className=\"select\"\n              onChange={this.changeInterfaceStatus}\n            >\n              <Option value={key + '-done'}>\n                <span className=\"tag-status done\">已完成</span>\n              </Option>\n              <Option value={key + '-undone'}>\n                <span className=\"tag-status undone\">未完成</span>\n              </Option>\n            </Select>\n          );\n        },\n        filters: [\n          {\n            text: '已完成',\n            value: 'done'\n          },\n          {\n            text: '未完成',\n            value: 'undone'\n          }\n        ],\n        onFilter: (value, record) => record.status.indexOf(value) === 0\n      },\n      {\n        title: 'tag',\n        dataIndex: 'tag',\n        key: 'tag',\n        width: 14,\n        render: text => {\n          let textMsg = text.length > 0 ? text.join('\\n') : '未设置';\n          return <div className=\"table-desc\">{textMsg}</div>;\n        },\n        filters: tagFilter,\n        onFilter: (value, record) => {\n          return record.tag.indexOf(value) >= 0;\n        }\n      }\n    ];\n    let intername = '',\n      desc = '';\n    let cat = this.props.curProject ? this.props.curProject.cat : [];\n\n    if (cat) {\n      for (let i = 0; i < cat.length; i++) {\n        if (cat[i]._id === this.state.catid) {\n          intername = cat[i].name;\n          desc = cat[i].desc;\n          break;\n        }\n      }\n    }\n    // const data = this.state.data ? this.state.data.map(item => {\n    //   item.key = item._id;\n    //   return item;\n    // }) : [];\n    let data = [];\n    let total = 0;\n    const { params } = this.props.match;\n    if (!params.actionId) {\n      data = this.props.totalTableList;\n      total = this.props.totalCount;\n    } else if (isNaN(params.actionId)) {\n      data = this.props.catTableList;\n      total = this.props.count;\n    }\n\n    data = data.map(item => {\n      item.key = item._id;\n      return item;\n    });\n\n    const pageConfig = {\n      total: total,\n      pageSize: limit,\n      current: this.state.current\n      // onChange: this.changePage\n    };\n\n    const isDisabled = this.props.catList.length === 0;\n\n    // console.log(this.props.curProject.tag)\n\n    return (\n      <div style={{ padding: '24px' }}>\n        <h2 className=\"interface-title\" style={{ display: 'inline-block', margin: 0 }}>\n          {intername ? intername : '全部接口'}共 ({total}) 个\n        </h2>\n\n        <Button\n          style={{ float: 'right' }}\n          disabled={isDisabled}\n          type=\"primary\"\n          onClick={() => this.setState({ visible: true })}\n        >\n          添加接口\n        </Button>\n        <div style={{ marginTop: '10px' }}>\n          <Label onChange={value => this.handleChangeInterfaceCat(value, intername)} desc={desc} />\n        </div>\n        <Table\n          className=\"table-interfacelist\"\n          pagination={pageConfig}\n          columns={columns}\n          onChange={this.handleChange}\n          dataSource={data}\n        />\n        {this.state.visible && (\n          <Modal\n            title=\"添加接口\"\n            visible={this.state.visible}\n            onCancel={() => this.setState({ visible: false })}\n            footer={null}\n            className=\"addcatmodal\"\n          >\n            <AddInterfaceForm\n              catid={this.state.catid}\n              catdata={cat}\n              onCancel={() => this.setState({ visible: false })}\n              onSubmit={this.handleAddInterface}\n            />\n          </Modal>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default InterfaceList;\n"]}