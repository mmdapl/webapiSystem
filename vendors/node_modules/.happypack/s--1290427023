'use strict';

exports.__esModule = true;

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _mockEditor = require('./mockEditor');

var _mockEditor2 = _interopRequireDefault(_mockEditor);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

require('./AceEditor.scss');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ModeMap = {
  javascript: 'ace/mode/javascript',
  json: 'ace/mode/json',
  text: 'ace/mode/text',
  xml: 'ace/mode/xml',
  html: 'ace/mode/html'
};

var defaultStyle = { width: '100%', height: '200px' };

function getMode(mode) {
  return ModeMap[mode] || ModeMap.text;
}

var AceEditor = (_temp = _class = function (_React$PureComponent) {
  (0, _inherits3.default)(AceEditor, _React$PureComponent);

  function AceEditor(props) {
    (0, _classCallCheck3.default)(this, AceEditor);
    return (0, _possibleConstructorReturn3.default)(this, _React$PureComponent.call(this, props));
  }

  AceEditor.prototype.componentDidMount = function componentDidMount() {
    this.editor = (0, _mockEditor2.default)({
      container: this.editorElement,
      data: this.props.data,
      onChange: this.props.onChange,
      readOnly: this.props.readOnly,
      fullScreen: this.props.fullScreen
    });
    var mode = this.props.mode || 'javascript';
    this.editor.editor.getSession().setMode(getMode(mode));
    if (typeof this.props.callback === 'function') {
      this.props.callback(this.editor.editor);
    }
  };

  AceEditor.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
    if (!this.editor) {
      return;
    }
    if (nextProps.data !== this.props.data && this.editor.getValue() !== nextProps.data) {
      this.editor.setValue(nextProps.data);
      var mode = nextProps.mode || 'javascript';
      this.editor.editor.getSession().setMode(getMode(mode));
      this.editor.editor.clearSelection();
    }
  };

  AceEditor.prototype.render = function render() {
    var _this2 = this;

    return _react2.default.createElement('div', {
      className: this.props.className,
      style: this.props.className ? undefined : this.props.style || defaultStyle,
      ref: function ref(editor) {
        _this2.editorElement = editor;
      }
    });
  };

  return AceEditor;
}(_react2.default.PureComponent), _class.propTypes = {
  data: _propTypes2.default.any,
  onChange: _propTypes2.default.func,
  className: _propTypes2.default.string,
  mode: _propTypes2.default.string, //enum[json, text, javascript], default is javascript
  readOnly: _propTypes2.default.bool,
  callback: _propTypes2.default.func,
  style: _propTypes2.default.object,
  fullScreen: _propTypes2.default.bool,
  insertCode: _propTypes2.default.func
}, _temp);
exports.default = AceEditor;