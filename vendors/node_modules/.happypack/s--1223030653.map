{"version":3,"sources":["client\\containers\\Project\\Interface\\InterfaceCol\\CaseReport.js"],"names":["TabPane","jsonFormat","json","CaseReport","props","params","data","headers","res_header","res_body","httpCode","status","validRes","Array","isArray","map","item","index","message","url","query","whiteSpace","propTypes","PropTypes","string","any","object","array","number"],"mappings":"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","file":"CaseReport.js","sourceRoot":"C:/Users/DUOYI/Desktop/api/test/vendors","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Row, Col, Tabs } from 'antd';\nconst TabPane = Tabs.TabPane;\nfunction jsonFormat(json) {\n  // console.log('json',json)\n  if (json && typeof json === 'object') {\n    return JSON.stringify(json, null, '   ');\n  }\n  return json;\n}\n\nconst CaseReport = function(props) {\n  let params = jsonFormat(props.data);\n  let headers = jsonFormat(props.headers, null, '   ');\n  let res_header = jsonFormat(props.res_header, null, '   ');\n  let res_body = jsonFormat(props.res_body);\n  let httpCode = props.status;\n  let validRes;\n  if (props.validRes && Array.isArray(props.validRes)) {\n    validRes = props.validRes.map((item, index) => {\n      return <div key={index}>{item.message}</div>;\n    });\n  }\n\n  return (\n    <div className=\"report\">\n      <Tabs defaultActiveKey=\"request\">\n        <TabPane className=\"case-report-pane\" tab=\"Request\" key=\"request\">\n          <Row className=\"case-report\">\n            <Col className=\"case-report-title\" span=\"6\">\n              Url\n            </Col>\n            <Col span=\"18\">{props.url}</Col>\n          </Row>\n          {props.query ? (\n            <Row className=\"case-report\">\n              <Col className=\"case-report-title\" span=\"6\">\n                Query\n              </Col>\n              <Col span=\"18\">{props.query}</Col>\n            </Row>\n          ) : null}\n\n          {props.headers ? (\n            <Row className=\"case-report\">\n              <Col className=\"case-report-title\" span=\"6\">\n                Headers\n              </Col>\n              <Col span=\"18\">\n                <pre>{headers}</pre>\n              </Col>\n            </Row>\n          ) : null}\n\n          {params ? (\n            <Row className=\"case-report\">\n              <Col className=\"case-report-title\" span=\"6\">\n                Body\n              </Col>\n              <Col span=\"18\">\n                <pre style={{ whiteSpace: 'pre-wrap' }}>{params}</pre>\n              </Col>\n            </Row>\n          ) : null}\n        </TabPane>\n        <TabPane className=\"case-report-pane\" tab=\"Response\" key=\"response\">\n          <Row  className=\"case-report\">\n            <Col className=\"case-report-title\" span=\"6\">\n              HttpCode\n            </Col>\n            <Col span=\"18\">\n              <pre>{httpCode}</pre>\n            </Col>\n          </Row>\n          {props.res_header ? (\n            <Row className=\"case-report\">\n              <Col className=\"case-report-title\" span=\"6\">\n                Headers\n              </Col>\n              <Col span=\"18\">\n                <pre>{res_header}</pre>\n              </Col>\n            </Row>\n          ) : null}\n          {props.res_body ? (\n            <Row className=\"case-report\">\n              <Col className=\"case-report-title\" span=\"6\">\n                Body\n              </Col>\n              <Col span=\"18\">\n                <pre>{res_body}</pre>\n              </Col>\n            </Row>\n          ) : null}\n        </TabPane>\n        <TabPane className=\"case-report-pane\" tab=\"验证结果\" key=\"valid\">\n          {props.validRes ? (\n            <Row className=\"case-report\">\n              <Col className=\"case-report-title\" span=\"6\">\n                验证结果\n              </Col>\n              <Col span=\"18\"><pre>\n                {validRes}  \n              </pre></Col>\n            </Row>\n          ) : null}\n        </TabPane>\n      </Tabs>\n    </div>\n  );\n};\n\nCaseReport.propTypes = {\n  url: PropTypes.string,\n  data: PropTypes.any,\n  headers: PropTypes.object,\n  res_header: PropTypes.object,\n  res_body: PropTypes.any,\n  query: PropTypes.string,\n  validRes: PropTypes.array,\n  status: PropTypes.number\n};\n\nexport default CaseReport;\n"]}