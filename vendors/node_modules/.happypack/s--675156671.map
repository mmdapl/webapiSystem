{"version":3,"sources":["exts\\yapi-plugin-advanced-mock\\MockCol\\MockCol.js"],"names":["MockCol","list","state","mockCol","currInterface","inter","curdata","currProject","project","fetchMockCol","withRouter","props","caseData","caseDesModalVisible","isAdd","openModal","record","res_body_is_json_schema","axios","post","schema","res_body","required","result","data","req_body_is_json_schema","req_body_other","setState","handleOk","currcase","interface_id","match","params","actionId","project_id","id","_id","then","res","errcode","success","error","errmsg","deleteCase","openMockCase","enable","componentWillMount","interfaceId","render","role","isGuest","initCaseData","ip","ip_enable","name","title","code","delay","headers","value","ipFilters","ipObj","userFilters","userObj","_","isArray","forEach","item","username","map","text","columns","dataIndex","key","recode","onFilter","filters","marginRight","case_enable","marginBottom","constants","docHref","adv_mock_case","marginLeft","saveFormRef","Component","propTypes","PropTypes","array","object","func"],"mappings":"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","file":"MockCol.js","sourceRoot":"C:/Users/DUOYI/Desktop/api/test/vendors","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { Table, Button, message, Popconfirm, Tooltip, Icon } from 'antd';\nimport { fetchMockCol } from 'client/reducer/modules/mockCol';\nimport { formatTime } from 'client/common.js';\nimport constants from 'client/constants/variable.js';\nimport CaseDesModal from './CaseDesModal';\nimport { json5_parse } from '../../../client/common';\nimport _ from 'underscore';\n\n@connect(\n  state => {\n    return {\n      list: state.mockCol.list,\n      currInterface: state.inter.curdata,\n      currProject: state.project.currProject\n    };\n  },\n  {\n    fetchMockCol\n  }\n)\n@withRouter\nexport default class MockCol extends Component {\n  static propTypes = {\n    list: PropTypes.array,\n    currInterface: PropTypes.object,\n    match: PropTypes.object,\n    fetchMockCol: PropTypes.func,\n    currProject: PropTypes.object\n  };\n\n  state = {\n    caseData: {},\n    caseDesModalVisible: false,\n    isAdd: false\n  };\n\n  constructor(props) {\n    super(props);\n  }\n\n  componentWillMount() {\n    const interfaceId = this.props.match.params.actionId;\n    this.props.fetchMockCol(interfaceId);\n  }\n\n  openModal = (record, isAdd) => {\n    return async () => {\n      if (this.props.currInterface.res_body_is_json_schema && isAdd) {\n        let result = await axios.post('/api/interface/schema2json', {\n          schema: json5_parse(this.props.currInterface.res_body),\n          required: true\n        });\n        record.res_body = JSON.stringify(result.data);\n      }\n      // 参数过滤schema形式\n      if (this.props.currInterface.req_body_is_json_schema) {\n        let result = await axios.post('/api/interface/schema2json', {\n          schema: json5_parse(this.props.currInterface.req_body_other),\n          required: true\n        });\n        record.req_body_other = JSON.stringify(result.data);\n      }\n\n      this.setState({\n        isAdd: isAdd,\n        caseDesModalVisible: true,\n        caseData: record\n      });\n    };\n  };\n\n  handleOk = async caseData => {\n    if (!caseData) {\n      return null;\n    }\n    const { caseData: currcase } = this.state;\n    const interface_id = this.props.match.params.actionId;\n    const project_id = this.props.match.params.id;\n    caseData = Object.assign({\n      ...caseData,\n      interface_id: interface_id,\n      project_id: project_id\n    });\n    if (!this.state.isAdd) {\n      caseData.id = currcase._id;\n    }\n    await axios.post('/api/plugin/advmock/case/save', caseData).then(async res => {\n      if (res.data.errcode === 0) {\n        message.success(this.state.isAdd ? '添加成功' : '保存成功');\n        await this.props.fetchMockCol(interface_id);\n        this.setState({ caseDesModalVisible: false });\n      } else {\n        message.error(res.data.errmsg);\n      }\n    });\n  };\n\n  deleteCase = async id => {\n    const interface_id = this.props.match.params.actionId;\n    await axios.post('/api/plugin/advmock/case/del', { id }).then(async res => {\n      if (res.data.errcode === 0) {\n        message.success('删除成功');\n        await this.props.fetchMockCol(interface_id);\n      } else {\n        message.error(res.data.errmsg);\n      }\n    });\n  };\n\n  // mock case 可以设置开启的关闭\n  openMockCase = async (id , enable=true)=> {\n    const interface_id = this.props.match.params.actionId;\n\n    await axios.post('/api/plugin/advmock/case/hide', {\n      id,\n      enable: !enable\n    }).then(async res => {\n      if (res.data.errcode === 0) {\n        message.success('修改成功');\n        await this.props.fetchMockCol(interface_id);\n      } else {\n        message.error(res.data.errmsg);\n      }\n    })\n  }\n\n  render() {\n    const { list: data, currInterface } = this.props;\n    const { isAdd, caseData, caseDesModalVisible } = this.state;\n\n    const role = this.props.currProject.role;\n    const isGuest = role === 'guest';\n    const initCaseData = {\n      ip: '',\n      ip_enable: false,\n      name: currInterface.title,\n      code: '200',\n      delay: 0,\n      headers: [{ name: '', value: '' }],\n      params: {},\n      res_body: currInterface.res_body\n    };\n\n    let ipFilters = [];\n    let ipObj = {};\n    let userFilters = [];\n    let userObj = {};\n    _.isArray(data) &&\n      data.forEach(item => {\n        ipObj[item.ip_enable ? item.ip : ''] = '';\n        userObj[item.username] = '';\n      });\n    ipFilters = Object.keys(Object.assign(ipObj)).map(value => {\n      if (!value) {\n        value = '无过滤';\n      }\n      return { text: value, value };\n    });\n    userFilters = Object.keys(Object.assign(userObj)).map(value => {\n      return { text: value, value };\n    });\n    const columns = [\n      {\n        title: '期望名称',\n        dataIndex: 'name',\n        key: 'name'\n      },\n      {\n        title: 'ip',\n        dataIndex: 'ip',\n        key: 'ip',\n        render: (text, recode) => {\n          if (!recode.ip_enable) {\n            text = '';\n          }\n          return text;\n        },\n        onFilter: (value, record) =>\n          (record.ip === value && record.ip_enable) || (value === '无过滤' && !record.ip_enable),\n        filters: ipFilters\n      },\n      {\n        title: '创建人',\n        dataIndex: 'username',\n        key: 'username',\n        onFilter: (value, record) => record.username === value,\n        filters: userFilters\n      },\n      {\n        title: '编辑时间',\n        dataIndex: 'up_time',\n        key: 'up_time',\n        render: text => formatTime(text)\n      },\n      {\n        title: '操作',\n        dataIndex: '_id',\n        key: '_id',\n        render: (_id, recode) => {\n          // console.log(recode)\n          return (\n            !isGuest && (\n              <div>\n                <span style={{ marginRight: 5 }}>\n                  <Button size=\"small\" onClick={this.openModal(recode)}>\n                    编辑\n                  </Button>\n                </span>\n                <span style={{ marginRight: 5 }}>\n                  <Popconfirm\n                    title=\"你确定要删除这条期望?\"\n                    onConfirm={() => this.deleteCase(_id)}\n                    okText=\"确定\"\n                    cancelText=\"取消\"\n                  >\n                    <Button size=\"small\" onClick={() => {}}>\n                      删除\n                    </Button>\n                  </Popconfirm>\n                </span>\n                <span>\n                  <Button size=\"small\" onClick={() => this.openMockCase(_id, recode.case_enable)}>\n                    {recode.case_enable ? <span>已开启</span> : <span>未开启</span>}\n                  </Button>\n                </span>\n              </div>\n            )\n          );\n        }\n      }\n    ];\n\n    return (\n      <div>\n        <div style={{ marginBottom: 8 }}>\n          <Button type=\"primary\" onClick={this.openModal(initCaseData, true)} disabled={isGuest}>\n            添加期望\n          </Button>\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href={constants.docHref.adv_mock_case}\n            style={{ marginLeft: 8 }}\n          >\n            <Tooltip title=\"点击查看文档\">\n              <Icon type=\"question-circle-o\" />\n            </Tooltip>\n          </a>\n        </div>\n        <Table columns={columns} dataSource={data} pagination={false} rowKey=\"_id\" />\n        {caseDesModalVisible && (\n          <CaseDesModal\n            visible={caseDesModalVisible}\n            isAdd={isAdd}\n            caseData={caseData}\n            onOk={this.handleOk}\n            onCancel={() => this.setState({ caseDesModalVisible: false })}\n            ref={this.saveFormRef}\n          />\n        )}\n      </div>\n    );\n  }\n}\n"]}