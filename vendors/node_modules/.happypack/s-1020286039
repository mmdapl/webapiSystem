'use strict';

exports.__esModule = true;

var _card = require('antd/lib/card');

var _card2 = _interopRequireDefault(_card);

var _button = require('antd/lib/button');

var _button2 = _interopRequireDefault(_button);

var _switch = require('antd/lib/switch');

var _switch2 = _interopRequireDefault(_switch);

var _tooltip = require('antd/lib/tooltip');

var _tooltip2 = _interopRequireDefault(_tooltip);

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _row = require('antd/lib/row');

var _row2 = _interopRequireDefault(_row);

var _col = require('antd/lib/col');

var _col2 = _interopRequireDefault(_col);

var _popover = require('antd/lib/popover');

var _popover2 = _interopRequireDefault(_popover);

var _icon = require('antd/lib/icon');

var _icon2 = _interopRequireDefault(_icon);

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _promise = require('babel-runtime/core-js/promise');

var _promise2 = _interopRequireDefault(_promise);

var _alert = require('antd/lib/alert');

var _alert2 = _interopRequireDefault(_alert);

var _message2 = require('antd/lib/message');

var _message3 = _interopRequireDefault(_message2);

var _assign = require('babel-runtime/core-js/object/assign');

var _assign2 = _interopRequireDefault(_assign);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _select = require('antd/lib/select');

var _select2 = _interopRequireDefault(_select);

var _modal = require('antd/lib/modal');

var _modal2 = _interopRequireDefault(_modal);

var _radio = require('antd/lib/radio');

var _radio2 = _interopRequireDefault(_radio);

var _form = require('antd/lib/form');

var _form2 = _interopRequireDefault(_form);

var _input = require('antd/lib/input');

var _input2 = _interopRequireDefault(_input);

var _dec, _class, _class2, _temp;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _project = require('../../../../reducer/modules/project');

var _group = require('../../../../reducer/modules/group');

var _group2 = require('../../../../reducer/modules/group.js');

var _user = require('../../../../reducer/modules/user');

var _reactRedux = require('react-redux');

var _reactRouter = require('react-router');

var _variable = require('../../../../constants/variable.js');

var _variable2 = _interopRequireDefault(_variable);

var _common = require('../../../../common');

require('../Setting.scss');

var _underscore = require('underscore');

var _underscore2 = _interopRequireDefault(_underscore);

var _ProjectTag = require('./ProjectTag.js');

var _ProjectTag2 = _interopRequireDefault(_ProjectTag);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var TextArea = _input2.default.TextArea;

var FormItem = _form2.default.Item;
var RadioGroup = _radio2.default.Group;
var RadioButton = _radio2.default.Button;

var confirm = _modal2.default.confirm;

// layout
var formItemLayout = {
  labelCol: {
    lg: { offset: 1, span: 3 },
    xs: { span: 24 },
    sm: { span: 6 }
  },
  wrapperCol: {
    lg: { span: 19 },
    xs: { span: 24 },
    sm: { span: 14 }
  },
  className: 'form-item'
};

var Option = _select2.default.Option;

var ProjectMessage = (_dec = (0, _reactRedux.connect)(function (state) {
  return {
    projectList: state.project.projectList,
    groupList: state.group.groupList,
    projectMsg: state.project.currProject,
    currGroup: state.group.currGroup
  };
}, {
  updateProject: _project.updateProject,
  delProject: _project.delProject,
  getProject: _project.getProject,
  fetchGroupMsg: _group.fetchGroupMsg,
  upsetProject: _project.upsetProject,
  fetchGroupList: _group2.fetchGroupList,
  setBreadcrumb: _user.setBreadcrumb
}), _dec(_class = (0, _reactRouter.withRouter)(_class = (_temp = _class2 = function (_Component) {
  (0, _inherits3.default)(ProjectMessage, _Component);

  function ProjectMessage(props) {
    (0, _classCallCheck3.default)(this, ProjectMessage);

    var _this = (0, _possibleConstructorReturn3.default)(this, _Component.call(this, props));

    _this.handleOk = function (e) {
      e.preventDefault();
      var _this$props = _this.props,
          form = _this$props.form,
          updateProject = _this$props.updateProject,
          projectMsg = _this$props.projectMsg,
          groupList = _this$props.groupList;

      form.validateFields(function (err, values) {
        if (!err) {
          var tag = _this.tag.state.tag;
          // let tag = this.refs.tag;

          tag = tag.filter(function (val) {
            return val.name !== '';
          });
          var assignValue = (0, _assign2.default)(projectMsg, values, { tag: tag });

          values.protocol = _this.state.protocol.split(':')[0];
          var group_id = assignValue.group_id;
          var selectGroup = _underscore2.default.find(groupList, function (item) {
            return item._id == group_id;
          });

          updateProject(assignValue).then(function (res) {
            if (res.payload.data.errcode == 0) {
              _this.props.getProject(_this.props.projectId);
              _message3.default.success('修改成功! ');

              // 如果如果项目所在的分组位置发生改变
              _this.props.fetchGroupMsg(group_id);
              // this.props.history.push('/group');
              var projectName = (0, _common.htmlFilter)(assignValue.name);
              _this.props.setBreadcrumb([{
                name: selectGroup.group_name,
                href: '/group/' + group_id
              }, {
                name: projectName
              }]);
            }
          }).catch(function () {});
          form.resetFields();
        }
      });
    };

    _this.tagSubmit = function (tag) {
      _this.tag = tag;
    };

    _this.showConfirm = function () {
      var that = _this;
      confirm({
        title: '确认删除 ' + that.props.projectMsg.name + ' 项目吗？',
        content: _react2.default.createElement(
          'div',
          { style: { marginTop: '10px', fontSize: '13px', lineHeight: '25px' } },
          _react2.default.createElement(_alert2.default, {
            message: '\u8B66\u544A\uFF1A\u6B64\u64CD\u4F5C\u975E\u5E38\u5371\u9669,\u4F1A\u5220\u9664\u8BE5\u9879\u76EE\u4E0B\u9762\u6240\u6709\u63A5\u53E3\uFF0C\u5E76\u4E14\u65E0\u6CD5\u6062\u590D!',
            type: 'warning',
            banner: true
          }),
          _react2.default.createElement(
            'div',
            { style: { marginTop: '16px' } },
            _react2.default.createElement(
              'p',
              { style: { marginBottom: '8px' } },
              _react2.default.createElement(
                'b',
                null,
                '\u8BF7\u8F93\u5165\u9879\u76EE\u540D\u79F0\u786E\u8BA4\u6B64\u64CD\u4F5C:'
              )
            ),
            _react2.default.createElement(_input2.default, { id: 'project_name', size: 'large' })
          )
        ),
        onOk: function onOk() {
          var groupName = (0, _common.trim)(document.getElementById('project_name').value);
          if (that.props.projectMsg.name !== groupName) {
            _message3.default.error('项目名称有误');
            return new _promise2.default(function (resolve, reject) {
              reject('error');
            });
          } else {
            that.props.delProject(that.props.projectId).then(function (res) {
              if (res.payload.data.errcode == 0) {
                _message3.default.success('删除成功!');
                that.props.history.push('/group/' + that.props.projectMsg.group_id);
              }
            });
          }
        },

        iconType: 'delete',
        onCancel: function onCancel() {}
      });
    };

    _this.changeProjectColor = function (e) {
      var _this$props$projectMs = _this.props.projectMsg,
          _id = _this$props$projectMs._id,
          color = _this$props$projectMs.color,
          icon = _this$props$projectMs.icon;

      _this.props.upsetProject({ id: _id, color: e.target.value || color, icon: icon }).then(function (res) {
        if (res.payload.data.errcode === 0) {
          _this.props.getProject(_this.props.projectId);
        }
      });
    };

    _this.changeProjectIcon = function (e) {
      var _this$props$projectMs2 = _this.props.projectMsg,
          _id = _this$props$projectMs2._id,
          color = _this$props$projectMs2.color,
          icon = _this$props$projectMs2.icon;

      _this.props.upsetProject({ id: _id, color: color, icon: e.target.value || icon }).then(function (res) {
        if (res.payload.data.errcode === 0) {
          _this.props.getProject(_this.props.projectId);
        }
      });
    };

    _this.toggleDangerOptions = function () {
      // console.log(this.state.showDangerOptions);
      _this.setState({
        showDangerOptions: !_this.state.showDangerOptions
      });
    };

    _this.state = {
      protocol: 'http://',
      projectMsg: {},
      showDangerOptions: false
    };
    return _this;
  }

  // 确认修改


  // 修改项目头像的背景颜色

  // 修改项目头像的图标


  // 点击“查看危险操作”按钮


  ProjectMessage.prototype.componentWillMount = function () {
    var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee() {
      return _regenerator2.default.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              _context.next = 2;
              return this.props.fetchGroupList();

            case 2:
              _context.next = 4;
              return this.props.fetchGroupMsg(this.props.projectMsg.group_id);

            case 4:
            case 'end':
              return _context.stop();
          }
        }
      }, _callee, this);
    }));

    function componentWillMount() {
      return _ref.apply(this, arguments);
    }

    return componentWillMount;
  }();

  ProjectMessage.prototype.render = function render() {
    var getFieldDecorator = this.props.form.getFieldDecorator;
    var _props = this.props,
        projectMsg = _props.projectMsg,
        currGroup = _props.currGroup;

    var mockUrl = location.protocol + '//' + location.hostname + (location.port !== '' ? ':' + location.port : '') + ('/mock/' + projectMsg._id + projectMsg.basepath + '+$\u63A5\u53E3\u8BF7\u6C42\u8DEF\u5F84');
    var initFormValues = {};
    var name = projectMsg.name,
        basepath = projectMsg.basepath,
        desc = projectMsg.desc,
        project_type = projectMsg.project_type,
        group_id = projectMsg.group_id,
        switch_notice = projectMsg.switch_notice,
        strice = projectMsg.strice,
        is_json5 = projectMsg.is_json5,
        tag = projectMsg.tag;

    initFormValues = {
      name: name,
      basepath: basepath,
      desc: desc,
      project_type: project_type,
      group_id: group_id,
      switch_notice: switch_notice,
      strice: strice,
      is_json5: is_json5,
      tag: tag
    };

    var colorArr = (0, _common.entries)(_variable2.default.PROJECT_COLOR);
    var colorSelector = _react2.default.createElement(
      RadioGroup,
      { onChange: this.changeProjectColor, value: projectMsg.color, className: 'color' },
      colorArr.map(function (item, index) {
        return _react2.default.createElement(
          RadioButton,
          {
            key: index,
            value: item[0],
            style: { backgroundColor: item[1], color: '#fff', fontWeight: 'bold' }
          },
          item[0] === projectMsg.color ? _react2.default.createElement(_icon2.default, { type: 'check' }) : null
        );
      })
    );
    var iconSelector = _react2.default.createElement(
      RadioGroup,
      { onChange: this.changeProjectIcon, value: projectMsg.icon, className: 'icon' },
      _variable2.default.PROJECT_ICON.map(function (item) {
        return _react2.default.createElement(
          RadioButton,
          { key: item, value: item, style: { fontWeight: 'bold' } },
          _react2.default.createElement(_icon2.default, { type: item })
        );
      })
    );
    var selectDisbaled = projectMsg.role === 'owner' || projectMsg.role === 'admin';
    return _react2.default.createElement(
      'div',
      null,
      _react2.default.createElement(
        'div',
        { className: 'm-panel' },
        _react2.default.createElement(
          _row2.default,
          { className: 'project-setting' },
          _react2.default.createElement(
            _col2.default,
            { xs: 6, lg: { offset: 1, span: 3 }, className: 'setting-logo' },
            _react2.default.createElement(
              _popover2.default,
              {
                placement: 'bottom',
                title: colorSelector,
                content: iconSelector,
                trigger: 'click',
                overlayClassName: 'change-project-container'
              },
              _react2.default.createElement(_icon2.default, {
                type: projectMsg.icon || 'star-o',
                className: 'ui-logo',
                style: {
                  backgroundColor: _variable2.default.PROJECT_COLOR[projectMsg.color] || _variable2.default.PROJECT_COLOR.blue
                }
              })
            )
          ),
          _react2.default.createElement(
            _col2.default,
            { xs: 18, sm: 15, lg: 19, className: 'setting-intro' },
            _react2.default.createElement(
              'h2',
              { className: 'ui-title' },
              (currGroup.group_name || '') + ' / ' + (projectMsg.name || '')
            )
          )
        ),
        _react2.default.createElement('hr', { className: 'breakline' }),
        _react2.default.createElement(
          _form2.default,
          null,
          _react2.default.createElement(
            FormItem,
            (0, _extends3.default)({}, formItemLayout, { label: '\u9879\u76EEID' }),
            _react2.default.createElement(
              'span',
              null,
              this.props.projectMsg._id
            )
          ),
          _react2.default.createElement(
            FormItem,
            (0, _extends3.default)({}, formItemLayout, { label: '\u9879\u76EE\u540D\u79F0' }),
            getFieldDecorator('name', {
              initialValue: initFormValues.name,
              rules: (0, _common.nameLengthLimit)('项目')
            })(_react2.default.createElement(_input2.default, null))
          ),
          _react2.default.createElement(
            FormItem,
            (0, _extends3.default)({}, formItemLayout, { label: '\u6240\u5C5E\u5206\u7EC4' }),
            getFieldDecorator('group_id', {
              initialValue: initFormValues.group_id + '',
              rules: [{
                required: true,
                message: '请选择项目所属的分组!'
              }]
            })(_react2.default.createElement(
              _select2.default,
              { disabled: !selectDisbaled },
              this.props.groupList.map(function (item, index) {
                return _react2.default.createElement(
                  Option,
                  { value: item._id.toString(), key: index },
                  item.group_name
                );
              })
            ))
          ),
          _react2.default.createElement(
            FormItem,
            (0, _extends3.default)({}, formItemLayout, {
              label: _react2.default.createElement(
                'span',
                null,
                '\u63A5\u53E3\u57FA\u672C\u8DEF\u5F84\xA0',
                _react2.default.createElement(
                  _tooltip2.default,
                  { title: '\u57FA\u672C\u8DEF\u5F84\u4E3A\u7A7A\u8868\u793A\u6839\u8DEF\u5F84' },
                  _react2.default.createElement(_icon2.default, { type: 'question-circle-o' })
                )
              )
            }),
            getFieldDecorator('basepath', {
              initialValue: initFormValues.basepath,
              rules: [{
                required: false,
                message: '请输入基本路径! '
              }]
            })(_react2.default.createElement(_input2.default, null))
          ),
          _react2.default.createElement(
            FormItem,
            (0, _extends3.default)({}, formItemLayout, {
              label: _react2.default.createElement(
                'span',
                null,
                'MOCK\u5730\u5740\xA0',
                _react2.default.createElement(
                  _tooltip2.default,
                  { title: '\u5177\u4F53\u4F7F\u7528\u65B9\u6CD5\u8BF7\u67E5\u770B\u6587\u6863' },
                  _react2.default.createElement(_icon2.default, { type: 'question-circle-o' })
                )
              )
            }),
            _react2.default.createElement(_input2.default, { disabled: true, value: mockUrl, onChange: function onChange() {} })
          ),
          _react2.default.createElement(
            FormItem,
            (0, _extends3.default)({}, formItemLayout, { label: '\u63CF\u8FF0' }),
            getFieldDecorator('desc', {
              initialValue: initFormValues.desc,
              rules: [{
                required: false
              }]
            })(_react2.default.createElement(TextArea, { rows: 8 }))
          ),
          _react2.default.createElement(
            FormItem,
            (0, _extends3.default)({}, formItemLayout, {
              label: _react2.default.createElement(
                'span',
                null,
                'tag \u4FE1\u606F\xA0',
                _react2.default.createElement(
                  _tooltip2.default,
                  { title: '\u5B9A\u4E49 tag \u4FE1\u606F\uFF0C\u8FC7\u6EE4\u63A5\u53E3' },
                  _react2.default.createElement(_icon2.default, { type: 'question-circle-o' })
                )
              )
            }),
            _react2.default.createElement(_ProjectTag2.default, { tagMsg: tag, ref: this.tagSubmit })
          ),
          _react2.default.createElement(
            FormItem,
            (0, _extends3.default)({}, formItemLayout, {
              label: _react2.default.createElement(
                'span',
                null,
                'mock\u4E25\u683C\u6A21\u5F0F\xA0',
                _react2.default.createElement(
                  _tooltip2.default,
                  { title: '\u5F00\u542F\u540E mock \u8BF7\u6C42\u4F1A\u5BF9 query\uFF0Cbody form \u7684\u5FC5\u987B\u5B57\u6BB5\u548C json schema \u8FDB\u884C\u6821\u9A8C' },
                  _react2.default.createElement(_icon2.default, { type: 'question-circle-o' })
                )
              )
            }),
            getFieldDecorator('strice', {
              valuePropName: 'checked',
              initialValue: initFormValues.strice
            })(_react2.default.createElement(_switch2.default, { checkedChildren: '\u5F00', unCheckedChildren: '\u5173' }))
          ),
          _react2.default.createElement(
            FormItem,
            (0, _extends3.default)({}, formItemLayout, {
              label: _react2.default.createElement(
                'span',
                null,
                '\u5F00\u542Fjson5\xA0',
                _react2.default.createElement(
                  _tooltip2.default,
                  { title: '\u5F00\u542F\u540E\u53EF\u5728\u63A5\u53E3 body \u548C\u8FD4\u56DE\u503C\u4E2D\u5199 json \u5B57\u6BB5' },
                  _react2.default.createElement(_icon2.default, { type: 'question-circle-o' })
                )
              )
            }),
            getFieldDecorator('is_json5', {
              valuePropName: 'checked',
              initialValue: initFormValues.is_json5
            })(_react2.default.createElement(_switch2.default, { checkedChildren: '\u5F00', unCheckedChildren: '\u5173' }))
          ),
          _react2.default.createElement(
            FormItem,
            (0, _extends3.default)({}, formItemLayout, { label: '\u9ED8\u8BA4\u5F00\u542F\u6D88\u606F\u901A\u77E5' }),
            getFieldDecorator('switch_notice', {
              valuePropName: 'checked',
              initialValue: initFormValues.switch_notice
            })(_react2.default.createElement(_switch2.default, { checkedChildren: '\u5F00', unCheckedChildren: '\u5173' }))
          ),
          _react2.default.createElement(
            FormItem,
            (0, _extends3.default)({}, formItemLayout, { label: '\u6743\u9650' }),
            getFieldDecorator('project_type', {
              rules: [{
                required: true
              }],
              initialValue: initFormValues.project_type
            })(_react2.default.createElement(
              RadioGroup,
              null,
              _react2.default.createElement(
                _radio2.default,
                { value: 'private', className: 'radio' },
                _react2.default.createElement(_icon2.default, { type: 'lock' }),
                '\u79C1\u6709',
                _react2.default.createElement('br', null),
                _react2.default.createElement(
                  'span',
                  { className: 'radio-desc' },
                  '\u53EA\u6709\u7EC4\u957F\u548C\u9879\u76EE\u5F00\u53D1\u8005\u53EF\u4EE5\u7D22\u5F15\u5E76\u67E5\u770B\u9879\u76EE\u4FE1\u606F'
                )
              ),
              _react2.default.createElement('br', null),
              projectMsg.role === 'admin' && _react2.default.createElement(
                _radio2.default,
                { value: 'public', className: 'radio' },
                _react2.default.createElement(_icon2.default, { type: 'unlock' }),
                '\u516C\u5F00',
                _react2.default.createElement('br', null),
                _react2.default.createElement(
                  'span',
                  { className: 'radio-desc' },
                  '\u4EFB\u4F55\u4EBA\u90FD\u53EF\u4EE5\u7D22\u5F15\u5E76\u67E5\u770B\u9879\u76EE\u4FE1\u606F'
                )
              )
            ))
          )
        ),
        _react2.default.createElement(
          'div',
          { className: 'btnwrap-changeproject' },
          _react2.default.createElement(
            _button2.default,
            {
              className: 'm-btn btn-save',
              icon: 'save',
              type: 'primary',
              size: 'large',
              onClick: this.handleOk
            },
            '\u4FDD \u5B58'
          )
        ),
        projectMsg.role === 'owner' || projectMsg.role === 'admin' ? _react2.default.createElement(
          'div',
          { className: 'danger-container' },
          _react2.default.createElement(
            'div',
            { className: 'title' },
            _react2.default.createElement(
              'h2',
              { className: 'content' },
              _react2.default.createElement(_icon2.default, { type: 'exclamation-circle-o' }),
              ' \u5371\u9669\u64CD\u4F5C'
            ),
            _react2.default.createElement(
              _button2.default,
              { onClick: this.toggleDangerOptions },
              '\u67E5 \u770B',
              _react2.default.createElement(_icon2.default, { type: this.state.showDangerOptions ? 'up' : 'down' })
            )
          ),
          this.state.showDangerOptions ? _react2.default.createElement(
            _card2.default,
            { hoverable: true, className: 'card-danger' },
            _react2.default.createElement(
              'div',
              { className: 'card-danger-content' },
              _react2.default.createElement(
                'h3',
                null,
                '\u5220\u9664\u9879\u76EE'
              ),
              _react2.default.createElement(
                'p',
                null,
                '\u9879\u76EE\u4E00\u65E6\u5220\u9664\uFF0C\u5C06\u65E0\u6CD5\u6062\u590D\u6570\u636E\uFF0C\u8BF7\u614E\u91CD\u64CD\u4F5C\uFF01'
              ),
              _react2.default.createElement(
                'p',
                null,
                '\u53EA\u6709\u7EC4\u957F\u548C\u7BA1\u7406\u5458\u6709\u6743\u9650\u5220\u9664\u9879\u76EE\u3002'
              )
            ),
            _react2.default.createElement(
              _button2.default,
              {
                type: 'danger',
                ghost: true,
                className: 'card-danger-btn',
                onClick: this.showConfirm
              },
              '\u5220\u9664'
            )
          ) : null
        ) : null
      )
    );
  };

  return ProjectMessage;
}(_react.PureComponent), _class2.propTypes = {
  projectId: _propTypes2.default.number,
  form: _propTypes2.default.object,
  updateProject: _propTypes2.default.func,
  delProject: _propTypes2.default.func,
  getProject: _propTypes2.default.func,
  history: _propTypes2.default.object,
  fetchGroupMsg: _propTypes2.default.func,
  upsetProject: _propTypes2.default.func,
  groupList: _propTypes2.default.array,
  projectList: _propTypes2.default.array,
  projectMsg: _propTypes2.default.object,
  fetchGroupList: _propTypes2.default.func,
  currGroup: _propTypes2.default.object,
  setBreadcrumb: _propTypes2.default.func
}, _temp)) || _class) || _class);
exports.default = _form2.default.create()(ProjectMessage);