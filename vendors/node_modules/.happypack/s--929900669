'use strict';

exports.__esModule = true;

var _modal = require('antd/lib/modal');

var _modal2 = _interopRequireDefault(_modal);

var _row = require('antd/lib/row');

var _row2 = _interopRequireDefault(_row);

var _col = require('antd/lib/col');

var _col2 = _interopRequireDefault(_col);

var _tooltip = require('antd/lib/tooltip');

var _tooltip2 = _interopRequireDefault(_tooltip);

var _input = require('antd/lib/input');

var _input2 = _interopRequireDefault(_input);

var _icon = require('antd/lib/icon');

var _icon2 = _interopRequireDefault(_icon);

var _alert = require('antd/lib/alert');

var _alert2 = _interopRequireDefault(_alert);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _stringify = require('babel-runtime/core-js/json/stringify');

var _stringify2 = _interopRequireDefault(_stringify);

var _collapse = require('antd/lib/collapse');

var _collapse2 = _interopRequireDefault(_collapse);

var _class, _temp, _initialiseProps;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

require('./index.scss');

var _MockList = require('./MockList.js');

var _MockList2 = _interopRequireDefault(_MockList);

var _MethodsList = require('./MethodsList.js');

var _MethodsList2 = _interopRequireDefault(_MethodsList);

var _VariablesSelect = require('./VariablesSelect.js');

var _VariablesSelect2 = _interopRequireDefault(_VariablesSelect);

var _common = require('../../common.js');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _require = require('../../../common/utils.js'),
    handleParamsValue = _require.handleParamsValue;

var Panel = _collapse2.default.Panel;

// 深拷贝
function deepEqual(state) {
  return JSON.parse((0, _stringify2.default)(state));
}

function closeRightTabsAndAddNewTab(arr, index, name, params) {
  var newParamsList = [].concat(arr);
  newParamsList.splice(index + 1, newParamsList.length - index);
  newParamsList.push({
    name: '',
    params: []
  });

  var curParams = params || [];
  var curname = name || '';
  newParamsList[index] = (0, _extends3.default)({}, newParamsList[index], {
    name: curname,
    params: curParams
  });
  return newParamsList;
}

var ModalPostman = (_temp = _class = function (_Component) {
  (0, _inherits3.default)(ModalPostman, _Component);

  function ModalPostman(props) {
    (0, _classCallCheck3.default)(this, ModalPostman);

    var _this = (0, _possibleConstructorReturn3.default)(this, _Component.call(this, props));

    _initialiseProps.call(_this);

    _this.state = {
      methodsShow: false,
      methodsShowMore: false,
      methodsList: [],
      constantInput: '',
      activeKey: '1',
      methodsParamsList: [{
        name: '',
        params: [],
        type: 'dataSource'
      }]
    };
    return _this;
  }

  ModalPostman.prototype.componentWillMount = function componentWillMount() {
    var inputValue = this.props.inputValue;

    this.setState({
      constantInput: inputValue
    });
    // this.props.inputValue && this.handleConstantsInput(this.props.inputValue, 0);
    inputValue && this.handleInitList(inputValue);
  };

  ModalPostman.prototype.handleInitList = function handleInitList(val) {
    var _this2 = this;

    val = val.replace(/^\{\{(.+)\}\}$/g, '$1');
    var valArr = val.split('|');

    if (valArr[0].indexOf('@') >= 0) {
      this.setState({
        activeKey: '2'
      });
    } else if (valArr[0].indexOf('$') >= 0) {
      this.setState({
        activeKey: '3'
      });
    }

    var paramsList = [{
      name: (0, _common.trim)(valArr[0]),
      params: [],
      type: 'dataSource'
    }];

    for (var i = 1; i < valArr.length; i++) {
      var nameArr = valArr[i].split(':');

      var paramArr = nameArr[1] && nameArr[1].split(',');
      paramArr = paramArr && paramArr.map(function (item) {
        return (0, _common.trim)(item);
      });
      var item = {
        name: (0, _common.trim)(nameArr[0]),
        params: paramArr || []
      };
      paramsList.push(item);
    }

    this.setState({
      methodsParamsList: paramsList
    }, function () {
      _this2.mockClick(valArr.length)();
    });
  };

  ModalPostman.prototype.mockClick = function mockClick(index) {
    var _this3 = this;

    return function (curname, params) {
      var newParamsList = closeRightTabsAndAddNewTab(_this3.state.methodsParamsList, index, curname, params);
      _this3.setState({
        methodsParamsList: newParamsList
      });
    };
  };
  //  处理常量输入


  // 方法


  //  处理表达式
  ModalPostman.prototype.handleValue = function handleValue(val) {
    return handleParamsValue(val, {});
  };

  // 处理错误


  ModalPostman.prototype.handleError = function handleError() {
    return _react2.default.createElement(_alert2.default, {
      message: '\u8BF7\u6C42\u201C\u53D8\u91CF\u96C6\u201D\u5C1A\u672A\u8FD0\u884C,\u6240\u4EE5\u6211\u4EEC\u65E0\u6CD5\u4ECE\u5176\u54CD\u5E94\u4E2D\u63D0\u53D6\u7684\u503C\u3002\u60A8\u53EF\u4EE5\u5728\u6D4B\u8BD5\u96C6\u5408\u4E2D\u6D4B\u8BD5\u8FD9\u4E9B\u53D8\u91CF\u3002',
      type: 'warning'
    });
  };

  // 初始化


  ModalPostman.prototype.setInit = function setInit() {
    var initParamsList = [{
      name: '',
      params: [],
      type: 'dataSource'
    }];
    this.setState({
      methodsParamsList: initParamsList
    });
  };
  // 处理取消插入


  // 处理插入

  // 处理面板切换


  ModalPostman.prototype.render = function render() {
    var _this4 = this;

    var _props = this.props,
        visible = _props.visible,
        envType = _props.envType;
    var _state = this.state,
        methodsParamsList = _state.methodsParamsList,
        constantInput = _state.constantInput;


    var outputParams = function outputParams() {
      var str = '';
      var length = methodsParamsList.length;
      methodsParamsList.forEach(function (item, index) {
        var isShow = item.name && length - 2 !== index;
        str += item.name;
        item.params.forEach(function (item, index) {
          var isParams = index > 0;
          str += isParams ? ' , ' : ' : ';
          str += item;
        });
        str += isShow ? ' | ' : '';
      });
      return '{{ ' + str + ' }}';
    };

    return _react2.default.createElement(
      _modal2.default,
      {
        title: _react2.default.createElement(
          'p',
          null,
          _react2.default.createElement(_icon2.default, { type: 'edit' }),
          ' \u9AD8\u7EA7\u53C2\u6570\u8BBE\u7F6E'
        ),
        visible: visible,
        onOk: function onOk() {
          return _this4.handleOk(outputParams());
        },
        onCancel: this.handleCancel,
        wrapClassName: 'modal-postman',
        width: 1024,
        maskClosable: false,
        okText: '\u63D2\u5165'
      },
      _react2.default.createElement(
        _row2.default,
        { className: 'modal-postman-form', type: 'flex' },
        methodsParamsList.map(function (item, index) {
          return item.type === 'dataSource' ? _react2.default.createElement(
            _col2.default,
            { span: 8, className: 'modal-postman-col', key: index },
            _react2.default.createElement(
              _collapse2.default,
              {
                className: 'modal-postman-collapse',
                activeKey: _this4.state.activeKey,
                onChange: _this4.handleCollapse,
                bordered: false,
                accordion: true
              },
              _react2.default.createElement(
                Panel,
                { header: _react2.default.createElement(
                    'h3',
                    { className: 'mock-title' },
                    '\u5E38\u91CF'
                  ), key: '1' },
                _react2.default.createElement(_input2.default, {
                  placeholder: '\u57FA\u7840\u53C2\u6570\u503C',
                  value: constantInput,
                  onChange: function onChange(e) {
                    return _this4.handleConstantsInput(e.target.value, index);
                  }
                })
              ),
              _react2.default.createElement(
                Panel,
                { header: _react2.default.createElement(
                    'h3',
                    { className: 'mock-title' },
                    'mock\u6570\u636E'
                  ), key: '2' },
                _react2.default.createElement(_MockList2.default, { click: _this4.mockClick(index), clickValue: item.name })
              ),
              envType === 'case' && _react2.default.createElement(
                Panel,
                {
                  header: _react2.default.createElement(
                    'h3',
                    { className: 'mock-title' },
                    '\u53D8\u91CF\xA0',
                    _react2.default.createElement(
                      _tooltip2.default,
                      {
                        placement: 'top',
                        title: 'YApi \u63D0\u4F9B\u4E86\u5F3A\u5927\u7684\u53D8\u91CF\u53C2\u6570\u529F\u80FD\uFF0C\u4F60\u53EF\u4EE5\u5728\u6D4B\u8BD5\u7684\u65F6\u5019\u4F7F\u7528\u524D\u9762\u63A5\u53E3\u7684 \u53C2\u6570 \u6216 \u8FD4\u56DE\u503C \u4F5C\u4E3A \u540E\u9762\u63A5\u53E3\u7684\u53C2\u6570\uFF0C\u5373\u4F7F\u63A5\u53E3\u4E4B\u95F4\u5B58\u5728\u4F9D\u8D56\uFF0C\u4E5F\u53EF\u4EE5\u8F7B\u677E \u4E00\u952E\u6D4B\u8BD5~'
                      },
                      _react2.default.createElement(_icon2.default, { type: 'question-circle-o' })
                    )
                  ),
                  key: '3'
                },
                _react2.default.createElement(_VariablesSelect2.default, {
                  id: _this4.props.id,
                  click: _this4.mockClick(index),
                  clickValue: item.name
                })
              )
            )
          ) : _react2.default.createElement(
            _col2.default,
            { span: 8, className: 'modal-postman-col', key: index },
            _react2.default.createElement(_this4.MethodsListSource, { index: index, value: item.name, params: item.params })
          );
        })
      ),
      _react2.default.createElement(
        _row2.default,
        { className: 'modal-postman-expression' },
        _react2.default.createElement(
          _col2.default,
          { span: 6 },
          _react2.default.createElement(
            'h3',
            { className: 'title' },
            '\u8868\u8FBE\u5F0F'
          )
        ),
        _react2.default.createElement(
          _col2.default,
          { span: 18 },
          _react2.default.createElement(
            'span',
            { className: 'expression-item' },
            outputParams()
          )
        )
      ),
      _react2.default.createElement(
        _row2.default,
        { className: 'modal-postman-preview' },
        _react2.default.createElement(
          _col2.default,
          { span: 6 },
          _react2.default.createElement(
            'h3',
            { className: 'title' },
            '\u9884\u89C8'
          )
        ),
        _react2.default.createElement(
          _col2.default,
          { span: 18 },
          _react2.default.createElement(
            'h3',
            null,
            this.handleValue(outputParams()) || outputParams() && this.handleError()
          )
        )
      )
    );
  };

  return ModalPostman;
}(_react.Component), _class.propTypes = {
  visible: _propTypes2.default.bool,
  handleCancel: _propTypes2.default.func,
  handleOk: _propTypes2.default.func,
  inputValue: _propTypes2.default.any,
  envType: _propTypes2.default.string,
  id: _propTypes2.default.number
}, _initialiseProps = function _initialiseProps() {
  var _this5 = this;

  this.handleConstantsInput = function (val) {
    val = val.replace(/^\{\{(.+)\}\}$/g, '$1');
    _this5.setState({
      constantInput: val
    });
    _this5.mockClick(0)(val);
  };

  this.handleParamsInput = function (e, clickIndex, paramsIndex) {
    var newParamsList = deepEqual(_this5.state.methodsParamsList);
    newParamsList[clickIndex].params[paramsIndex] = e;
    _this5.setState({
      methodsParamsList: newParamsList
    });
  };

  this.MethodsListSource = function (props) {
    return _react2.default.createElement(_MethodsList2.default, {
      click: _this5.mockClick(props.index),
      clickValue: props.value,
      params: props.params,
      paramsInput: _this5.handleParamsInput,
      clickIndex: props.index
    });
  };

  this.handleCancel = function () {
    _this5.setInit();
    _this5.props.handleCancel();
  };

  this.handleOk = function (installValue) {
    _this5.props.handleOk(installValue);
    _this5.setInit();
  };

  this.handleCollapse = function (key) {
    _this5.setState({
      activeKey: key
    });
  };
}, _temp);
exports.default = ModalPostman;