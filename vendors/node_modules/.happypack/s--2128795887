'use strict';

exports.__esModule = true;

var _message2 = require('antd/lib/message');

var _message3 = _interopRequireDefault(_message2);

var _typeof2 = require('babel-runtime/helpers/typeof');

var _typeof3 = _interopRequireDefault(_typeof2);

var _keys = require('babel-runtime/core-js/object/keys');

var _keys2 = _interopRequireDefault(_keys);

var _stringify = require('babel-runtime/core-js/json/stringify');

var _stringify2 = _interopRequireDefault(_stringify);

var _modal = require('antd/lib/modal');

var _modal2 = _interopRequireDefault(_modal);

var _inputNumber = require('antd/lib/input-number');

var _inputNumber2 = _interopRequireDefault(_inputNumber);

var _button = require('antd/lib/button');

var _button2 = _interopRequireDefault(_button);

var _switch = require('antd/lib/switch');

var _switch2 = _interopRequireDefault(_switch);

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _row = require('antd/lib/row');

var _row2 = _interopRequireDefault(_row);

var _icon = require('antd/lib/icon');

var _icon2 = _interopRequireDefault(_icon);

var _input = require('antd/lib/input');

var _input2 = _interopRequireDefault(_input);

var _col = require('antd/lib/col');

var _col2 = _interopRequireDefault(_col);

var _autoComplete = require('antd/lib/auto-complete');

var _autoComplete2 = _interopRequireDefault(_autoComplete);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _form = require('antd/lib/form');

var _form2 = _interopRequireDefault(_form);

var _select = require('antd/lib/select');

var _select2 = _interopRequireDefault(_select);

var _dec, _class, _class2, _temp, _initialiseProps;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _common = require('../../../client/common.js');

var _AceEditor = require('../../../client/components/AceEditor/AceEditor');

var _AceEditor2 = _interopRequireDefault(_AceEditor);

var _variable = require('../../../client/constants/variable.js');

var _variable2 = _interopRequireDefault(_variable);

var _index = require('../index.js');

require('./CaseDesModal.scss');

var _reactRedux = require('react-redux');

var _json = require('json5');

var _json2 = _interopRequireDefault(_json);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Option = _select2.default.Option;
var FormItem = _form2.default.Item;


var formItemLayout = {
  labelCol: { span: 5 },
  wrapperCol: { span: 12 }
};
var formItemLayoutWithOutLabel = {
  wrapperCol: { span: 12, offset: 5 }
};

var CaseDesForm = (_dec = (0, _reactRedux.connect)(function (state) {
  return {
    currInterface: state.inter.curdata
  };
}), _dec(_class = (_temp = _class2 = function (_Component) {
  (0, _inherits3.default)(CaseDesForm, _Component);

  function CaseDesForm(props) {
    (0, _classCallCheck3.default)(this, CaseDesForm);

    var _this = (0, _possibleConstructorReturn3.default)(this, _Component.call(this, props));

    _initialiseProps.call(_this);

    var caseData = _this.props.caseData;

    _this.state = _this.preProcess(caseData);
    return _this;
  }

  // 处理request_body编译器

  // 初始化输入数据


  // 处理参数编译器


  // 增加参数信息


  // 删除参数信息


  // 处理参数


  CaseDesForm.prototype.render = function render() {
    var _this2 = this;

    var _props$form = this.props.form,
        getFieldDecorator = _props$form.getFieldDecorator,
        getFieldValue = _props$form.getFieldValue;
    var _props = this.props,
        isAdd = _props.isAdd,
        visible = _props.visible,
        _onCancel = _props.onCancel;
    var _state = this.state,
        name = _state.name,
        code = _state.code,
        headers = _state.headers,
        ip = _state.ip,
        ip_enable = _state.ip_enable,
        params = _state.params,
        paramsArr = _state.paramsArr,
        paramsForm = _state.paramsForm,
        res_body = _state.res_body,
        delay = _state.delay;


    this.props.form.initialValue;
    var valuesTpl = function valuesTpl(values, title) {
      var dataSource = _this2.getParamsKey();
      var display = paramsForm === 'json' ? 'none' : '';
      return values.map(function (item, index) {
        return _react2.default.createElement(
          'div',
          { key: index, className: 'paramsArr', style: { display: display } },
          _react2.default.createElement(
            FormItem,
            (0, _extends3.default)({}, index === 0 ? formItemLayout : formItemLayoutWithOutLabel, {
              wrapperCol: index === 0 ? { span: 19 } : { span: 19, offset: 5 },
              label: index ? '' : title
            }),
            _react2.default.createElement(
              _row2.default,
              { gutter: 8 },
              _react2.default.createElement(
                _col2.default,
                { span: 10 },
                _react2.default.createElement(
                  FormItem,
                  null,
                  getFieldDecorator('paramsArr[' + index + '].name', { initialValue: item.name })(_react2.default.createElement(_autoComplete2.default, {
                    dataSource: dataSource,
                    placeholder: '\u53C2\u6570\u540D\u79F0',
                    filterOption: function filterOption(inputValue, option) {
                      return option.props.children.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1;
                    }
                  }))
                )
              ),
              _react2.default.createElement(
                _col2.default,
                { span: 10 },
                _react2.default.createElement(
                  FormItem,
                  null,
                  getFieldDecorator('paramsArr[' + index + '].value', { initialValue: item.value })(_react2.default.createElement(_input2.default, { placeholder: '\u53C2\u6570\u503C' }))
                )
              ),
              _react2.default.createElement(
                _col2.default,
                { span: 4 },
                values.length > 1 ? _react2.default.createElement(_icon2.default, {
                  className: 'dynamic-delete-button',
                  type: 'minus-circle-o',
                  onClick: function onClick() {
                    return _this2.removeValues('paramsArr', index);
                  }
                }) : null
              )
            )
          )
        );
      });
    };
    var headersTpl = function headersTpl(values, title) {
      var dataSource = _variable2.default.HTTP_REQUEST_HEADER;
      return values.map(function (item, index) {
        return _react2.default.createElement(
          'div',
          { key: index, className: 'headers' },
          _react2.default.createElement(
            FormItem,
            (0, _extends3.default)({}, index === 0 ? formItemLayout : formItemLayoutWithOutLabel, {
              wrapperCol: index === 0 ? { span: 19 } : { span: 19, offset: 5 },
              label: index ? '' : title
            }),
            _react2.default.createElement(
              _row2.default,
              { gutter: 8 },
              _react2.default.createElement(
                _col2.default,
                { span: 10 },
                _react2.default.createElement(
                  FormItem,
                  null,
                  getFieldDecorator('headers[' + index + '].name', { initialValue: item.name })(_react2.default.createElement(_autoComplete2.default, {
                    dataSource: dataSource,
                    placeholder: '\u53C2\u6570\u540D\u79F0',
                    filterOption: function filterOption(inputValue, option) {
                      return option.props.children.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1;
                    }
                  }))
                )
              ),
              _react2.default.createElement(
                _col2.default,
                { span: 10 },
                _react2.default.createElement(
                  FormItem,
                  null,
                  getFieldDecorator('headers[' + index + '].value', { initialValue: item.value })(_react2.default.createElement(_input2.default, { placeholder: '\u53C2\u6570\u503C' }))
                )
              ),
              _react2.default.createElement(
                _col2.default,
                { span: 4 },
                values.length > 1 ? _react2.default.createElement(_icon2.default, {
                  className: 'dynamic-delete-button',
                  type: 'minus-circle-o',
                  onClick: function onClick() {
                    return _this2.removeValues('headers', index);
                  }
                }) : null
              )
            )
          )
        );
      });
    };
    return _react2.default.createElement(
      _modal2.default,
      {
        title: isAdd ? '添加期望' : '编辑期望',
        visible: visible,
        maskClosable: false,
        onOk: this.handleOk,
        width: 780,
        onCancel: function onCancel() {
          return _onCancel();
        },
        afterClose: function afterClose() {
          return _this2.setState({ paramsForm: 'form' });
        },
        className: 'case-des-modal'
      },
      _react2.default.createElement(
        _form2.default,
        { onSubmit: this.handleOk },
        _react2.default.createElement(
          'h2',
          { className: 'sub-title', style: { marginTop: 0 } },
          '\u57FA\u672C\u4FE1\u606F'
        ),
        _react2.default.createElement(
          FormItem,
          (0, _extends3.default)({}, formItemLayout, { label: '\u671F\u671B\u540D\u79F0' }),
          getFieldDecorator('name', {
            initialValue: name,
            rules: [{ required: true, message: '请输入期望名称！' }]
          })(_react2.default.createElement(_input2.default, { placeholder: '\u8BF7\u8F93\u5165\u671F\u671B\u540D\u79F0' }))
        ),
        _react2.default.createElement(
          FormItem,
          (0, _extends3.default)({}, formItemLayout, { label: 'IP \u8FC7\u6EE4', className: 'ip-filter' }),
          _react2.default.createElement(
            _col2.default,
            { span: 6, className: 'ip-switch' },
            _react2.default.createElement(
              FormItem,
              null,
              getFieldDecorator('ip_enable', {
                initialValue: ip_enable,
                valuePropName: 'checked',
                rules: [{ type: 'boolean' }]
              })(_react2.default.createElement(_switch2.default, null))
            )
          ),
          _react2.default.createElement(
            _col2.default,
            { span: 18 },
            _react2.default.createElement(
              'div',
              { style: { display: getFieldValue('ip_enable') ? '' : 'none' }, className: 'ip' },
              _react2.default.createElement(
                FormItem,
                null,
                getFieldDecorator('ip', getFieldValue('ip_enable') ? {
                  initialValue: ip,
                  rules: [{
                    pattern: _variable2.default.IP_REGEXP,
                    message: '请填写正确的 IP 地址',
                    required: true
                  }]
                } : {})(_react2.default.createElement(_input2.default, { placeholder: '\u8BF7\u8F93\u5165\u8FC7\u6EE4\u7684 IP \u5730\u5740' }))
              )
            )
          )
        ),
        _react2.default.createElement(
          _row2.default,
          { className: 'params-form', style: { marginBottom: 8 } },
          _react2.default.createElement(
            _col2.default,
            { span: 12, offset: 5 },
            _react2.default.createElement(_switch2.default, {
              size: 'small',
              checkedChildren: 'JSON',
              unCheckedChildren: 'JSON',
              checked: paramsForm === 'json',
              onChange: function onChange(bool) {
                _this2.setState({ paramsForm: bool ? 'json' : 'form' });
              }
            })
          )
        ),
        valuesTpl(paramsArr, '参数过滤'),
        _react2.default.createElement(
          FormItem,
          {
            wrapperCol: { span: 6, offset: 5 },
            style: { display: paramsForm === 'form' ? '' : 'none' }
          },
          _react2.default.createElement(
            _button2.default,
            {
              size: 'default',
              type: 'primary',
              onClick: function onClick() {
                return _this2.addValues('paramsArr');
              },
              style: { width: '100%' }
            },
            _react2.default.createElement(_icon2.default, { type: 'plus' }),
            ' \u6DFB\u52A0\u53C2\u6570'
          )
        ),
        _react2.default.createElement(
          FormItem,
          (0, _extends3.default)({}, formItemLayout, {
            wrapperCol: { span: 17 },
            label: '\u53C2\u6570\u8FC7\u6EE4',
            style: { display: paramsForm === 'form' ? 'none' : '' }
          }),
          _react2.default.createElement(_AceEditor2.default, { className: 'pretty-editor', data: params, onChange: this.handleParams }),
          _react2.default.createElement(
            FormItem,
            null,
            getFieldDecorator('params', paramsForm === 'json' ? {
              rules: [{ validator: this.jsonValidator, message: '请输入正确的 JSON 字符串！' }]
            } : {})(_react2.default.createElement(_input2.default, { style: { display: 'none' } }))
          )
        ),
        _react2.default.createElement(
          'h2',
          { className: 'sub-title' },
          '\u54CD\u5E94'
        ),
        _react2.default.createElement(
          FormItem,
          (0, _extends3.default)({}, formItemLayout, { required: true, label: 'HTTP Code' }),
          getFieldDecorator('code', {
            initialValue: code
          })(_react2.default.createElement(
            _select2.default,
            { showSearch: true },
            _index.httpCodes.map(function (code) {
              return _react2.default.createElement(
                Option,
                { key: '' + code, value: '' + code },
                '' + code
              );
            })
          ))
        ),
        _react2.default.createElement(
          FormItem,
          (0, _extends3.default)({}, formItemLayout, { label: '\u5EF6\u65F6' }),
          getFieldDecorator('delay', {
            initialValue: delay,
            rules: [{ required: true, message: '请输入延时时间！', type: 'integer' }]
          })(_react2.default.createElement(_inputNumber2.default, { placeholder: '\u8BF7\u8F93\u5165\u5EF6\u65F6\u65F6\u95F4', min: 0 })),
          _react2.default.createElement(
            'span',
            null,
            'ms'
          )
        ),
        headersTpl(headers, 'HTTP 头'),
        _react2.default.createElement(
          FormItem,
          { wrapperCol: { span: 6, offset: 5 } },
          _react2.default.createElement(
            _button2.default,
            {
              size: 'default',
              type: 'primary',
              onClick: function onClick() {
                return _this2.addValues('headers');
              },
              style: { width: '100%' }
            },
            _react2.default.createElement(_icon2.default, { type: 'plus' }),
            ' \u6DFB\u52A0 HTTP \u5934'
          )
        ),
        _react2.default.createElement(
          FormItem,
          (0, _extends3.default)({}, formItemLayout, { wrapperCol: { span: 17 }, label: 'Body', required: true }),
          _react2.default.createElement(
            FormItem,
            null,
            _react2.default.createElement(_AceEditor2.default, {
              className: 'pretty-editor',
              data: res_body,
              mode: this.props.currInterface.res_body_type === 'json' ? null : 'text',
              onChange: this.handleRequestBody
            })
          )
        )
      )
    );
  };

  return CaseDesForm;
}(_react.Component), _class2.propTypes = {
  form: _propTypes2.default.object,
  caseData: _propTypes2.default.object,
  currInterface: _propTypes2.default.object,
  onOk: _propTypes2.default.func,
  onCancel: _propTypes2.default.func,
  isAdd: _propTypes2.default.bool,
  visible: _propTypes2.default.bool
}, _initialiseProps = function _initialiseProps() {
  var _this3 = this;

  this.preProcess = function (caseData) {
    try {
      caseData = JSON.parse((0, _stringify2.default)(caseData));
    } catch (error) {
      console.log(error);
    }

    var initCaseData = {
      ip: '',
      ip_enable: false,
      name: '',
      code: '200',
      delay: 0,
      headers: [{ name: '', value: '' }],
      paramsArr: [{ name: '', value: '' }],
      params: {},
      res_body: '',
      paramsForm: 'form'
    };
    caseData.params = caseData.params || {};
    var paramsArr = (0, _keys2.default)(caseData.params).length ? (0, _keys2.default)(caseData.params).map(function (key) {
      return { name: key, value: caseData.params[key] };
    }).filter(function (item) {
      if ((0, _typeof3.default)(item.value) === 'object') {
        // this.setState({ paramsForm: 'json' })
        caseData.paramsForm = 'json';
      }
      return (0, _typeof3.default)(item.value) !== 'object';
    }) : [{ name: '', value: '' }];
    var headers = caseData.headers && caseData.headers.length ? caseData.headers : [{ name: '', value: '' }];
    caseData.code = '' + caseData.code;
    caseData.params = (0, _stringify2.default)(caseData.params, null, 2);

    caseData = (0, _common.safeAssign)(initCaseData, (0, _extends3.default)({}, caseData, { headers: headers, paramsArr: paramsArr }));

    return caseData;
  };

  this.handleRequestBody = function (d) {
    _this3.setState({ res_body: d.text });
  };

  this.handleParams = function (d) {
    _this3.setState({ params: d.text });
  };

  this.addValues = function (key) {
    var _this3$setState;

    var getFieldValue = _this3.props.form.getFieldValue;

    var values = getFieldValue(key);
    values = values.concat({ name: '', value: '' });
    _this3.setState((_this3$setState = {}, _this3$setState[key] = values, _this3$setState));
  };

  this.removeValues = function (key, index) {
    var _setFieldsValue, _this3$setState2;

    var _props$form2 = _this3.props.form,
        setFieldsValue = _props$form2.setFieldsValue,
        getFieldValue = _props$form2.getFieldValue;

    var values = getFieldValue(key);
    values = values.filter(function (val, index2) {
      return index !== index2;
    });
    setFieldsValue((_setFieldsValue = {}, _setFieldsValue[key] = values, _setFieldsValue));
    _this3.setState((_this3$setState2 = {}, _this3$setState2[key] = values, _this3$setState2));
  };

  this.getParamsKey = function () {
    var _props$currInterface = _this3.props.currInterface,
        req_query = _props$currInterface.req_query,
        req_body_form = _props$currInterface.req_body_form,
        req_body_type = _props$currInterface.req_body_type,
        method = _props$currInterface.method,
        req_body_other = _props$currInterface.req_body_other,
        req_body_is_json_schema = _props$currInterface.req_body_is_json_schema,
        req_params = _props$currInterface.req_params;

    var keys = [];
    req_query && Array.isArray(req_query) && req_query.forEach(function (item) {
      keys.push(item.name);
    });
    req_params && Array.isArray(req_params) && req_params.forEach(function (item) {
      keys.push(item.name);
    });

    if (_variable2.default.HTTP_METHOD[method.toUpperCase()].request_body && req_body_type === 'form') {
      req_body_form && Array.isArray(req_body_form) && req_body_form.forEach(function (item) {
        keys.push(item.name);
      });
    } else if (_variable2.default.HTTP_METHOD[method.toUpperCase()].request_body && req_body_type === 'json' && req_body_other) {
      var bodyObj = void 0;
      try {
        // 针对json-schema的处理
        if (req_body_is_json_schema) {
          bodyObj = _json2.default.parse(_this3.props.caseData.req_body_other);
        } else {
          bodyObj = _json2.default.parse(req_body_other);
        }

        keys = keys.concat((0, _keys2.default)(bodyObj));
      } catch (error) {
        console.log(error);
      }
    }
    return keys;
  };

  this.endProcess = function (caseData) {
    var headers = [];
    var params = {};
    var paramsForm = _this3.state.paramsForm;

    caseData.headers && Array.isArray(caseData.headers) && caseData.headers.forEach(function (item) {
      if (item.name) {
        headers.push({
          name: item.name,
          value: item.value
        });
      }
    });
    caseData.paramsArr && Array.isArray(caseData.paramsArr) && caseData.paramsArr.forEach(function (item) {
      if (item.name) {
        params[item.name] = item.value;
      }
    });
    caseData.headers = headers;
    if (paramsForm === 'form') {
      caseData.params = params;
    } else {
      try {
        caseData.params = _json2.default.parse(caseData.params);
      } catch (error) {
        console.log(error);
        _message3.default.error('请求参数 json 格式有误，请修改');
        return false;
      }
    }
    delete caseData.paramsArr;

    return caseData;
  };

  this.handleOk = function () {
    var form = _this3.props.form;
    form.validateFieldsAndScroll(function (err, values) {
      if (!err) {
        values.res_body = _this3.state.res_body;
        values.params = _this3.state.params;
        _this3.props.onOk(_this3.endProcess(values));
      }
    });
  };
}, _temp)) || _class);


var CaseDesModal = _form2.default.create()(CaseDesForm);
exports.default = CaseDesModal;