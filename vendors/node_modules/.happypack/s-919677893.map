{"version":3,"sources":["client\\containers\\Login\\Login.js"],"names":["FormItem","Item","RadioGroup","Group","formItemStyle","marginBottom","changeHeight","height","Login","loginData","state","user","isLDAP","loginActions","loginLdapActions","withRouter","props","handleSubmit","e","preventDefault","form","validateFields","err","values","loginType","then","res","payload","data","errcode","history","replace","success","handleFormLayoutChange","setState","target","value","componentDidMount","console","log","render","getFieldDecorator","emailRule","required","message","pattern","rules","fontSize","Component","propTypes","PropTypes","object","func","bool","LoginForm","create"],"mappings":"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","file":"Login.js","sourceRoot":"C:/Users/DUOYI/Desktop/api/test/vendors","sourcesContent":["import React, { PureComponent as Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Form, Button, Input, Icon, message, Radio } from 'antd';\nimport { loginActions, loginLdapActions } from '../../reducer/modules/user';\nimport { withRouter } from 'react-router';\nconst FormItem = Form.Item;\nconst RadioGroup = Radio.Group;\n\nimport './Login.scss';\n\nconst formItemStyle = {\n  marginBottom: '.16rem'\n};\n\nconst changeHeight = {\n  height: '.42rem'\n};\n\n@connect(\n  state => {\n    return {\n      loginData: state.user,\n      isLDAP: state.user.isLDAP\n    };\n  },\n  {\n    loginActions,\n    loginLdapActions\n  }\n)\n@withRouter\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loginType: 'ldap'\n    };\n  }\n\n  static propTypes = {\n    form: PropTypes.object,\n    history: PropTypes.object,\n    loginActions: PropTypes.func,\n    loginLdapActions: PropTypes.func,\n    isLDAP: PropTypes.bool\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const form = this.props.form;\n    form.validateFields((err, values) => {\n      if (!err) {\n        if (this.props.isLDAP && this.state.loginType === 'ldap') {\n          this.props.loginLdapActions(values).then(res => {\n            if (res.payload.data.errcode == 0) {\n              this.props.history.replace('/group');\n              message.success('登录成功! ');\n            }\n          });\n        } else {\n          this.props.loginActions(values).then(res => {\n            if (res.payload.data.errcode == 0) {\n              this.props.history.replace('/group');\n              message.success('登录成功! ');\n            }\n          });\n        }\n      }\n    });\n  };\n\n  componentDidMount() {\n    //Qsso.attach('qsso-login','/api/user/login_by_token')\n    console.log('isLDAP', this.props.isLDAP);\n  }\n  handleFormLayoutChange = e => {\n    this.setState({ loginType: e.target.value });\n  };\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n\n    const { isLDAP } = this.props;\n\n    const emailRule =\n      this.state.loginType === 'ldap'\n        ? {}\n        : {\n            required: true,\n            message: '请输入正确的email!',\n            pattern: /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{1,})+$/\n          };\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        {/* 登录类型 (普通登录／LDAP登录) */}\n        {isLDAP && (\n          <FormItem>\n            <RadioGroup defaultValue=\"ldap\" onChange={this.handleFormLayoutChange}>\n              <Radio value=\"ldap\">LDAP</Radio>\n              <Radio value=\"normal\">普通登录</Radio>\n            </RadioGroup>\n          </FormItem>\n        )}\n        {/* 用户名 (Email) */}\n        <FormItem style={formItemStyle}>\n          {getFieldDecorator('email', { rules: [emailRule] })(\n            <Input\n              style={changeHeight}\n              prefix={<Icon type=\"user\" style={{ fontSize: 13 }} />}\n              placeholder=\"Email\"\n            />\n          )}\n        </FormItem>\n\n        {/* 密码 */}\n        <FormItem style={formItemStyle}>\n          {getFieldDecorator('password', {\n            rules: [{ required: true, message: '请输入密码!' }]\n          })(\n            <Input\n              style={changeHeight}\n              prefix={<Icon type=\"lock\" style={{ fontSize: 13 }} />}\n              type=\"password\"\n              placeholder=\"Password\"\n            />\n          )}\n        </FormItem>\n\n        {/* 登录按钮 */}\n        <FormItem style={formItemStyle}>\n          <Button\n            style={changeHeight}\n            type=\"primary\"\n            htmlType=\"submit\"\n            className=\"login-form-button\"\n          >\n            登录\n          </Button>\n        </FormItem>\n\n        {/* <div className=\"qsso-breakline\">\n          <span className=\"qsso-breakword\">或</span>\n        </div>\n        <Button style={changeHeight} id=\"qsso-login\" type=\"primary\" className=\"login-form-button\" size=\"large\" ghost>QSSO登录</Button> */}\n      </Form>\n    );\n  }\n}\nconst LoginForm = Form.create()(Login);\nexport default LoginForm;\n"]}