'use strict';

exports.__esModule = true;

var _button = require('antd/lib/button');

var _button2 = _interopRequireDefault(_button);

var _input = require('antd/lib/input');

var _input2 = _interopRequireDefault(_input);

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _select = require('antd/lib/select');

var _select2 = _interopRequireDefault(_select);

var _form = require('antd/lib/form');

var _form2 = _interopRequireDefault(_form);

var _keys = require('babel-runtime/core-js/object/keys');

var _keys2 = _interopRequireDefault(_keys);

var _class, _temp2;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _variable = require('../../../../constants/variable.js');

var _variable2 = _interopRequireDefault(_variable);

var _common = require('../../../../common.js');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var HTTP_METHOD = _variable2.default.HTTP_METHOD;
var HTTP_METHOD_KEYS = (0, _keys2.default)(HTTP_METHOD);

var FormItem = _form2.default.Item;
var Option = _select2.default.Option;
function hasErrors(fieldsError) {
  return (0, _keys2.default)(fieldsError).some(function (field) {
    return fieldsError[field];
  });
}

var AddInterfaceForm = (_temp2 = _class = function (_Component) {
  (0, _inherits3.default)(AddInterfaceForm, _Component);

  function AddInterfaceForm() {
    var _temp, _this, _ret;

    (0, _classCallCheck3.default)(this, AddInterfaceForm);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.handleSubmit = function (e) {
      e.preventDefault();
      _this.props.form.validateFields(function (err, values) {
        if (!err) {
          _this.props.onSubmit(values, function () {
            _this.props.form.resetFields();
          });
        }
      });
    }, _this.handlePath = function (e) {
      var val = e.target.value;
      _this.props.form.setFieldsValue({
        path: (0, _common.handleApiPath)(val)
      });
    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
  }

  AddInterfaceForm.prototype.render = function render() {
    var _props$form = this.props.form,
        getFieldDecorator = _props$form.getFieldDecorator,
        getFieldsError = _props$form.getFieldsError;

    var prefixSelector = getFieldDecorator('method', {
      initialValue: 'GET'
    })(_react2.default.createElement(
      _select2.default,
      { style: { width: 75 } },
      HTTP_METHOD_KEYS.map(function (item) {
        return _react2.default.createElement(
          Option,
          { key: item, value: item },
          item
        );
      })
    ));
    var formItemLayout = {
      labelCol: {
        xs: { span: 24 },
        sm: { span: 6 }
      },
      wrapperCol: {
        xs: { span: 24 },
        sm: { span: 14 }
      }
    };

    return _react2.default.createElement(
      _form2.default,
      { onSubmit: this.handleSubmit },
      _react2.default.createElement(
        FormItem,
        (0, _extends3.default)({}, formItemLayout, {
          label: '\u63A5\u53E3\u5206\u7C7B'
        }),
        getFieldDecorator('catid', {
          initialValue: this.props.catid ? this.props.catid + '' : this.props.catdata[0]._id + ''
        })(_react2.default.createElement(
          _select2.default,
          null,
          this.props.catdata.map(function (item) {
            return _react2.default.createElement(
              Option,
              { key: item._id, value: item._id + "" },
              item.name
            );
          })
        ))
      ),
      _react2.default.createElement(
        FormItem,
        (0, _extends3.default)({}, formItemLayout, {
          label: '\u63A5\u53E3\u540D\u79F0'
        }),
        getFieldDecorator('title', {
          rules: (0, _common.nameLengthLimit)('接口')
        })(_react2.default.createElement(_input2.default, { placeholder: '\u63A5\u53E3\u540D\u79F0' }))
      ),
      _react2.default.createElement(
        FormItem,
        (0, _extends3.default)({}, formItemLayout, {
          label: '\u63A5\u53E3\u8DEF\u5F84'
        }),
        getFieldDecorator('path', {
          rules: [{
            required: true, message: '请输入接口路径!'
          }]
        })(_react2.default.createElement(_input2.default, { onBlur: this.handlePath, addonBefore: prefixSelector, placeholder: '/path' }))
      ),
      _react2.default.createElement(
        FormItem,
        (0, _extends3.default)({}, formItemLayout, {
          label: '\u6CE8'
        }),
        _react2.default.createElement(
          'span',
          { style: { color: "#929292" } },
          '\u8BE6\u7EC6\u7684\u63A5\u53E3\u6570\u636E\u53EF\u4EE5\u5728\u7F16\u8F91\u9875\u9762\u4E2D\u6DFB\u52A0'
        )
      ),
      _react2.default.createElement(
        FormItem,
        { className: 'catModalfoot', wrapperCol: { span: 24, offset: 8 } },
        _react2.default.createElement(
          _button2.default,
          { onClick: this.props.onCancel, style: { marginRight: "10px" } },
          '\u53D6\u6D88'
        ),
        _react2.default.createElement(
          _button2.default,
          {
            type: 'primary',
            htmlType: 'submit',
            disabled: hasErrors(getFieldsError())
          },
          '\u63D0\u4EA4'
        )
      )
    );
  };

  return AddInterfaceForm;
}(_react.PureComponent), _class.propTypes = {
  form: _propTypes2.default.object,
  onSubmit: _propTypes2.default.func,
  onCancel: _propTypes2.default.func,
  catid: _propTypes2.default.number,
  catdata: _propTypes2.default.array
}, _temp2);
exports.default = _form2.default.create()(AddInterfaceForm);