'use strict';

exports.__esModule = true;
exports.default = exports.InsertCodeMap = undefined;

var _row = require('antd/lib/row');

var _row2 = _interopRequireDefault(_row);

var _col = require('antd/lib/col');

var _col2 = _interopRequireDefault(_col);

var _switch = require('antd/lib/switch');

var _switch2 = _interopRequireDefault(_switch);

var _tabs = require('antd/lib/tabs');

var _tabs2 = _interopRequireDefault(_tabs);

var _spin = require('antd/lib/spin');

var _spin2 = _interopRequireDefault(_spin);

var _alert = require('antd/lib/alert');

var _alert2 = _interopRequireDefault(_alert);

var _checkbox = require('antd/lib/checkbox');

var _checkbox2 = _interopRequireDefault(_checkbox);

var _icon = require('antd/lib/icon');

var _icon2 = _interopRequireDefault(_icon);

var _button = require('antd/lib/button');

var _button2 = _interopRequireDefault(_button);

var _keys = require('babel-runtime/core-js/object/keys');

var _keys2 = _interopRequireDefault(_keys);

var _modal = require('antd/lib/modal');

var _modal2 = _interopRequireDefault(_modal);

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _stringify = require('babel-runtime/core-js/json/stringify');

var _stringify2 = _interopRequireDefault(_stringify);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _typeof2 = require('babel-runtime/helpers/typeof');

var _typeof3 = _interopRequireDefault(_typeof2);

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _tooltip = require('antd/lib/tooltip');

var _tooltip2 = _interopRequireDefault(_tooltip);

var _collapse = require('antd/lib/collapse');

var _collapse2 = _interopRequireDefault(_collapse);

var _select = require('antd/lib/select');

var _select2 = _interopRequireDefault(_select);

var _input = require('antd/lib/input');

var _input2 = _interopRequireDefault(_input);

var _class, _temp;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _variable = require('../../constants/variable.js');

var _variable2 = _interopRequireDefault(_variable);

var _AceEditor = require('../../components/AceEditor/AceEditor');

var _AceEditor2 = _interopRequireDefault(_AceEditor);

var _underscore = require('underscore');

var _underscore2 = _interopRequireDefault(_underscore);

var _common = require('../../common.js');

var _axios = require('axios');

var _axios2 = _interopRequireDefault(_axios);

var _index = require('../ModalPostman/index.js');

var _index2 = _interopRequireDefault(_index);

var _CheckCrossInstall = require('./CheckCrossInstall.js');

var _CheckCrossInstall2 = _interopRequireDefault(_CheckCrossInstall);

require('./Postman.scss');

var _index3 = require('../../containers/Project/Setting/ProjectEnv/index.js');

var _index4 = _interopRequireDefault(_index3);

var _json = require('json5');

var _json2 = _interopRequireDefault(_json);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _require = require('../../../common/utils.js'),
    handleParamsValue = _require.handleParamsValue,
    ArrayToObject = _require.ArrayToObject,
    schemaValidator = _require.schemaValidator;

var _require2 = require('../../../common/postmanLib.js'),
    handleParams = _require2.handleParams,
    checkRequestBodyIsRaw = _require2.checkRequestBodyIsRaw,
    handleContentType = _require2.handleContentType,
    crossRequest = _require2.crossRequest,
    checkNameIsExistInArray = _require2.checkNameIsExistInArray;

var createContext = require('../../../common/createContext');

var HTTP_METHOD = _variable2.default.HTTP_METHOD;
var InputGroup = _input2.default.Group;
var Option = _select2.default.Option;
var Panel = _collapse2.default.Panel;

var InsertCodeMap = exports.InsertCodeMap = [{
  code: 'assert.equal(status, 200)',
  title: '断言 httpCode 等于 200'
}, {
  code: 'assert.equal(body.code, 0)',
  title: '断言返回数据 code 是 0'
}, {
  code: 'assert.notEqual(status, 404)',
  title: '断言 httpCode 不是 404'
}, {
  code: 'assert.notEqual(body.code, 40000)',
  title: '断言返回数据 code 不是 40000'
}, {
  code: 'assert.deepEqual(body, {"code": 0})',
  title: '断言对象 body 等于 {"code": 0}'
}, {
  code: 'assert.notDeepEqual(body, {"code": 0})',
  title: '断言对象 body 不等于 {"code": 0}'
}];

var ParamsNameComponent = function ParamsNameComponent(props) {
  var example = props.example,
      desc = props.desc,
      name = props.name;

  var isNull = !example && !desc;
  var TooltipTitle = function TooltipTitle() {
    return _react2.default.createElement(
      'div',
      null,
      example && _react2.default.createElement(
        'div',
        null,
        '\u793A\u4F8B\uFF1A ',
        _react2.default.createElement(
          'span',
          { className: 'table-desc' },
          example
        )
      ),
      desc && _react2.default.createElement(
        'div',
        null,
        '\u5907\u6CE8\uFF1A ',
        _react2.default.createElement(
          'span',
          { className: 'table-desc' },
          desc
        )
      )
    );
  };

  return _react2.default.createElement(
    'div',
    null,
    isNull ? _react2.default.createElement(_input2.default, { disabled: true, value: name, className: 'key' }) : _react2.default.createElement(
      _tooltip2.default,
      { placement: 'topLeft', title: _react2.default.createElement(TooltipTitle, null) },
      _react2.default.createElement(_input2.default, { disabled: true, value: name, className: 'key' })
    )
  );
};
ParamsNameComponent.propTypes = {
  example: _propTypes2.default.string,
  desc: _propTypes2.default.string,
  name: _propTypes2.default.string
};
var Run = (_temp = _class = function (_Component) {
  (0, _inherits3.default)(Run, _Component);

  function Run(props) {
    var _this2 = this;

    (0, _classCallCheck3.default)(this, Run);

    var _this = (0, _possibleConstructorReturn3.default)(this, _Component.call(this, props));

    _this.handleReqHeader = function (value, env) {
      var index = value ? env.findIndex(function (item) {
        return item.name === value;
      }) : 0;
      index = index === -1 ? 0 : index;

      var req_header = [].concat(_this.props.data.req_headers || []);
      var header = [].concat(env[index].header || []);
      header.forEach(function (item) {
        if (!checkNameIsExistInArray(item.name, req_header)) {
          item = (0, _extends3.default)({}, item, {
            abled: true
          });
          req_header.push(item);
        }
      });
      req_header = req_header.filter(function (item) {
        return item && (typeof item === 'undefined' ? 'undefined' : (0, _typeof3.default)(item)) === 'object';
      });
      return req_header;
    };

    _this.selectDomain = function (value) {
      var headers = _this.handleReqHeader(value, _this.state.env);
      _this.setState({
        case_env: value,
        req_headers: headers
      });
    };

    _this.onOpenTest = function (d) {
      _this.setState({
        test_script: d.text
      });
    };

    _this.handleInsertCode = function (code) {
      _this.aceEditor.editor.insertCode(code);
    };

    _this.handleRequestBody = function (d) {
      _this.setState({
        req_body_other: d.text
      });
    };

    _this.reqRealInterface = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee() {
      var options, result, tempJson, validResult;
      return _regenerator2.default.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              if (!(_this.state.loading === true)) {
                _context.next = 3;
                break;
              }

              _this.setState({
                loading: false
              });
              return _context.abrupt('return', null);

            case 3:
              _this.setState({
                loading: true
              });

              options = handleParams(_this.state, _this.handleValue), result = void 0;
              _context.prev = 5;

              options.taskId = _this.props.curUid;
              _context.next = 9;
              return crossRequest(options, _this.state.pre_script, _this.state.after_script, createContext(_this.props.curUid, _this.props.projectId, _this.props.interfaceId));

            case 9:
              result = _context.sent;

              result = {
                header: result.res.header,
                body: result.res.body,
                status: result.res.status,
                statusText: result.res.statusText,
                runTime: result.runTime
              };
              _context.next = 16;
              break;

            case 13:
              _context.prev = 13;
              _context.t0 = _context['catch'](5);

              result = {
                header: _context.t0.header,
                body: _context.t0.body,
                status: null,
                statusText: _context.t0.message
              };

            case 16:
              if (!(_this.state.loading === true)) {
                _context.next = 20;
                break;
              }

              _this.setState({
                loading: false
              });
              _context.next = 21;
              break;

            case 20:
              return _context.abrupt('return', null);

            case 21:
              tempJson = result.body;

              if (tempJson && (typeof tempJson === 'undefined' ? 'undefined' : (0, _typeof3.default)(tempJson)) === 'object') {
                result.body = (0, _stringify2.default)(tempJson, null, '  ');
                _this.setState({
                  res_body_type: 'json'
                });
              } else if ((0, _common.isJson)(result.body)) {
                _this.setState({
                  res_body_type: 'json'
                });
              }

              // 对 返回值数据结构 和定义的 返回数据结构 进行 格式校验
              validResult = _this.resBodyValidator(_this.props.data, result.body);

              if (!validResult.valid) {
                _this.setState({ test_valid_msg: '\u8FD4\u56DE\u53C2\u6570 ' + validResult.message });
              } else {
                _this.setState({ test_valid_msg: '' });
              }

              _this.setState({
                resStatusCode: result.status,
                resStatusText: result.statusText,
                test_res_header: result.header,
                test_res_body: result.body
              });

            case 26:
            case 'end':
              return _context.stop();
          }
        }
      }, _callee, _this2, [[5, 13]]);
    }));

    _this.resBodyValidator = function (interfaceData, test_res_body) {
      var res_body_type = interfaceData.res_body_type,
          res_body_is_json_schema = interfaceData.res_body_is_json_schema,
          res_body = interfaceData.res_body;

      var validResult = { valid: true };

      if (res_body_type === 'json' && res_body_is_json_schema) {
        var schema = (0, _common.json5_parse)(res_body);
        var params = (0, _common.json5_parse)(test_res_body);
        validResult = schemaValidator(schema, params);
      }

      return validResult;
    };

    _this.changeParam = function (name, v, index, key) {
      var _this$setState;

      key = key || 'value';
      var pathParam = (0, _common.deepCopyJson)(_this.state[name]);

      pathParam[index][key] = v;
      if (key === 'value') {
        pathParam[index].enable = !!v;
      }
      _this.setState((_this$setState = {}, _this$setState[name] = pathParam, _this$setState));
    };

    _this.changeBody = function (v, index, key) {
      var bodyForm = (0, _common.deepCopyJson)(_this.state.req_body_form);
      key = key || 'value';
      if (key === 'value') {
        bodyForm[index].enable = !!v;
        if (bodyForm[index].type === 'file') {
          bodyForm[index].value = 'file_' + index;
        } else {
          bodyForm[index].value = v;
        }
      } else if (key === 'enable') {
        bodyForm[index].enable = v;
      }
      _this.setState({ req_body_form: bodyForm });
    };

    _this.showModal = function (val, index, type) {
      var inputValue = '';
      var cursurPosition = void 0;
      if (type === 'req_body_other') {
        // req_body
        var editor = _this.aceEditor.editor.editor;
        cursurPosition = editor.session.doc.positionToIndex(editor.selection.getCursor());
        // 获取选中的数据
        inputValue = _this.getInstallValue(val || '', cursurPosition).val;
      } else {
        // 其他input 输入
        var oTxt1 = document.getElementById(type + '_' + index);
        cursurPosition = oTxt1.selectionStart;
        inputValue = _this.getInstallValue(val || '', cursurPosition).val;
        // cursurPosition = {row: 1, column: position}
      }

      _this.setState({
        modalVisible: true,
        inputIndex: index,
        inputValue: inputValue,
        cursurPosition: cursurPosition,
        modalType: type
      });
    };

    _this.handleModalOk = function (val) {
      var _this$state = _this.state,
          inputIndex = _this$state.inputIndex,
          modalType = _this$state.modalType;

      if (modalType === 'req_body_other') {
        _this.changeInstallBody(modalType, val);
      } else {
        _this.changeInstallParam(modalType, val, inputIndex);
      }

      _this.setState({ modalVisible: false });
    };

    _this.changeInstallBody = function (type, value) {
      var _this$setState2;

      var pathParam = (0, _common.deepCopyJson)(_this.state[type]);
      // console.log(pathParam)
      var oldValue = pathParam || '';
      var newValue = _this.getInstallValue(oldValue, _this.state.cursurPosition);
      var left = newValue.left;
      var right = newValue.right;
      _this.setState((_this$setState2 = {}, _this$setState2[type] = '' + left + value + right, _this$setState2));
    };

    _this.getInstallValue = function (oldValue, cursurPosition) {
      var left = oldValue.substr(0, cursurPosition);
      var right = oldValue.substr(cursurPosition);

      var leftPostion = left.lastIndexOf('{{');
      var leftPostion2 = left.lastIndexOf('}}');
      var rightPostion = right.indexOf('}}');
      // console.log(leftPostion, leftPostion2,rightPostion, rightPostion2);
      var val = '';
      // 需要切除原来的变量
      if (leftPostion !== -1 && rightPostion !== -1 && leftPostion > leftPostion2) {
        left = left.substr(0, leftPostion);
        right = right.substr(rightPostion + 2);
        val = oldValue.substring(leftPostion, cursurPosition + rightPostion + 2);
      }
      return {
        left: left,
        right: right,
        val: val
      };
    };

    _this.changeInstallParam = function (name, v, index, key) {
      var _this$setState3;

      key = key || 'value';
      var pathParam = (0, _common.deepCopyJson)(_this.state[name]);
      var oldValue = pathParam[index][key] || '';
      var newValue = _this.getInstallValue(oldValue, _this.state.cursurPosition);
      var left = newValue.left;
      var right = newValue.right;
      pathParam[index][key] = '' + left + v + right;
      _this.setState((_this$setState3 = {}, _this$setState3[name] = pathParam, _this$setState3));
    };

    _this.handleModalCancel = function () {
      _this.setState({ modalVisible: false, cursurPosition: -1 });
    };

    _this.showEnvModal = function () {
      _this.setState({
        envModalVisible: true
      });
    };

    _this.handleEnvOk = function (newEnv, index) {
      _this.setState({
        envModalVisible: false,
        case_env: newEnv[index].name
      });
    };

    _this.handleEnvCancel = function () {
      _this.setState({
        envModalVisible: false
      });
    };

    _this.state = (0, _extends3.default)({
      loading: false,
      resStatusCode: null,
      test_valid_msg: null,
      resStatusText: null,
      case_env: '',
      mock_verify: false,
      enable_script: false,
      test_script: '',
      hasPlugin: true,
      inputValue: '',
      cursurPosition: { row: 1, column: -1 },
      envModalVisible: false,
      test_res_header: null,
      test_res_body: null,
      autoPreviewHTML: true
    }, _this.props.data);
    return _this;
  }

  Run.prototype.checkInterfaceData = function checkInterfaceData(data) {
    if (!data || (typeof data === 'undefined' ? 'undefined' : (0, _typeof3.default)(data)) !== 'object' || !data._id) {
      return false;
    }
    return true;
  };

  // 整合header信息


  Run.prototype.initState = function () {
    var _ref2 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee2(data) {
      var _this3 = this;

      var req_body_other, req_body_type, req_body_is_json_schema, body, schema, result, example;
      return _regenerator2.default.wrap(function _callee2$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              if (this.checkInterfaceData(data)) {
                _context2.next = 2;
                break;
              }

              return _context2.abrupt('return', null);

            case 2:
              req_body_other = data.req_body_other, req_body_type = data.req_body_type, req_body_is_json_schema = data.req_body_is_json_schema;
              body = req_body_other;
              // 运行时才会进行转换

              if (!(this.props.type === 'inter' && req_body_type === 'json' && req_body_other && req_body_is_json_schema)) {
                _context2.next = 18;
                break;
              }

              schema = {};
              _context2.prev = 6;

              schema = _json2.default.parse(req_body_other);
              _context2.next = 14;
              break;

            case 10:
              _context2.prev = 10;
              _context2.t0 = _context2['catch'](6);

              console.log('e', _context2.t0);
              return _context2.abrupt('return');

            case 14:
              _context2.next = 16;
              return _axios2.default.post('/api/interface/schema2json', {
                schema: schema,
                required: true
              });

            case 16:
              result = _context2.sent;

              body = (0, _stringify2.default)(result.data);

            case 18:
              example = {};

              if (this.props.type === 'inter') {
                example = ['req_headers', 'req_query', 'req_body_form'].reduce(function (res, key) {
                  res[key] = (data[key] || []).map(function (item) {
                    if (item.type !== 'file' // 不是文件类型
                    && (item.value == null || item.value === '') // 初始值为空
                    && item.example != null // 有示例值
                    ) {
                        item.value = item.example;
                      }
                    return item;
                  });
                  return res;
                }, {});
              }

              this.setState((0, _extends3.default)({}, this.state, {
                test_res_header: null,
                test_res_body: null
              }, data, example, {
                req_body_other: body,
                resStatusCode: null,
                test_valid_msg: null,
                resStatusText: null
              }), function () {
                return _this3.props.type === 'inter' && _this3.initEnvState(data.case_env, data.env);
              });

            case 21:
            case 'end':
              return _context2.stop();
          }
        }
      }, _callee2, this, [[6, 10]]);
    }));

    function initState(_x) {
      return _ref2.apply(this, arguments);
    }

    return initState;
  }();

  Run.prototype.initEnvState = function initEnvState(case_env, env) {
    var _this4 = this;

    var headers = this.handleReqHeader(case_env, env);

    this.setState({
      req_headers: headers,
      env: env
    }, function () {
      var s = !_underscore2.default.find(env, function (item) {
        return item.name === _this4.state.case_env;
      });
      if (!_this4.state.case_env || s) {
        _this4.setState({
          case_env: _this4.state.env[0].name
        });
      }
    });
  };

  Run.prototype.componentWillMount = function componentWillMount() {
    var _this5 = this;

    this._crossRequestInterval = (0, _CheckCrossInstall.initCrossRequest)(function (hasPlugin) {
      _this5.setState({
        hasPlugin: hasPlugin
      });
    });
    this.initState(this.props.data);
  };

  Run.prototype.componentWillUnmount = function componentWillUnmount() {
    clearInterval(this._crossRequestInterval);
  };

  Run.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
    if (this.checkInterfaceData(nextProps.data) && this.checkInterfaceData(this.props.data)) {
      if (nextProps.data._id !== this.props.data._id) {
        this.initState(nextProps.data);
      } else if (nextProps.data.interface_up_time !== this.props.data.interface_up_time) {
        this.initState(nextProps.data);
      }
      if (nextProps.data.env !== this.props.data.env) {
        this.initEnvState(this.state.case_env, nextProps.data.env);
      }
    }
  };

  Run.prototype.handleValue = function handleValue(val, global) {
    var globalValue = ArrayToObject(global);
    return handleParamsValue(val, {
      global: globalValue
    });
  };

  // 返回数据与定义数据的比较判断


  // 模态框的相关操作


  // 点击插入


  // 根据鼠标位置往req_body中动态插入数据


  // 获取截取的字符串


  // 根据鼠标位置动态插入数据


  // 取消参数插入


  // 环境变量模态框相关操作


  Run.prototype.render = function render() {
    var _this6 = this;

    var _state = this.state,
        method = _state.method,
        env = _state.env,
        path = _state.path,
        _state$req_params = _state.req_params,
        req_params = _state$req_params === undefined ? [] : _state$req_params,
        _state$req_headers = _state.req_headers,
        req_headers = _state$req_headers === undefined ? [] : _state$req_headers,
        _state$req_query = _state.req_query,
        req_query = _state$req_query === undefined ? [] : _state$req_query,
        req_body_type = _state.req_body_type,
        _state$req_body_form = _state.req_body_form,
        req_body_form = _state$req_body_form === undefined ? [] : _state$req_body_form,
        loading = _state.loading,
        case_env = _state.case_env,
        inputValue = _state.inputValue,
        hasPlugin = _state.hasPlugin;
    // console.log(env);

    return _react2.default.createElement(
      'div',
      { className: 'interface-test postman' },
      this.state.modalVisible && _react2.default.createElement(_index2.default, {
        visible: this.state.modalVisible,
        handleCancel: this.handleModalCancel,
        handleOk: this.handleModalOk,
        inputValue: inputValue,
        envType: this.props.type,
        id: +this.state._id
      }),
      this.state.envModalVisible && _react2.default.createElement(
        _modal2.default,
        {
          title: '\u73AF\u5883\u8BBE\u7F6E',
          visible: this.state.envModalVisible,
          onOk: this.handleEnvOk,
          onCancel: this.handleEnvCancel,
          footer: null,
          width: 800,
          className: 'env-modal'
        },
        _react2.default.createElement(_index4.default, { projectId: this.props.data.project_id, onOk: this.handleEnvOk })
      ),
      _react2.default.createElement(_CheckCrossInstall2.default, { hasPlugin: hasPlugin }),
      _react2.default.createElement(
        'div',
        { className: 'url' },
        _react2.default.createElement(
          InputGroup,
          { compact: true, style: { display: 'flex' } },
          _react2.default.createElement(
            _select2.default,
            { disabled: true, value: method, style: { flexBasis: 60 } },
            (0, _keys2.default)(HTTP_METHOD).map(function (name) {
              _react2.default.createElement(
                Option,
                { value: name.toUpperCase() },
                name.toUpperCase()
              );
            })
          ),
          _react2.default.createElement(
            _select2.default,
            {
              value: case_env,
              style: { flexBasis: 180, flexGrow: 1 },
              onSelect: this.selectDomain
            },
            env.map(function (item, index) {
              return _react2.default.createElement(
                Option,
                { value: item.name, key: index },
                item.name + '：' + item.domain
              );
            }),
            _react2.default.createElement(
              Option,
              { value: '\u73AF\u5883\u914D\u7F6E', disabled: true, style: { cursor: 'pointer', color: '#2395f1' } },
              _react2.default.createElement(
                _button2.default,
                { type: 'primary', onClick: this.showEnvModal },
                '\u73AF\u5883\u914D\u7F6E'
              )
            )
          ),
          _react2.default.createElement(_input2.default, {
            disabled: true,
            value: path,
            onChange: this.changePath,
            spellCheck: 'false',
            style: { flexBasis: 180, flexGrow: 1 }
          })
        ),
        _react2.default.createElement(
          _tooltip2.default,
          {
            placement: 'bottom',
            title: function () {
              if (hasPlugin) {
                return '发送请求';
              } else {
                return '请安装 cross-request 插件';
              }
            }()
          },
          _react2.default.createElement(
            _button2.default,
            {
              disabled: !hasPlugin,
              onClick: this.reqRealInterface,
              type: 'primary',
              style: { marginLeft: 10 },
              icon: loading ? 'loading' : ''
            },
            loading ? '取消' : '发送'
          )
        ),
        _react2.default.createElement(
          _tooltip2.default,
          {
            placement: 'bottom',
            title: function title() {
              return _this6.props.type === 'inter' ? '保存到测试集' : '更新该用例';
            }
          },
          _react2.default.createElement(
            _button2.default,
            { onClick: this.props.save, type: 'primary', style: { marginLeft: 10 } },
            this.props.type === 'inter' ? '保存' : '更新'
          )
        )
      ),
      _react2.default.createElement(
        _collapse2.default,
        { defaultActiveKey: ['0', '1', '2', '3'], bordered: true },
        _react2.default.createElement(
          Panel,
          {
            header: 'PATH PARAMETERS',
            key: '0',
            className: req_params.length === 0 ? 'hidden' : ''
          },
          req_params.map(function (item, index) {
            return _react2.default.createElement(
              'div',
              { key: index, className: 'key-value-wrap' },
              _react2.default.createElement(ParamsNameComponent, { example: item.example, desc: item.desc, name: item.name }),
              _react2.default.createElement(
                'span',
                { className: 'eq-symbol' },
                '='
              ),
              _react2.default.createElement(_input2.default, {
                value: item.value,
                className: 'value',
                onChange: function onChange(e) {
                  return _this6.changeParam('req_params', e.target.value, index);
                },
                placeholder: '\u53C2\u6570\u503C',
                id: 'req_params_' + index,
                addonAfter: _react2.default.createElement(_icon2.default, {
                  type: 'edit',
                  onClick: function onClick() {
                    return _this6.showModal(item.value, index, 'req_params');
                  }
                })
              })
            );
          }),
          _react2.default.createElement(
            _button2.default,
            {
              style: { display: 'none' },
              type: 'primary',
              icon: 'plus',
              onClick: this.addPathParam
            },
            '\u6DFB\u52A0Path\u53C2\u6570'
          )
        ),
        _react2.default.createElement(
          Panel,
          {
            header: 'QUERY PARAMETERS',
            key: '1',
            className: req_query.length === 0 ? 'hidden' : ''
          },
          req_query.map(function (item, index) {
            return _react2.default.createElement(
              'div',
              { key: index, className: 'key-value-wrap' },
              _react2.default.createElement(ParamsNameComponent, { example: item.example, desc: item.desc, name: item.name }),
              '\xA0',
              item.required == 1 ? _react2.default.createElement(_checkbox2.default, { className: 'params-enable', checked: true, disabled: true }) : _react2.default.createElement(_checkbox2.default, {
                className: 'params-enable',
                checked: item.enable,
                onChange: function onChange(e) {
                  return _this6.changeParam('req_query', e.target.checked, index, 'enable');
                }
              }),
              _react2.default.createElement(
                'span',
                { className: 'eq-symbol' },
                '='
              ),
              _react2.default.createElement(_input2.default, {
                value: item.value,
                className: 'value',
                onChange: function onChange(e) {
                  return _this6.changeParam('req_query', e.target.value, index);
                },
                placeholder: '\u53C2\u6570\u503C',
                id: 'req_query_' + index,
                addonAfter: _react2.default.createElement(_icon2.default, {
                  type: 'edit',
                  onClick: function onClick() {
                    return _this6.showModal(item.value, index, 'req_query');
                  }
                })
              })
            );
          }),
          _react2.default.createElement(
            _button2.default,
            { style: { display: 'none' }, type: 'primary', icon: 'plus', onClick: this.addQuery },
            '\u6DFB\u52A0Query\u53C2\u6570'
          )
        ),
        _react2.default.createElement(
          Panel,
          { header: 'HEADERS', key: '2', className: req_headers.length === 0 ? 'hidden' : '' },
          req_headers.map(function (item, index) {
            return _react2.default.createElement(
              'div',
              { key: index, className: 'key-value-wrap' },
              _react2.default.createElement(ParamsNameComponent, { example: item.example, desc: item.desc, name: item.name }),
              _react2.default.createElement(
                'span',
                { className: 'eq-symbol' },
                '='
              ),
              _react2.default.createElement(_input2.default, {
                value: item.value,
                disabled: !!item.abled,
                className: 'value',
                onChange: function onChange(e) {
                  return _this6.changeParam('req_headers', e.target.value, index);
                },
                placeholder: '\u53C2\u6570\u503C',
                id: 'req_headers_' + index,
                addonAfter: !item.abled && _react2.default.createElement(_icon2.default, {
                  type: 'edit',
                  onClick: function onClick() {
                    return _this6.showModal(item.value, index, 'req_headers');
                  }
                })
              })
            );
          }),
          _react2.default.createElement(
            _button2.default,
            { style: { display: 'none' }, type: 'primary', icon: 'plus', onClick: this.addHeader },
            '\u6DFB\u52A0Header'
          )
        ),
        _react2.default.createElement(
          Panel,
          {
            header: _react2.default.createElement(
              'div',
              { style: { display: 'flex', justifyContent: 'space-between' } },
              _react2.default.createElement(
                _tooltip2.default,
                { title: 'F9 \u5168\u5C4F\u7F16\u8F91' },
                'BODY(F9)'
              )
            ),
            key: '3',
            className: HTTP_METHOD[method].request_body && (req_body_type === 'form' && req_body_form.length > 0 || req_body_type !== 'form') ? 'POST' : 'hidden'
          },
          _react2.default.createElement(
            'div',
            {
              style: { display: checkRequestBodyIsRaw(method, req_body_type) ? 'block' : 'none' }
            },
            req_body_type === 'json' && _react2.default.createElement(
              'div',
              { className: 'adv-button' },
              _react2.default.createElement(
                _button2.default,
                {
                  onClick: function onClick() {
                    return _this6.showModal(_this6.state.req_body_other, 0, 'req_body_other');
                  }
                },
                '\u9AD8\u7EA7\u53C2\u6570\u8BBE\u7F6E'
              ),
              _react2.default.createElement(
                _tooltip2.default,
                { title: '\u9AD8\u7EA7\u53C2\u6570\u8BBE\u7F6E\u53EA\u5728json\u5B57\u6BB5\u503C\u4E2D\u751F\u6548' },
                '  ',
                _react2.default.createElement(_icon2.default, { type: 'question-circle-o' })
              )
            ),
            _react2.default.createElement(_AceEditor2.default, {
              className: 'pretty-editor',
              ref: function ref(editor) {
                return _this6.aceEditor = editor;
              },
              data: this.state.req_body_other,
              mode: req_body_type === 'json' ? null : 'text',
              onChange: this.handleRequestBody,
              fullScreen: true
            })
          ),
          HTTP_METHOD[method].request_body && req_body_type === 'form' && _react2.default.createElement(
            'div',
            null,
            req_body_form.map(function (item, index) {
              return _react2.default.createElement(
                'div',
                { key: index, className: 'key-value-wrap' },
                _react2.default.createElement(ParamsNameComponent, {
                  example: item.example,
                  desc: item.desc,
                  name: item.name
                }),
                '\xA0',
                item.required == 1 ? _react2.default.createElement(_checkbox2.default, { className: 'params-enable', checked: true, disabled: true }) : _react2.default.createElement(_checkbox2.default, {
                  className: 'params-enable',
                  checked: item.enable,
                  onChange: function onChange(e) {
                    return _this6.changeBody(e.target.checked, index, 'enable');
                  }
                }),
                _react2.default.createElement(
                  'span',
                  { className: 'eq-symbol' },
                  '='
                ),
                item.type === 'file' ? '因Chrome最新版安全策略限制，不再支持文件上传'
                // <Input
                //   type="file"
                //   id={'file_' + index}
                //   onChange={e => this.changeBody(e.target.value, index, 'value')}
                //   multiple
                //   className="value"
                // />
                : _react2.default.createElement(_input2.default, {
                  value: item.value,
                  className: 'value',
                  onChange: function onChange(e) {
                    return _this6.changeBody(e.target.value, index);
                  },
                  placeholder: '\u53C2\u6570\u503C',
                  id: 'req_body_form_' + index,
                  addonAfter: _react2.default.createElement(_icon2.default, {
                    type: 'edit',
                    onClick: function onClick() {
                      return _this6.showModal(item.value, index, 'req_body_form');
                    }
                  })
                })
              );
            }),
            _react2.default.createElement(
              _button2.default,
              {
                style: { display: 'none' },
                type: 'primary',
                icon: 'plus',
                onClick: this.addBody
              },
              '\u6DFB\u52A0Form\u53C2\u6570'
            )
          ),
          HTTP_METHOD[method].request_body && req_body_type === 'file' && _react2.default.createElement(
            'div',
            null,
            _react2.default.createElement(_input2.default, { type: 'file', id: 'single-file' })
          )
        )
      ),
      _react2.default.createElement(
        _tabs2.default,
        { size: 'large', defaultActiveKey: 'res', className: 'response-tab' },
        _react2.default.createElement(
          _tabs2.default.TabPane,
          { tab: 'Response', key: 'res' },
          _react2.default.createElement(
            _spin2.default,
            { spinning: this.state.loading },
            _react2.default.createElement(
              'h2',
              {
                style: { display: this.state.resStatusCode ? '' : 'none' },
                className: 'res-code ' + (this.state.resStatusCode >= 200 && this.state.resStatusCode < 400 && !this.state.loading ? 'success' : 'fail')
              },
              this.state.resStatusCode + '  ' + this.state.resStatusText
            ),
            _react2.default.createElement(
              'div',
              null,
              _react2.default.createElement(
                'a',
                { rel: 'noopener noreferrer', target: '_blank', href: 'https://juejin.im/post/5c888a3e5188257dee0322af' },
                'YApi \u65B0\u7248\u5982\u4F55\u67E5\u770B http \u8BF7\u6C42\u6570\u636E'
              )
            ),
            this.state.test_valid_msg && _react2.default.createElement(_alert2.default, {
              message: _react2.default.createElement(
                'span',
                null,
                'Warning \xA0',
                _react2.default.createElement(
                  _tooltip2.default,
                  { title: '\u9488\u5BF9\u5B9A\u4E49\u4E3A json schema \u7684\u8FD4\u56DE\u6570\u636E\u8FDB\u884C\u683C\u5F0F\u6821\u9A8C' },
                  _react2.default.createElement(_icon2.default, { type: 'question-circle-o' })
                )
              ),
              type: 'warning',
              showIcon: true,
              description: this.state.test_valid_msg
            }),
            _react2.default.createElement(
              'div',
              { className: 'container-header-body' },
              _react2.default.createElement(
                'div',
                { className: 'header' },
                _react2.default.createElement(
                  'div',
                  { className: 'container-title' },
                  _react2.default.createElement(
                    'h4',
                    null,
                    'Headers'
                  )
                ),
                _react2.default.createElement(_AceEditor2.default, {
                  callback: function callback(editor) {
                    editor.renderer.setShowGutter(false);
                  },
                  readOnly: true,
                  className: 'pretty-editor-header',
                  data: this.state.test_res_header,
                  mode: 'json'
                })
              ),
              _react2.default.createElement(
                'div',
                { className: 'resizer' },
                _react2.default.createElement(
                  'div',
                  { className: 'container-title' },
                  _react2.default.createElement(
                    'h4',
                    { style: { visibility: 'hidden' } },
                    '1'
                  )
                )
              ),
              _react2.default.createElement(
                'div',
                { className: 'body' },
                _react2.default.createElement(
                  'div',
                  { className: 'container-title' },
                  _react2.default.createElement(
                    'h4',
                    null,
                    'Body'
                  ),
                  _react2.default.createElement(
                    _checkbox2.default,
                    {
                      checked: this.state.autoPreviewHTML,
                      onChange: function onChange(e) {
                        return _this6.setState({ autoPreviewHTML: e.target.checked });
                      } },
                    _react2.default.createElement(
                      'span',
                      null,
                      '\u81EA\u52A8\u9884\u89C8HTML'
                    )
                  )
                ),
                this.state.autoPreviewHTML && this.testResponseBodyIsHTML ? _react2.default.createElement('iframe', {
                  className: 'pretty-editor-body',
                  srcDoc: this.state.test_res_body
                }) : _react2.default.createElement(_AceEditor2.default, {
                  readOnly: true,
                  className: 'pretty-editor-body',
                  data: this.state.test_res_body,
                  mode: handleContentType(this.state.test_res_header)
                })
              )
            )
          )
        ),
        this.props.type === 'case' ? _react2.default.createElement(
          _tabs2.default.TabPane,
          {
            className: 'response-test',
            tab: _react2.default.createElement(
              _tooltip2.default,
              { title: '\u6D4B\u8BD5\u811A\u672C\uFF0C\u53EF\u65AD\u8A00\u8FD4\u56DE\u7ED3\u679C\uFF0C\u4F7F\u7528\u65B9\u6CD5\u8BF7\u67E5\u770B\u6587\u6863' },
              'Test'
            ),
            key: 'test'
          },
          _react2.default.createElement(
            'h3',
            { style: { margin: '5px' } },
            '\xA0\u662F\u5426\u5F00\u542F:\xA0',
            _react2.default.createElement(_switch2.default, {
              checked: this.state.enable_script,
              onChange: function onChange(e) {
                return _this6.setState({ enable_script: e });
              }
            })
          ),
          _react2.default.createElement(
            'p',
            { style: { margin: '10px' } },
            '\u6CE8\uFF1ATest \u811A\u672C\u53EA\u6709\u505A\u81EA\u52A8\u5316\u6D4B\u8BD5\u624D\u6267\u884C'
          ),
          _react2.default.createElement(
            _row2.default,
            null,
            _react2.default.createElement(
              _col2.default,
              { span: '18' },
              _react2.default.createElement(_AceEditor2.default, {
                onChange: this.onOpenTest,
                className: 'case-script',
                data: this.state.test_script,
                ref: function ref(aceEditor) {
                  _this6.aceEditor = aceEditor;
                }
              })
            ),
            _react2.default.createElement(
              _col2.default,
              { span: '6' },
              _react2.default.createElement(
                'div',
                { className: 'insert-code' },
                InsertCodeMap.map(function (item) {
                  return _react2.default.createElement(
                    'div',
                    {
                      style: { cursor: 'pointer' },
                      className: 'code-item',
                      key: item.title,
                      onClick: function onClick() {
                        _this6.handleInsertCode('\n' + item.code);
                      }
                    },
                    item.title
                  );
                })
              )
            )
          )
        ) : null
      )
    );
  };

  (0, _createClass3.default)(Run, [{
    key: 'testResponseBodyIsHTML',
    get: function get() {
      var hd = this.state.test_res_header;
      return hd != null && (typeof hd === 'undefined' ? 'undefined' : (0, _typeof3.default)(hd)) === 'object' && String(hd['Content-Type'] || hd['content-type']).indexOf('text/html') !== -1;
    }
  }]);
  return Run;
}(_react.PureComponent), _class.propTypes = {
  data: _propTypes2.default.object, //接口原有数据
  save: _propTypes2.default.func, //保存回调方法
  type: _propTypes2.default.string, //enum[case, inter], 判断是在接口页面使用还是在测试集
  curUid: _propTypes2.default.number.isRequired,
  interfaceId: _propTypes2.default.number.isRequired,
  projectId: _propTypes2.default.number.isRequired
}, _temp);
exports.default = Run;