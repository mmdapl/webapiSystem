{"version":3,"sources":["client\\containers\\Project\\Interface\\InterfaceList\\InterfaceMenu.js"],"names":["confirm","TreeNode","headHeight","InterfaceMenu","list","state","inter","curdata","curProject","project","currProject","expands","fetchInterfaceListMenu","fetchInterfaceData","deleteInterfaceCatData","deleteInterfaceData","initInterface","getProject","fetchInterfaceCatList","fetchInterfaceList","props","changeModal","key","status","newState","setState","handleCancel","visible","onSelect","history","match","curkey","selectedKeys","basepath","params","id","push","changeExpands","handleAddInterface","data","cb","project_id","projectId","axios","post","then","res","errcode","error","errmsg","success","interfaceId","_id","getList","handleAddInterfaceCat","add_cat_modal_visible","handleChangeInterfaceCat","catid","curCatdata","name","desc","change_cat_modal_visible","showConfirm","that","ref","title","content","okText","cancelText","onOk","destroy","onCancel","showDelCatConfirm","copyInterface","interfaceData","payload","newData","draftData","path","Date","now","enterItem","delIcon","leaveItem","onFilter","filter","e","target","value","JSON","parse","onExpand","onDrop","dropCatIndex","node","pos","split","dragCatIndex","dragNode","dropCatId","eventKey","dragCatId","dropPos","dropIndex","Number","length","dragPos","dragIndex","indexOf","colList","changes","router","isNaN","actionId","substr","filterList","arr","menuList","draftList","interfaceFilter","item","curKey","curCatid","del_cat_modal_visible","handleRequest","r","componentWillMount","componentWillReceiveProps","nextProps","render","matchParams","searchBox","cat","defaultExpandedKeys","rNull","selects","itemInterfaceCreate","stopPropagation","display","currentKes","maxHeight","parseInt","document","body","clientHeight","marginRight","map","Component","propTypes","PropTypes","object","string","array","func","addInterfaceData"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;AACA;;;;AACA;;AASA;;AAEA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;AACA;;AAEA;;;;AAEA,IAAMA,UAAU,gBAAMA,OAAtB;AACA,IAAMC,WAAW,eAAKA,QAAtB;AACA,IAAMC,aAAa,GAAnB,C,CAAwB;;IAsBlBC,a,WApBL,yBACC,iBAAS;AACP,SAAO;AACLC,UAAMC,MAAMC,KAAN,CAAYF,IADb;AAELE,WAAOD,MAAMC,KAAN,CAAYC,OAFd;AAGLC,gBAAYH,MAAMI,OAAN,CAAcC,WAHrB;AAILC,aAAS;AAJJ,GAAP;AAMD,CARF,EASC;AACEC,2DADF;AAEEC,mDAFF;AAGEC,2DAHF;AAIEC,qDAJF;AAKEC,yCALF;AAMEC,iCANF;AAOEC,yDAPF;AAQEC;AARF,CATD,C;;;AAuCC;;;AAgBA,yBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AAAA,+DACjB,sBAAMA,KAAN,CADiB;;AAAA,UAbnBC,WAamB,GAbL,UAACC,GAAD,EAAMC,MAAN,EAAiB;AAC7B;AACA,UAAIC,WAAW,EAAf;AACAA,eAASF,GAAT,IAAgBC,MAAhB;AACA,YAAKE,QAAL,CAAcD,QAAd;AACD,KAQkB;;AAAA,UANnBE,YAMmB,GANJ,YAAM;AACnB,YAAKD,QAAL,CAAc;AACZE,iBAAS;AADG,OAAd;AAGD,KAEkB;;AAAA,UAyCnBC,QAzCmB,GAyCR,wBAAgB;AAAA,wBACE,MAAKR,KADP;AAAA,UACjBS,OADiB,eACjBA,OADiB;AAAA,UACRC,KADQ,eACRA,KADQ;;AAEzB,UAAIC,SAASC,aAAa,CAAb,CAAb;;AAEA,UAAI,CAACD,MAAD,IAAW,CAACC,YAAhB,EAA8B;AAC5B,eAAO,KAAP;AACD;AACD,UAAIC,WAAW,cAAcH,MAAMI,MAAN,CAAaC,EAA3B,GAAgC,gBAA/C;AACA,UAAIJ,WAAW,MAAf,EAAuB;AACrBF,gBAAQO,IAAR,CAAaH,QAAb;AACD,OAFD,MAEO;AACLJ,gBAAQO,IAAR,CAAaH,WAAW,GAAX,GAAiBF,MAA9B;AACD;AACD,YAAKN,QAAL,CAAc;AACZd,iBAAS;AADG,OAAd;AAGD,KAzDkB;;AAAA,UA2DnB0B,aA3DmB,GA2DH,YAAM;AACpB,YAAKZ,QAAL,CAAc;AACZd,iBAAS;AADG,OAAd;AAGD,KA/DkB;;AAAA,UAiEnB2B,kBAjEmB,GAiEE,UAACC,IAAD,EAAOC,EAAP,EAAc;AACjCD,WAAKE,UAAL,GAAkB,MAAKrB,KAAL,CAAWsB,SAA7B;AACAC,sBAAMC,IAAN,CAAW,oBAAX,EAAiCL,IAAjC,EAAuCM,IAAvC,CAA4C,eAAO;AACjD,YAAIC,IAAIP,IAAJ,CAASQ,OAAT,KAAqB,CAAzB,EAA4B;AAC1B,iBAAO,kBAAQC,KAAR,CAAcF,IAAIP,IAAJ,CAASU,MAAvB,CAAP;AACD;AACD,0BAAQC,OAAR,CAAgB,QAAhB;AACA,YAAIC,cAAcL,IAAIP,IAAJ,CAASA,IAAT,CAAca,GAAhC;AACA,cAAKhC,KAAL,CAAWS,OAAX,CAAmBO,IAAnB,CAAwB,cAAc,MAAKhB,KAAL,CAAWsB,SAAzB,GAAqC,iBAArC,GAAyDS,WAAjF;AACA,cAAKE,OAAL;AACA,cAAK5B,QAAL,CAAc;AACZE,mBAAS;AADG,SAAd;AAGA,YAAIa,EAAJ,EAAQ;AACNA;AACD;AACF,OAdD;AAeD,KAlFkB;;AAAA,UAoFnBc,qBApFmB,GAoFK,gBAAQ;AAC9Bf,WAAKE,UAAL,GAAkB,MAAKrB,KAAL,CAAWsB,SAA7B;AACAC,sBAAMC,IAAN,CAAW,wBAAX,EAAqCL,IAArC,EAA2CM,IAA3C,CAAgD,eAAO;AACrD,YAAIC,IAAIP,IAAJ,CAASQ,OAAT,KAAqB,CAAzB,EAA4B;AAC1B,iBAAO,kBAAQC,KAAR,CAAcF,IAAIP,IAAJ,CAASU,MAAvB,CAAP;AACD;AACD,0BAAQC,OAAR,CAAgB,UAAhB;AACA,cAAKG,OAAL;AACA,cAAKjC,KAAL,CAAWH,UAAX,CAAsBsB,KAAKE,UAA3B;AACA,cAAKhB,QAAL,CAAc;AACZ8B,iCAAuB;AADX,SAAd;AAGD,OAVD;AAWD,KAjGkB;;AAAA,UAmGnBC,wBAnGmB,GAmGQ,gBAAQ;AACjCjB,WAAKE,UAAL,GAAkB,MAAKrB,KAAL,CAAWsB,SAA7B;;AAEA,UAAIR,SAAS;AACXuB,eAAO,MAAKpD,KAAL,CAAWqD,UAAX,CAAsBN,GADlB;AAEXO,cAAMpB,KAAKoB,IAFA;AAGXC,cAAMrB,KAAKqB;AAHA,OAAb;;AAMAjB,sBAAMC,IAAN,CAAW,uBAAX,EAAoCV,MAApC,EAA4CW,IAA5C,CAAiD,eAAO;AACtD,YAAIC,IAAIP,IAAJ,CAASQ,OAAT,KAAqB,CAAzB,EAA4B;AAC1B,iBAAO,kBAAQC,KAAR,CAAcF,IAAIP,IAAJ,CAASU,MAAvB,CAAP;AACD;AACD,0BAAQC,OAAR,CAAgB,UAAhB;AACA,cAAKG,OAAL;AACA,cAAKjC,KAAL,CAAWH,UAAX,CAAsBsB,KAAKE,UAA3B;AACA,cAAKhB,QAAL,CAAc;AACZoC,oCAA0B;AADd,SAAd;AAGD,OAVD;AAWD,KAvHkB;;AAAA,UAyHnBC,WAzHmB,GAyHL,gBAAQ;AACpB,UAAIC,YAAJ;AACA,UAAI5B,KAAKI,KAAKa,GAAd;AACA,UAAIK,QAAQlB,KAAKkB,KAAjB;AACA,UAAMO,MAAMhE,QAAQ;AAClBiE,eAAO,cADW;AAElBC,iBAAS,iBAFS;AAGlBC,gBAAQ,IAHU;AAIlBC,oBAAY,IAJM;AAKZC,YALY,kBAKL;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BACLN,KAAK3C,KAAL,CAAWL,mBAAX,CAA+BoB,EAA/B,EAAmC4B,KAAK3C,KAAL,CAAWsB,SAA9C,CADK;;AAAA;AAAA;AAAA,2BAELqB,KAAKV,OAAL,EAFK;;AAAA;AAAA;AAAA,2BAGLU,KAAK3C,KAAL,CAAWF,qBAAX,CAAiC,EAAEuC,YAAF,EAAjC,CAHK;;AAAA;AAIXO,wBAAIM,OAAJ;AACAP,yBAAK3C,KAAL,CAAWS,OAAX,CAAmBO,IAAnB,CACE,cAAc2B,KAAK3C,KAAL,CAAWU,KAAX,CAAiBI,MAAjB,CAAwBC,EAAtC,GAA2C,qBAA3C,GAAmEsB,KADrE;;AALW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQZ,SAbiB;AAclBc,gBAdkB,sBAcP;AACTP,cAAIM,OAAJ;AACD;AAhBiB,OAAR,CAAZ;AAkBD,KA/IkB;;AAAA,UAiJnBE,iBAjJmB,GAiJC,iBAAS;AAC3B,UAAIT,YAAJ;AACA,UAAMC,MAAMhE,QAAQ;AAClBiE,eAAO,aADW;AAElBC,iBAAS,+BAFS;AAGlBC,gBAAQ,IAHU;AAIlBC,oBAAY,IAJM;AAKZC,YALY,kBAKL;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BACLN,KAAK3C,KAAL,CAAWN,sBAAX,CAAkC2C,KAAlC,EAAyCM,KAAK3C,KAAL,CAAWsB,SAApD,CADK;;AAAA;AAAA;AAAA,2BAELqB,KAAKV,OAAL,EAFK;;AAAA;AAAA;AAAA,2BAILU,KAAK3C,KAAL,CAAWD,kBAAX,CAA8B,EAAEsB,YAAYsB,KAAK3C,KAAL,CAAWsB,SAAzB,EAA9B,CAJK;;AAAA;AAKXqB,yBAAK3C,KAAL,CAAWS,OAAX,CAAmBO,IAAnB,CAAwB,cAAc2B,KAAK3C,KAAL,CAAWU,KAAX,CAAiBI,MAAjB,CAAwBC,EAAtC,GAA2C,gBAAnE;AACA6B,wBAAIM,OAAJ;;AANW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOZ,SAZiB;AAalBC,gBAbkB,sBAaP,CAAE;AAbK,OAAR,CAAZ;AAeD,KAlKkB;;AAAA,UAoKnBE,aApKmB;AAAA,0FAoKH,kBAAMtC,EAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACY,MAAKf,KAAL,CAAWP,kBAAX,CAA8BsB,EAA9B,CADZ;;AAAA;AACVuC,6BADU;;AAEd;AACA;AACA;AACInC,oBALU,GAKHmC,cAAcC,OAAd,CAAsBpC,IAAtB,CAA2BA,IALxB;AAMVqC,uBANU,GAMA,qBAAQrC,IAAR,EAAc,qBAAa;AACvCsC,4BAAUZ,KAAV,GAAkBY,UAAUZ,KAAV,GAAkB,OAApC;AACAY,4BAAUC,IAAV,GAAiBD,UAAUC,IAAV,GAAiB,GAAjB,GAAuBC,KAAKC,GAAL,EAAxC;AACD,iBAHa,CANA;;;AAWdrC,gCAAMC,IAAN,CAAW,oBAAX,EAAiCgC,OAAjC,EAA0C/B,IAA1C;AAAA,uGAA+C,kBAAMC,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCACzCA,IAAIP,IAAJ,CAASQ,OAAT,KAAqB,CADoB;AAAA;AAAA;AAAA;;AAAA,8DAEpC,kBAAQC,KAAR,CAAcF,IAAIP,IAAJ,CAASU,MAAvB,CAFoC;;AAAA;AAI7C,8CAAQC,OAAR,CAAgB,QAAhB;AACIC,uCALyC,GAK3BL,IAAIP,IAAJ,CAASA,IAAT,CAAca,GALa;AAAA;AAAA,mCAMvC,MAAKC,OAAL,EANuC;;AAAA;AAO7C,kCAAKjC,KAAL,CAAWS,OAAX,CAAmBO,IAAnB,CAAwB,cAAc,MAAKhB,KAAL,CAAWsB,SAAzB,GAAqC,iBAArC,GAAyDS,WAAjF;AACA,kCAAK1B,QAAL,CAAc;AACZE,uCAAS;AADG,6BAAd;;AAR6C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAA/C;;AAAA;AAAA;AAAA;AAAA;;AAXc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OApKG;;AAAA;AAAA;AAAA;AAAA;;AAAA,UA6LnBsD,SA7LmB,GA6LP,cAAM;AAChB,YAAKxD,QAAL,CAAc,EAAEyD,SAAS/C,EAAX,EAAd;AACD,KA/LkB;;AAAA,UAiMnBgD,SAjMmB,GAiMP,YAAM;AAChB,YAAK1D,QAAL,CAAc,EAAEyD,SAAS,IAAX,EAAd;AACD,KAnMkB;;AAAA,UAqMnBE,QArMmB,GAqMR,aAAK;AACd,YAAK3D,QAAL,CAAc;AACZ4D,gBAAQC,EAAEC,MAAF,CAASC,KADL;AAEZpF,cAAMqF,KAAKC,KAAL,CAAW,yBAAe,MAAKtE,KAAL,CAAWhB,IAA1B,CAAX;AAFM,OAAd;AAID,KA1MkB;;AAAA,UA4MnBuF,QA5MmB,GA4MR,aAAK;AACd,YAAKlE,QAAL,CAAc;AACZd,iBAAS2E;AADG,OAAd;AAGD,KAhNkB;;AAAA,UAkNnBM,MAlNmB;AAAA,2FAkNV,kBAAMN,CAAN;AAAA;;AAAA;AAAA;AAAA;AAAA;AACDO,4BADC,GACcP,EAAEQ,IAAF,CAAO1E,KAAP,CAAa2E,GAAb,CAAiBC,KAAjB,CAAuB,GAAvB,EAA4B,CAA5B,IAAiC,CAD/C;AAEDC,4BAFC,GAEcX,EAAEY,QAAF,CAAW9E,KAAX,CAAiB2E,GAAjB,CAAqBC,KAArB,CAA2B,GAA3B,EAAgC,CAAhC,IAAqC,CAFnD;;AAAA,sBAGHH,eAAe,CAAf,IAAoBI,eAAe,CAHhC;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAMC7F,oBAND,GAMU,MAAKgB,KANf,CAMChB,IAND;AAOD+F,yBAPC,GAOW,MAAK/E,KAAL,CAAWhB,IAAX,CAAgByF,YAAhB,EAA8BzC,GAPzC;AAQDjB,kBARC,GAQImD,EAAEY,QAAF,CAAW9E,KAAX,CAAiBgF,QARrB;AASDC,yBATC,GASW,MAAKjF,KAAL,CAAWhB,IAAX,CAAgB6F,YAAhB,EAA8B7C,GATzC;AAWDkD,uBAXC,GAWShB,EAAEQ,IAAF,CAAO1E,KAAP,CAAa2E,GAAb,CAAiBC,KAAjB,CAAuB,GAAvB,CAXT;AAYDO,yBAZC,GAYWC,OAAOF,QAAQA,QAAQG,MAAR,GAAiB,CAAzB,CAAP,CAZX;AAaDC,uBAbC,GAaSpB,EAAEY,QAAF,CAAW9E,KAAX,CAAiB2E,GAAjB,CAAqBC,KAArB,CAA2B,GAA3B,CAbT;AAcDW,yBAdC,GAcWH,OAAOE,QAAQA,QAAQD,MAAR,GAAiB,CAAzB,CAAP,CAdX;;AAAA,sBAgBHtE,GAAGyE,OAAH,CAAW,KAAX,MAAsB,CAAC,CAhBpB;AAAA;AAAA;AAAA;;AAAA,sBAiBDT,cAAcE,SAjBb;AAAA;AAAA;AAAA;;AAkBH;AACIQ,uBAnBD,GAmBWzG,KAAKyF,YAAL,EAAmBzF,IAnB9B;AAoBC0G,uBApBD,GAoBW,8BAAiBD,OAAjB,EAA0BF,SAA1B,EAAqCJ,SAArC,CApBX;;AAqBH5D,gCAAMC,IAAN,CAAW,yBAAX,EAAsCkE,OAAtC,EAA+CjE,IAA/C;AArBG;AAAA;;AAAA;AAAA;AAAA,uBAuBGF,gBAAMC,IAAN,CAAW,mBAAX,EAAgC,EAAET,MAAF,EAAMsB,OAAO0C,SAAb,EAAhC,CAvBH;;AAAA;AAAA,+BAyByB,MAAK/E,KAzB9B,EAyBGsB,SAzBH,gBAyBGA,SAzBH,EAyBcqE,MAzBd,gBAyBcA,MAzBd;;AA0BL,sBAAK3F,KAAL,CAAWR,sBAAX,CAAkC8B,SAAlC;AACA,sBAAKtB,KAAL,CAAWD,kBAAX,CAA8B,EAAEsB,YAAYC,SAAd,EAA9B;AACA,oBAAIqE,UAAUC,MAAMD,OAAO7E,MAAP,CAAc+E,QAApB,CAAd,EAA6C;AAC3C;AACIxD,uBAFuC,GAE/BsD,OAAO7E,MAAP,CAAc+E,QAAd,CAAuBC,MAAvB,CAA8B,CAA9B,CAF+B;;AAG3C,wBAAK9F,KAAL,CAAWF,qBAAX,CAAiC,EAAEuC,YAAF,EAAjC;AACD;AAhCI;AAAA;;AAAA;AAkCL;AACIqD,wBAnCC,GAmCS,8BAAiB1G,IAAjB,EAAuBuG,YAAY,CAAnC,EAAsCJ,YAAY,CAAlD,CAnCT;;AAoCL5D,gCAAMC,IAAN,CAAW,6BAAX,EAA0CkE,QAA1C,EAAmDjE,IAAnD;AACA,sBAAKzB,KAAL,CAAWR,sBAAX,CAAkC,MAAKQ,KAAL,CAAWsB,SAA7C;;AArCK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAlNU;;AAAA;AAAA;AAAA;AAAA;;AAAA,UA2PnByE,UA3PmB,GA2PN,gBAAQ;AACnB,UAAIpD,YAAJ;AACA,UAAIqD,MAAM,EAAV;AACA,UAAIC,WAAW,qBAAQjH,IAAR,EAAc,qBAAa;AACxCkH,kBAAUjC,MAAV,CAAiB,gBAAQ;AACvB,cAAIkC,kBAAkB,KAAtB;AACA;AACA,cAAIC,KAAK7D,IAAL,CAAUiD,OAAV,CAAkB7C,KAAK1D,KAAL,CAAWgF,MAA7B,MAAyC,CAAC,CAA9C,EAAiD;AAC/CmC,iBAAKpH,IAAL,GAAYoH,KAAKpH,IAAL,CAAUiF,MAAV,CAAiB,iBAAS;AACpC,kBACE/E,MAAM2D,KAAN,CAAY2C,OAAZ,CAAoB7C,KAAK1D,KAAL,CAAWgF,MAA/B,MAA2C,CAAC,CAA5C,IACA/E,MAAMwE,IAAN,CAAW8B,OAAX,CAAmB7C,KAAK1D,KAAL,CAAWgF,MAA9B,MAA0C,CAAC,CAF7C,EAGE;AACA,uBAAO,KAAP;AACD;AACD;AACAkC,gCAAkB,IAAlB;AACA,qBAAO,IAAP;AACD,aAVW,CAAZ;AAWAH,gBAAIhF,IAAJ,CAAS,SAASoF,KAAKpE,GAAvB;AACA,mBAAOmE,oBAAoB,IAA3B;AACD;AACDH,cAAIhF,IAAJ,CAAS,SAASoF,KAAKpE,GAAvB;AACA,iBAAO,IAAP;AACD,SApBD;AAqBD,OAtBc,CAAf;;AAwBA,aAAO,EAAEiE,kBAAF,EAAYD,QAAZ,EAAP;AACD,KAvRkB;;AAEjB,UAAK/G,KAAL,GAAa;AACXoH,cAAQ,IADG;AAEX9F,eAAS,KAFE;AAGXuD,eAAS,IAHE;AAIXwC,gBAAU,IAJC;AAKXnE,6BAAuB,KALZ;AAMXM,gCAA0B,KANf;AAOX8D,6BAAuB,KAPZ;AAQXjE,kBAAY,EARD;AASX/C,eAAS,IATE;AAUXP,YAAM;AAVK,KAAb;AAFiB;AAclB;;0BAEDwH,a,4BAAgB;AACd,SAAKxG,KAAL,CAAWJ,aAAX;AACA,SAAKqC,OAAL;AACD,G;;0BAEKA,O;;;;;;;;qBACU,KAAKjC,KAAL,CAAWR,sBAAX,CAAkC,KAAKQ,KAAL,CAAWsB,SAA7C,C;;;AAAVmF,e;;AACJ,mBAAKpG,QAAL,CAAc;AACZrB,sBAAMyH,EAAElD,OAAF,CAAUpC,IAAV,CAAeA;AADT,eAAd;;;;;;;;;;;;;;;;;0BAKFuF,kB,iCAAqB;AACnB,SAAKF,aAAL;AACD,G;;0BAEDG,yB,sCAA0BC,S,EAAW;AACnC,QAAI,KAAK5G,KAAL,CAAWhB,IAAX,KAAoB4H,UAAU5H,IAAlC,EAAwC;AACtC;AACA,WAAKqB,QAAL,CAAc;AACZrB,cAAM4H,UAAU5H;AADJ,OAAd;AAGD;AACF,G;AAmND;;;0BA+BA6H,M,qBAAS;AAAA;;AACP,QAAMC,cAAc,KAAK9G,KAAL,CAAWU,KAAX,CAAiBI,MAArC;AACA;AACA,QAAMiG,YACJ;AAAA;AAAA,QAAK,WAAU,kBAAf;AACE,uDAAO,UAAU,KAAK/C,QAAtB,EAAgC,OAAO,KAAK/E,KAAL,CAAWgF,MAAlD,EAA0D,aAAY,0BAAtE,GADF;AAEE;AAAA;AAAA;AACE,gBAAK,SADP;AAEE,mBAAS;AAAA,mBAAM,OAAKhE,WAAL,CAAiB,uBAAjB,EAA0C,IAA1C,CAAN;AAAA,WAFX;AAGE,qBAAU;AAHZ;AAAA;AAAA,OAFF;AASG,WAAKhB,KAAL,CAAWsB,OAAX,GACC;AAAA;AAAA;AACE,iBAAM,0BADR;AAEE,mBAAS,KAAKtB,KAAL,CAAWsB,OAFtB;AAGE,oBAAU;AAAA,mBAAM,OAAKN,WAAL,CAAiB,SAAjB,EAA4B,KAA5B,CAAN;AAAA,WAHZ;AAIE,kBAAQ,IAJV;AAKE,qBAAU;AALZ;AAOE,sCAAC,0BAAD;AACE,mBAAS,KAAKD,KAAL,CAAWZ,UAAX,CAAsB4H,GADjC;AAEE,iBAAO,KAAK/H,KAAL,CAAWqH,QAFpB;AAGE,oBAAU;AAAA,mBAAM,OAAKrG,WAAL,CAAiB,SAAjB,EAA4B,KAA5B,CAAN;AAAA,WAHZ;AAIE,oBAAU,KAAKiB;AAJjB;AAPF,OADD,GAgBC,EAzBJ;AA4BG,WAAKjC,KAAL,CAAWkD,qBAAX,GACC;AAAA;AAAA;AACE,iBAAM,0BADR;AAEE,mBAAS,KAAKlD,KAAL,CAAWkD,qBAFtB;AAGE,oBAAU;AAAA,mBAAM,OAAKlC,WAAL,CAAiB,uBAAjB,EAA0C,KAA1C,CAAN;AAAA,WAHZ;AAIE,kBAAQ,IAJV;AAKE,qBAAU;AALZ;AAOE,sCAAC,6BAAD;AACE,oBAAU;AAAA,mBAAM,OAAKA,WAAL,CAAiB,uBAAjB,EAA0C,KAA1C,CAAN;AAAA,WADZ;AAEE,oBAAU,KAAKiC;AAFjB;AAPF,OADD,GAcC,EA1CJ;AA6CG,WAAKjD,KAAL,CAAWwD,wBAAX,GACC;AAAA;AAAA;AACE,iBAAM,0BADR;AAEE,mBAAS,KAAKxD,KAAL,CAAWwD,wBAFtB;AAGE,oBAAU;AAAA,mBAAM,OAAKxC,WAAL,CAAiB,0BAAjB,EAA6C,KAA7C,CAAN;AAAA,WAHZ;AAIE,kBAAQ,IAJV;AAKE,qBAAU;AALZ;AAOE,sCAAC,6BAAD;AACE,mBAAS,KAAKhB,KAAL,CAAWqD,UADtB;AAEE,oBAAU;AAAA,mBAAM,OAAKrC,WAAL,CAAiB,0BAAjB,EAA6C,KAA7C,CAAN;AAAA,WAFZ;AAGE,oBAAU,KAAKmC;AAHjB;AAPF,OADD,GAeC;AA5DJ,KADF;AAiEA,QAAM6E,sBAAsB,SAAtBA,mBAAsB,GAAM;AAAA,mBACA,OAAKjH,KADL;AAAA,UACxB2F,MADwB,UACxBA,MADwB;AAAA,UAChBzG,KADgB,UAChBA,KADgB;AAAA,UACTF,IADS,UACTA,IADS;AAAA,UAE9BkI,KAF8B,GAEtB,EAAE3H,SAAS,EAAX,EAAe4H,SAAS,EAAxB,EAFsB;;AAGhC,UAAInI,KAAKqG,MAAL,KAAgB,CAApB,EAAuB;AACrB,eAAO6B,KAAP;AACD;AACD,UAAIvB,MAAJ,EAAY;AACV,YAAI,CAACC,MAAMD,OAAO7E,MAAP,CAAc+E,QAApB,CAAL,EAAoC;AAClC,cAAI,CAAC3G,KAAD,IAAU,CAACA,MAAM8C,GAArB,EAA0B;AACxB,mBAAOkF,KAAP;AACD;AACD,iBAAO;AACL3H,qBAAS,OAAKN,KAAL,CAAWM,OAAX,GAAqB,OAAKN,KAAL,CAAWM,OAAhC,GAA0C,CAAC,SAASL,MAAMmD,KAAhB,CAD9C;AAEL8E,qBAAS,CAACjI,MAAM8C,GAAN,GAAY,EAAb;AAFJ,WAAP;AAID,SARD,MAQO;AACL,cAAIK,QAAQsD,OAAO7E,MAAP,CAAc+E,QAAd,CAAuBC,MAAvB,CAA8B,CAA9B,CAAZ;AACA,iBAAO;AACLvG,qBAAS,OAAKN,KAAL,CAAWM,OAAX,GAAqB,OAAKN,KAAL,CAAWM,OAAhC,GAA0C,CAAC,SAAS8C,KAAV,CAD9C;AAEL8E,qBAAS,CAAC,SAAS9E,KAAV;AAFJ,WAAP;AAID;AACF,OAhBD,MAgBO;AACL,eAAO;AACL9C,mBAAS,OAAKN,KAAL,CAAWM,OAAX,GAAqB,OAAKN,KAAL,CAAWM,OAAhC,GAA0C,CAAC,SAASP,KAAK,CAAL,EAAQgD,GAAlB,CAD9C;AAELmF,mBAAS,CAAC,MAAD;AAFJ,SAAP;AAID;AACF,KA5BD;;AA8BA,QAAMC,sBAAsB,SAAtBA,mBAAsB,OAAQ;AAClC,aACE,8BAAC,QAAD;AACE,eACE;AAAA;AAAA;AACE,uBAAU,iBADZ;AAEE,0BAAc;AAAA,qBAAM,OAAKvD,SAAL,CAAeuC,KAAKpE,GAApB,CAAN;AAAA,aAFhB;AAGE,0BAAc,OAAK+B;AAHrB;AAKE;AAAC,gCAAD;AAAA;AACE,yBAAU,gBADZ;AAEE,uBAAS;AAAA,uBAAKG,EAAEmD,eAAF,EAAL;AAAA,eAFX;AAGE,kBAAI,cAAcP,YAAY/F,EAA1B,GAA+B,iBAA/B,GAAmDqF,KAAKpE;AAH9D;AAKGoE,iBAAKvD;AALR,WALF;AAYE;AAAA;AAAA,cAAK,WAAU,MAAf;AACE;AAAA;AAAA,gBAAS,OAAM,0BAAf;AACE;AACE,sBAAK,QADP;AAEE,2BAAU,uBAFZ;AAGE,yBAAS,oBAAK;AACZqB,oBAAEmD,eAAF;AACA,yBAAK3E,WAAL,CAAiB0D,IAAjB;AACD,iBANH;AAOE,uBAAO,EAAEkB,SAAS,OAAKrI,KAAL,CAAW6E,OAAX,IAAsBsC,KAAKpE,GAA3B,GAAiC,OAAjC,GAA2C,MAAtD;AAPT;AADF,aADF;AAYE;AAAA;AAAA,gBAAS,OAAM,0BAAf;AACE;AACE,sBAAK,MADP;AAEE,2BAAU,uBAFZ;AAGE,yBAAS,oBAAK;AACZkC,oBAAEmD,eAAF;AACA,yBAAKhE,aAAL,CAAmB+C,KAAKpE,GAAxB;AACD,iBANH;AAOE,uBAAO,EAAEsF,SAAS,OAAKrI,KAAL,CAAW6E,OAAX,IAAsBsC,KAAKpE,GAA3B,GAAiC,OAAjC,GAA2C,MAAtD;AAPT;AADF;AAZF;AAZF,SAFJ;AA2CE,aAAK,KAAKoE,KAAKpE;AA3CjB,QADF;AA+CD,KAhDD;;AAkDA,QAAIuF,aAAaN,qBAAjB;AACA,QAAIhB,iBAAJ;AACA,QAAI,KAAKhH,KAAL,CAAWgF,MAAf,EAAuB;AACrB,UAAIvC,MAAM,KAAKqE,UAAL,CAAgB,KAAK9G,KAAL,CAAWD,IAA3B,CAAV;AACAiH,iBAAWvE,IAAIuE,QAAf;AACAsB,iBAAWhI,OAAX,GAAqBmC,IAAIsE,GAAzB;AACD,KAJD,MAIO;AACLC,iBAAW,KAAKhH,KAAL,CAAWD,IAAtB;AACD;;AAED,WACE;AAAA;AAAA;AACG+H,eADH;AAEGd,eAASZ,MAAT,GAAkB,CAAlB,GACC;AAAA;AAAA;AACE,qBAAU,eADZ;AAEE,iBAAO,EAAEmC,WAAWC,SAASC,SAASC,IAAT,CAAcC,YAAvB,IAAuC9I,UAAvC,GAAoD,IAAjE;AAFT;AAIE;AAAA;AAAA;AACE,uBAAU,gBADZ;AAEE,iCAAqByI,WAAWhI,OAFlC;AAGE,iCAAqBgI,WAAWJ,OAHlC;AAIE,0BAAcI,WAAWhI,OAJ3B;AAKE,0BAAcgI,WAAWJ,OAL3B;AAME,sBAAU,KAAK3G,QANjB;AAOE,sBAAU,KAAK+D,QAPjB;AAQE,2BARF;AASE,oBAAQ,KAAKC;AATf;AAWE,wCAAC,QAAD;AACE,uBAAU,oBADZ;AAEE,mBACE;AAAC,kCAAD;AAAA;AACE,yBAAS,oBAAK;AACZN,oBAAEmD,eAAF;AACA,yBAAKpG,aAAL;AACD,iBAJH;AAKE,oBAAI,cAAc6F,YAAY/F,EAA1B,GAA+B;AALrC;AAOE,8DAAM,MAAK,QAAX,EAAoB,OAAO,EAAE8G,aAAa,CAAf,EAA3B,GAPF;AAAA;AAAA,aAHJ;AAcE,iBAAI;AAdN,YAXF;AA2BG5B,mBAAS6B,GAAT,CAAa,gBAAQ;AACpB,mBACE;AAAC,sBAAD;AAAA;AACE,uBACE;AAAA;AAAA;AACE,+BAAU,iBADZ;AAEE,kCAAc;AAAA,6BAAM,OAAKjE,SAAL,CAAeuC,KAAKpE,GAApB,CAAN;AAAA,qBAFhB;AAGE,kCAAc,OAAK+B;AAHrB;AAKE;AAAC,wCAAD;AAAA;AACE,iCAAU,gBADZ;AAEE,+BAAS,oBAAK;AACZG,0BAAEmD,eAAF;AACA,+BAAKpG,aAAL;AACD,uBALH;AAME,0BAAI,cAAc6F,YAAY/F,EAA1B,GAA+B,qBAA/B,GAAuDqF,KAAKpE;AANlE;AAQE,oEAAM,MAAK,aAAX,EAAyB,OAAO,EAAE6F,aAAa,CAAf,EAAhC,GARF;AASGzB,yBAAK7D;AATR,mBALF;AAgBE;AAAA;AAAA,sBAAK,WAAU,MAAf;AACE;AAAA;AAAA,wBAAS,OAAM,0BAAf;AACE;AACE,8BAAK,QADP;AAEE,mCAAU,uBAFZ;AAGE,iCAAS,oBAAK;AACZ2B,4BAAEmD,eAAF;AACA,iCAAKjE,iBAAL,CAAuBgD,KAAKpE,GAA5B;AACD,yBANH;AAOE,+BAAO,EAAEsF,SAAS,OAAKrI,KAAL,CAAW6E,OAAX,IAAsBsC,KAAKpE,GAA3B,GAAiC,OAAjC,GAA2C,MAAtD;AAPT;AADF,qBADF;AAYE;AAAA;AAAA,wBAAS,OAAM,0BAAf;AACE;AACE,8BAAK,MADP;AAEE,mCAAU,uBAFZ;AAGE,+BAAO,EAAEsF,SAAS,OAAKrI,KAAL,CAAW6E,OAAX,IAAsBsC,KAAKpE,GAA3B,GAAiC,OAAjC,GAA2C,MAAtD,EAHT;AAIE,iCAAS,oBAAK;AACZkC,4BAAEmD,eAAF;AACA,iCAAKpH,WAAL,CAAiB,0BAAjB,EAA6C,IAA7C;AACA,iCAAKI,QAAL,CAAc;AACZiC,wCAAY8D;AADA,2BAAd;AAGD;AAVH;AADF,qBAZF;AA0BE;AAAA;AAAA,wBAAS,OAAM,0BAAf;AACE;AACE,8BAAK,MADP;AAEE,mCAAU,uBAFZ;AAGE,+BAAO,EAAEkB,SAAS,OAAKrI,KAAL,CAAW6E,OAAX,IAAsBsC,KAAKpE,GAA3B,GAAiC,OAAjC,GAA2C,MAAtD,EAHT;AAIE,iCAAS,oBAAK;AACZkC,4BAAEmD,eAAF;AACA,iCAAKpH,WAAL,CAAiB,SAAjB,EAA4B,IAA5B;AACA,iCAAKI,QAAL,CAAc;AACZiG,sCAAUF,KAAKpE;AADH,2BAAd;AAGD;AAVH;AADF;AA1BF;AAhBF,iBAFJ;AAiEE,qBAAK,SAASoE,KAAKpE,GAjErB;AAkEE,oDAAiCoE,KAAKpH,IAAL,CAAUqG,MAAV,GAAmB,EAAnB,GAAwB,mBAAzD;AAlEF;AAoEGe,mBAAKpH,IAAL,CAAU8I,GAAV,CAAcV,mBAAd;AApEH,aADF;AAwED,WAzEA;AA3BH;AAJF,OADD,GA4GG;AA9GN,KADF;AAkHD,G;;;EA5kByBW,oB,WACnBC,S,GAAY;AACjBtH,SAAOuH,oBAAUC,MADA;AAEjBhJ,SAAO+I,oBAAUC,MAFA;AAGjB5G,aAAW2G,oBAAUE,MAHJ;AAIjBnJ,QAAMiJ,oBAAUG,KAJC;AAKjB5I,0BAAwByI,oBAAUI,IALjB;AAMjBjJ,cAAY6I,oBAAUC,MANL;AAOjBzI,sBAAoBwI,oBAAUI,IAPb;AAQjBC,oBAAkBL,oBAAUI,IARX;AASjB1I,uBAAqBsI,oBAAUI,IATd;AAUjBzI,iBAAeqI,oBAAUI,IAVR;AAWjB5H,WAASwH,oBAAUC,MAXF;AAYjBvC,UAAQsC,oBAAUC,MAZD;AAajBrI,cAAYoI,oBAAUI,IAbL;AAcjBvI,yBAAuBmI,oBAAUI,IAdhB;AAejBtI,sBAAoBkI,oBAAUI;AAfb,C;kBA8kBN,gCAAWtJ,aAAX,C","file":"InterfaceMenu.js","sourceRoot":"C:/Users/DUOYI/Desktop/api/test/vendors","sourcesContent":["import React, { PureComponent as Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {\n  fetchInterfaceListMenu,\n  fetchInterfaceList,\n  fetchInterfaceCatList,\n  fetchInterfaceData,\n  deleteInterfaceData,\n  deleteInterfaceCatData,\n  initInterface\n} from '../../../../reducer/modules/interface.js';\nimport { getProject } from '../../../../reducer/modules/project.js';\nimport { Input, Icon, Button, Modal, message, Tree, Tooltip } from 'antd';\nimport AddInterfaceForm from './AddInterfaceForm';\nimport AddInterfaceCatForm from './AddInterfaceCatForm';\nimport axios from 'axios';\nimport { Link, withRouter } from 'react-router-dom';\nimport produce from 'immer';\nimport { arrayChangeIndex } from '../../../../common.js';\n\nimport './interfaceMenu.scss';\n\nconst confirm = Modal.confirm;\nconst TreeNode = Tree.TreeNode;\nconst headHeight = 240; // menu顶部到网页顶部部分的高度\n\n@connect(\n  state => {\n    return {\n      list: state.inter.list,\n      inter: state.inter.curdata,\n      curProject: state.project.currProject,\n      expands: []\n    };\n  },\n  {\n    fetchInterfaceListMenu,\n    fetchInterfaceData,\n    deleteInterfaceCatData,\n    deleteInterfaceData,\n    initInterface,\n    getProject,\n    fetchInterfaceCatList,\n    fetchInterfaceList\n  }\n)\nclass InterfaceMenu extends Component {\n  static propTypes = {\n    match: PropTypes.object,\n    inter: PropTypes.object,\n    projectId: PropTypes.string,\n    list: PropTypes.array,\n    fetchInterfaceListMenu: PropTypes.func,\n    curProject: PropTypes.object,\n    fetchInterfaceData: PropTypes.func,\n    addInterfaceData: PropTypes.func,\n    deleteInterfaceData: PropTypes.func,\n    initInterface: PropTypes.func,\n    history: PropTypes.object,\n    router: PropTypes.object,\n    getProject: PropTypes.func,\n    fetchInterfaceCatList: PropTypes.func,\n    fetchInterfaceList: PropTypes.func\n  };\n\n  /**\n   * @param {String} key\n   */\n  changeModal = (key, status) => {\n    //visible add_cat_modal_visible change_cat_modal_visible del_cat_modal_visible\n    let newState = {};\n    newState[key] = status;\n    this.setState(newState);\n  };\n\n  handleCancel = () => {\n    this.setState({\n      visible: false\n    });\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      curKey: null,\n      visible: false,\n      delIcon: null,\n      curCatid: null,\n      add_cat_modal_visible: false,\n      change_cat_modal_visible: false,\n      del_cat_modal_visible: false,\n      curCatdata: {},\n      expands: null,\n      list: []\n    };\n  }\n\n  handleRequest() {\n    this.props.initInterface();\n    this.getList();\n  }\n\n  async getList() {\n    let r = await this.props.fetchInterfaceListMenu(this.props.projectId);\n    this.setState({\n      list: r.payload.data.data\n    });\n  }\n\n  componentWillMount() {\n    this.handleRequest();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.list !== nextProps.list) {\n      // console.log('next', nextProps.list)\n      this.setState({\n        list: nextProps.list\n      });\n    }\n  }\n\n  onSelect = selectedKeys => {\n    const { history, match } = this.props;\n    let curkey = selectedKeys[0];\n\n    if (!curkey || !selectedKeys) {\n      return false;\n    }\n    let basepath = '/project/' + match.params.id + '/interface/api';\n    if (curkey === 'root') {\n      history.push(basepath);\n    } else {\n      history.push(basepath + '/' + curkey);\n    }\n    this.setState({\n      expands: null\n    });\n  };\n\n  changeExpands = () => {\n    this.setState({\n      expands: null\n    });\n  };\n\n  handleAddInterface = (data, cb) => {\n    data.project_id = this.props.projectId;\n    axios.post('/api/interface/add', data).then(res => {\n      if (res.data.errcode !== 0) {\n        return message.error(res.data.errmsg);\n      }\n      message.success('接口添加成功');\n      let interfaceId = res.data.data._id;\n      this.props.history.push('/project/' + this.props.projectId + '/interface/api/' + interfaceId);\n      this.getList();\n      this.setState({\n        visible: false\n      });\n      if (cb) {\n        cb();\n      }\n    });\n  };\n\n  handleAddInterfaceCat = data => {\n    data.project_id = this.props.projectId;\n    axios.post('/api/interface/add_cat', data).then(res => {\n      if (res.data.errcode !== 0) {\n        return message.error(res.data.errmsg);\n      }\n      message.success('接口分类添加成功');\n      this.getList();\n      this.props.getProject(data.project_id);\n      this.setState({\n        add_cat_modal_visible: false\n      });\n    });\n  };\n\n  handleChangeInterfaceCat = data => {\n    data.project_id = this.props.projectId;\n\n    let params = {\n      catid: this.state.curCatdata._id,\n      name: data.name,\n      desc: data.desc\n    };\n\n    axios.post('/api/interface/up_cat', params).then(res => {\n      if (res.data.errcode !== 0) {\n        return message.error(res.data.errmsg);\n      }\n      message.success('接口分类更新成功');\n      this.getList();\n      this.props.getProject(data.project_id);\n      this.setState({\n        change_cat_modal_visible: false\n      });\n    });\n  };\n\n  showConfirm = data => {\n    let that = this;\n    let id = data._id;\n    let catid = data.catid;\n    const ref = confirm({\n      title: '您确认删除此接口????',\n      content: '温馨提示：接口删除后，无法恢复',\n      okText: '确认',\n      cancelText: '取消',\n      async onOk() {\n        await that.props.deleteInterfaceData(id, that.props.projectId);\n        await that.getList();\n        await that.props.fetchInterfaceCatList({ catid });\n        ref.destroy();\n        that.props.history.push(\n          '/project/' + that.props.match.params.id + '/interface/api/cat_' + catid\n        );\n      },\n      onCancel() {\n        ref.destroy();\n      }\n    });\n  };\n\n  showDelCatConfirm = catid => {\n    let that = this;\n    const ref = confirm({\n      title: '确定删除此接口分类吗？',\n      content: '温馨提示：该操作会删除该分类下所有接口，接口删除后无法恢复',\n      okText: '确认',\n      cancelText: '取消',\n      async onOk() {\n        await that.props.deleteInterfaceCatData(catid, that.props.projectId);\n        await that.getList();\n        // await that.props.getProject(that.props.projectId)\n        await that.props.fetchInterfaceList({ project_id: that.props.projectId });\n        that.props.history.push('/project/' + that.props.match.params.id + '/interface/api');\n        ref.destroy();\n      },\n      onCancel() {}\n    });\n  };\n\n  copyInterface = async id => {\n    let interfaceData = await this.props.fetchInterfaceData(id);\n    // let data = JSON.parse(JSON.stringify(interfaceData.payload.data.data));\n    // data.title = data.title + '_copy';\n    // data.path = data.path + '_' + Date.now();\n    let data = interfaceData.payload.data.data;\n    let newData = produce(data, draftData => {\n      draftData.title = draftData.title + '_copy';\n      draftData.path = draftData.path + '_' + Date.now();\n    });\n\n    axios.post('/api/interface/add', newData).then(async res => {\n      if (res.data.errcode !== 0) {\n        return message.error(res.data.errmsg);\n      }\n      message.success('接口添加成功');\n      let interfaceId = res.data.data._id;\n      await this.getList();\n      this.props.history.push('/project/' + this.props.projectId + '/interface/api/' + interfaceId);\n      this.setState({\n        visible: false\n      });\n    });\n  };\n\n  enterItem = id => {\n    this.setState({ delIcon: id });\n  };\n\n  leaveItem = () => {\n    this.setState({ delIcon: null });\n  };\n\n  onFilter = e => {\n    this.setState({\n      filter: e.target.value,\n      list: JSON.parse(JSON.stringify(this.props.list))\n    });\n  };\n\n  onExpand = e => {\n    this.setState({\n      expands: e\n    });\n  };\n\n  onDrop = async e => {\n    const dropCatIndex = e.node.props.pos.split('-')[1] - 1;\n    const dragCatIndex = e.dragNode.props.pos.split('-')[1] - 1;\n    if (dropCatIndex < 0 || dragCatIndex < 0) {\n      return;\n    }\n    const { list } = this.props;\n    const dropCatId = this.props.list[dropCatIndex]._id;\n    const id = e.dragNode.props.eventKey;\n    const dragCatId = this.props.list[dragCatIndex]._id;\n\n    const dropPos = e.node.props.pos.split('-');\n    const dropIndex = Number(dropPos[dropPos.length - 1]);\n    const dragPos = e.dragNode.props.pos.split('-');\n    const dragIndex = Number(dragPos[dragPos.length - 1]);\n\n    if (id.indexOf('cat') === -1) {\n      if (dropCatId === dragCatId) {\n        // 同一个分类下的接口交换顺序\n        let colList = list[dropCatIndex].list;\n        let changes = arrayChangeIndex(colList, dragIndex, dropIndex);\n        axios.post('/api/interface/up_index', changes).then();\n      } else {\n        await axios.post('/api/interface/up', { id, catid: dropCatId });\n      }\n      const { projectId, router } = this.props;\n      this.props.fetchInterfaceListMenu(projectId);\n      this.props.fetchInterfaceList({ project_id: projectId });\n      if (router && isNaN(router.params.actionId)) {\n        // 更新分类list下的数据\n        let catid = router.params.actionId.substr(4);\n        this.props.fetchInterfaceCatList({ catid });\n      }\n    } else {\n      // 分类之间拖动\n      let changes = arrayChangeIndex(list, dragIndex - 1, dropIndex - 1);\n      axios.post('/api/interface/up_cat_index', changes).then();\n      this.props.fetchInterfaceListMenu(this.props.projectId);\n    }\n  };\n  // 数据过滤\n  filterList = list => {\n    let that = this;\n    let arr = [];\n    let menuList = produce(list, draftList => {\n      draftList.filter(item => {\n        let interfaceFilter = false;\n        // arr = [];\n        if (item.name.indexOf(that.state.filter) === -1) {\n          item.list = item.list.filter(inter => {\n            if (\n              inter.title.indexOf(that.state.filter) === -1 &&\n              inter.path.indexOf(that.state.filter) === -1\n            ) {\n              return false;\n            }\n            //arr.push('cat_' + inter.catid)\n            interfaceFilter = true;\n            return true;\n          });\n          arr.push('cat_' + item._id);\n          return interfaceFilter === true;\n        }\n        arr.push('cat_' + item._id);\n        return true;\n      });\n    });\n\n    return { menuList, arr };\n  };\n\n  render() {\n    const matchParams = this.props.match.params;\n    // let menuList = this.state.list;\n    const searchBox = (\n      <div className=\"interface-filter\">\n        <Input onChange={this.onFilter} value={this.state.filter} placeholder=\"搜索接口\" />\n        <Button\n          type=\"primary\"\n          onClick={() => this.changeModal('add_cat_modal_visible', true)}\n          className=\"btn-filter\"\n        >\n          添加分类\n        </Button>\n        {this.state.visible ? (\n          <Modal\n            title=\"添加接口\"\n            visible={this.state.visible}\n            onCancel={() => this.changeModal('visible', false)}\n            footer={null}\n            className=\"addcatmodal\"\n          >\n            <AddInterfaceForm\n              catdata={this.props.curProject.cat}\n              catid={this.state.curCatid}\n              onCancel={() => this.changeModal('visible', false)}\n              onSubmit={this.handleAddInterface}\n            />\n          </Modal>\n        ) : (\n          ''\n        )}\n\n        {this.state.add_cat_modal_visible ? (\n          <Modal\n            title=\"添加分类\"\n            visible={this.state.add_cat_modal_visible}\n            onCancel={() => this.changeModal('add_cat_modal_visible', false)}\n            footer={null}\n            className=\"addcatmodal\"\n          >\n            <AddInterfaceCatForm\n              onCancel={() => this.changeModal('add_cat_modal_visible', false)}\n              onSubmit={this.handleAddInterfaceCat}\n            />\n          </Modal>\n        ) : (\n          ''\n        )}\n\n        {this.state.change_cat_modal_visible ? (\n          <Modal\n            title=\"修改分类\"\n            visible={this.state.change_cat_modal_visible}\n            onCancel={() => this.changeModal('change_cat_modal_visible', false)}\n            footer={null}\n            className=\"addcatmodal\"\n          >\n            <AddInterfaceCatForm\n              catdata={this.state.curCatdata}\n              onCancel={() => this.changeModal('change_cat_modal_visible', false)}\n              onSubmit={this.handleChangeInterfaceCat}\n            />\n          </Modal>\n        ) : (\n          ''\n        )}\n      </div>\n    );\n    const defaultExpandedKeys = () => {\n      const { router, inter, list } = this.props,\n        rNull = { expands: [], selects: [] };\n      if (list.length === 0) {\n        return rNull;\n      }\n      if (router) {\n        if (!isNaN(router.params.actionId)) {\n          if (!inter || !inter._id) {\n            return rNull;\n          }\n          return {\n            expands: this.state.expands ? this.state.expands : ['cat_' + inter.catid],\n            selects: [inter._id + '']\n          };\n        } else {\n          let catid = router.params.actionId.substr(4);\n          return {\n            expands: this.state.expands ? this.state.expands : ['cat_' + catid],\n            selects: ['cat_' + catid]\n          };\n        }\n      } else {\n        return {\n          expands: this.state.expands ? this.state.expands : ['cat_' + list[0]._id],\n          selects: ['root']\n        };\n      }\n    };\n\n    const itemInterfaceCreate = item => {\n      return (\n        <TreeNode\n          title={\n            <div\n              className=\"container-title\"\n              onMouseEnter={() => this.enterItem(item._id)}\n              onMouseLeave={this.leaveItem}\n            >\n              <Link\n                className=\"interface-item\"\n                onClick={e => e.stopPropagation()}\n                to={'/project/' + matchParams.id + '/interface/api/' + item._id}\n              >\n                {item.title}\n              </Link>\n              <div className=\"btns\">\n                <Tooltip title=\"删除接口\">\n                  <Icon\n                    type=\"delete\"\n                    className=\"interface-delete-icon\"\n                    onClick={e => {\n                      e.stopPropagation();\n                      this.showConfirm(item);\n                    }}\n                    style={{ display: this.state.delIcon == item._id ? 'block' : 'none' }}\n                  />\n                </Tooltip>\n                <Tooltip title=\"复制接口\">\n                  <Icon\n                    type=\"copy\"\n                    className=\"interface-delete-icon\"\n                    onClick={e => {\n                      e.stopPropagation();\n                      this.copyInterface(item._id);\n                    }}\n                    style={{ display: this.state.delIcon == item._id ? 'block' : 'none' }}\n                  />\n                </Tooltip>\n              </div>\n              {/*<Dropdown overlay={menu(item)} trigger={['click']} onClick={e => e.stopPropagation()}>\n            <Icon type='ellipsis' className=\"interface-delete-icon\" style={{ opacity: this.state.delIcon == item._id ? 1 : 0 }}/>\n          </Dropdown>*/}\n            </div>\n          }\n          key={'' + item._id}\n        />\n      );\n    };\n\n    let currentKes = defaultExpandedKeys();\n    let menuList;\n    if (this.state.filter) {\n      let res = this.filterList(this.state.list);\n      menuList = res.menuList;\n      currentKes.expands = res.arr;\n    } else {\n      menuList = this.state.list;\n    }\n\n    return (\n      <div>\n        {searchBox}\n        {menuList.length > 0 ? (\n          <div\n            className=\"tree-wrappper\"\n            style={{ maxHeight: parseInt(document.body.clientHeight) - headHeight + 'px' }}\n          >\n            <Tree\n              className=\"interface-list\"\n              defaultExpandedKeys={currentKes.expands}\n              defaultSelectedKeys={currentKes.selects}\n              expandedKeys={currentKes.expands}\n              selectedKeys={currentKes.selects}\n              onSelect={this.onSelect}\n              onExpand={this.onExpand}\n              draggable\n              onDrop={this.onDrop}\n            >\n              <TreeNode\n                className=\"item-all-interface\"\n                title={\n                  <Link\n                    onClick={e => {\n                      e.stopPropagation();\n                      this.changeExpands();\n                    }}\n                    to={'/project/' + matchParams.id + '/interface/api'}\n                  >\n                    <Icon type=\"folder\" style={{ marginRight: 5 }} />\n                    全部接口\n                  </Link>\n                }\n                key=\"root\"\n              />\n              {menuList.map(item => {\n                return (\n                  <TreeNode\n                    title={\n                      <div\n                        className=\"container-title\"\n                        onMouseEnter={() => this.enterItem(item._id)}\n                        onMouseLeave={this.leaveItem}\n                      >\n                        <Link\n                          className=\"interface-item\"\n                          onClick={e => {\n                            e.stopPropagation();\n                            this.changeExpands();\n                          }}\n                          to={'/project/' + matchParams.id + '/interface/api/cat_' + item._id}\n                        >\n                          <Icon type=\"folder-open\" style={{ marginRight: 5 }} />\n                          {item.name}\n                        </Link>\n                        <div className=\"btns\">\n                          <Tooltip title=\"删除分类\">\n                            <Icon\n                              type=\"delete\"\n                              className=\"interface-delete-icon\"\n                              onClick={e => {\n                                e.stopPropagation();\n                                this.showDelCatConfirm(item._id);\n                              }}\n                              style={{ display: this.state.delIcon == item._id ? 'block' : 'none' }}\n                            />\n                          </Tooltip>\n                          <Tooltip title=\"修改分类\">\n                            <Icon\n                              type=\"edit\"\n                              className=\"interface-delete-icon\"\n                              style={{ display: this.state.delIcon == item._id ? 'block' : 'none' }}\n                              onClick={e => {\n                                e.stopPropagation();\n                                this.changeModal('change_cat_modal_visible', true);\n                                this.setState({\n                                  curCatdata: item\n                                });\n                              }}\n                            />\n                          </Tooltip>\n                          <Tooltip title=\"添加接口\">\n                            <Icon\n                              type=\"plus\"\n                              className=\"interface-delete-icon\"\n                              style={{ display: this.state.delIcon == item._id ? 'block' : 'none' }}\n                              onClick={e => {\n                                e.stopPropagation();\n                                this.changeModal('visible', true);\n                                this.setState({\n                                  curCatid: item._id\n                                });\n                              }}\n                            />\n                          </Tooltip>\n                        </div>\n\n                        {/*<Dropdown overlay={menu(item)} trigger={['click']} onClick={e => e.stopPropagation()}>\n                <Icon type='ellipsis' className=\"interface-delete-icon\" />\n              </Dropdown>*/}\n                      </div>\n                    }\n                    key={'cat_' + item._id}\n                    className={`interface-item-nav ${item.list.length ? '' : 'cat_switch_hidden'}`}\n                  >\n                    {item.list.map(itemInterfaceCreate)}\n                  </TreeNode>\n                );\n              })}\n            </Tree>\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default withRouter(InterfaceMenu);\n"]}