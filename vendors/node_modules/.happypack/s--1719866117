'use strict';

exports.__esModule = true;

var _tooltip = require('antd/lib/tooltip');

var _tooltip2 = _interopRequireDefault(_tooltip);

var _card = require('antd/lib/card');

var _card2 = _interopRequireDefault(_card);

var _icon = require('antd/lib/icon');

var _icon2 = _interopRequireDefault(_icon);

var _input = require('antd/lib/input');

var _input2 = _interopRequireDefault(_input);

var _alert = require('antd/lib/alert');

var _alert2 = _interopRequireDefault(_alert);

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _message2 = require('antd/lib/message');

var _message3 = _interopRequireDefault(_message2);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _modal = require('antd/lib/modal');

var _modal2 = _interopRequireDefault(_modal);

var _dec, _class, _class2, _temp;

require('./ProjectCard.scss');

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactRedux = require('react-redux');

var _follow = require('../../reducer/modules/follow');

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reactRouter = require('react-router');

var _common = require('../../common');

var _variable = require('../../constants/variable.js');

var _variable2 = _interopRequireDefault(_variable);

var _immer = require('immer');

var _immer2 = _interopRequireDefault(_immer);

var _project = require('../../reducer/modules/project');

var _common2 = require('../../common.js');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var confirm = _modal2.default.confirm;

var ProjectCard = (_dec = (0, _reactRedux.connect)(function (state) {
  return {
    uid: state.user.uid,
    currPage: state.project.currPage
  };
}, {
  delFollow: _follow.delFollow,
  addFollow: _follow.addFollow,
  getProject: _project.getProject,
  checkProjectName: _project.checkProjectName,
  copyProjectMsg: _project.copyProjectMsg
}), _dec(_class = (0, _reactRouter.withRouter)(_class = (_temp = _class2 = function (_Component) {
  (0, _inherits3.default)(ProjectCard, _Component);

  function ProjectCard(props) {
    var _this2 = this;

    (0, _classCallCheck3.default)(this, ProjectCard);

    var _this = (0, _possibleConstructorReturn3.default)(this, _Component.call(this, props));

    _this.copy = function () {
      var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee(projectName) {
        var id, projectData, data, newData;
        return _regenerator2.default.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                id = _this.props.projectData._id;
                _context.next = 3;
                return _this.props.getProject(id);

              case 3:
                projectData = _context.sent;
                data = projectData.payload.data.data;
                newData = (0, _immer2.default)(data, function (draftData) {
                  draftData.preName = draftData.name;
                  draftData.name = projectName;
                });
                _context.next = 8;
                return _this.props.copyProjectMsg(newData);

              case 8:
                _message3.default.success('项目复制成功');
                _this.props.callbackResult();

              case 10:
              case 'end':
                return _context.stop();
            }
          }
        }, _callee, _this2);
      }));

      return function (_x) {
        return _ref.apply(this, arguments);
      };
    }();

    _this.showConfirm = function () {
      var that = _this;

      confirm({
        title: '确认复制 ' + that.props.projectData.name + ' 项目吗？',
        okText: '确认',
        cancelText: '取消',
        content: _react2.default.createElement(
          'div',
          { style: { marginTop: '10px', fontSize: '13px', lineHeight: '25px' } },
          _react2.default.createElement(_alert2.default, {
            message: '\u8BE5\u64CD\u4F5C\u5C06\u4F1A\u590D\u5236 ' + that.props.projectData.name + ' \u4E0B\u7684\u6240\u6709\u63A5\u53E3\u96C6\u5408\uFF0C\u4F46\u4E0D\u5305\u62EC\u6D4B\u8BD5\u96C6\u5408\u4E2D\u7684\u63A5\u53E3',
            type: 'info'
          }),
          _react2.default.createElement(
            'div',
            { style: { marginTop: '16px' } },
            _react2.default.createElement(
              'p',
              null,
              _react2.default.createElement(
                'b',
                null,
                '\u9879\u76EE\u540D\u79F0:'
              )
            ),
            _react2.default.createElement(_input2.default, { id: 'project_name', placeholder: '\u9879\u76EE\u540D\u79F0' })
          )
        ),
        onOk: function onOk() {
          var _this3 = this;

          return (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee2() {
            var projectName, group_id;
            return _regenerator2.default.wrap(function _callee2$(_context2) {
              while (1) {
                switch (_context2.prev = _context2.next) {
                  case 0:
                    projectName = (0, _common2.trim)(document.getElementById('project_name').value);

                    // 查询项目名称是否重复

                    group_id = that.props.projectData.group_id;
                    _context2.next = 4;
                    return that.props.checkProjectName(projectName, group_id);

                  case 4:
                    that.copy(projectName);

                  case 5:
                  case 'end':
                    return _context2.stop();
                }
              }
            }, _callee2, _this3);
          }))();
        },

        iconType: 'copy',
        onCancel: function onCancel() {}
      });
    };

    _this.del = function () {
      var id = _this.props.projectData.projectid || _this.props.projectData._id;
      _this.props.delFollow(id).then(function (res) {
        if (res.payload.data.errcode === 0) {
          _this.props.callbackResult();
          // message.success('已取消关注！');  // 星号已做出反馈 无需重复提醒用户
        }
      });
    };

    _this.add = function () {
      var _this$props = _this.props,
          uid = _this$props.uid,
          projectData = _this$props.projectData;

      var param = {
        uid: uid,
        projectid: projectData._id,
        projectname: projectData.name,
        icon: projectData.icon || _variable2.default.PROJECT_ICON[0],
        color: projectData.color || _variable2.default.PROJECT_COLOR.blue
      };
      _this.props.addFollow(param).then(function (res) {
        if (res.payload.data.errcode === 0) {
          _this.props.callbackResult();
          // message.success('已添加关注！');  // 星号已做出反馈 无需重复提醒用户
        }
      });
    };

    _this.add = (0, _common.debounce)(_this.add, 400);
    _this.del = (0, _common.debounce)(_this.del, 400);
    return _this;
  }

  // 复制项目的二次确认


  ProjectCard.prototype.render = function render() {
    var _this4 = this;

    var _props = this.props,
        projectData = _props.projectData,
        inFollowPage = _props.inFollowPage,
        isShow = _props.isShow;

    return _react2.default.createElement(
      'div',
      { className: 'card-container' },
      _react2.default.createElement(
        _card2.default,
        {
          bordered: false,
          className: 'm-card',
          onClick: function onClick() {
            return _this4.props.history.push('/project/' + (projectData.projectid || projectData._id));
          }
        },
        _react2.default.createElement(_icon2.default, {
          type: projectData.icon || 'star-o',
          className: 'ui-logo',
          style: {
            backgroundColor: _variable2.default.PROJECT_COLOR[projectData.color] || _variable2.default.PROJECT_COLOR.blue
          }
        }),
        _react2.default.createElement(
          'h4',
          { className: 'ui-title' },
          projectData.name || projectData.projectname
        )
      ),
      _react2.default.createElement(
        'div',
        {
          className: 'card-btns',
          onClick: projectData.follow || inFollowPage ? this.del : this.add
        },
        _react2.default.createElement(
          _tooltip2.default,
          {
            placement: 'rightTop',
            title: projectData.follow || inFollowPage ? '取消关注' : '添加关注'
          },
          _react2.default.createElement(_icon2.default, {
            type: projectData.follow || inFollowPage ? 'star' : 'star-o',
            className: 'icon ' + (projectData.follow || inFollowPage ? 'active' : '')
          })
        )
      ),
      isShow && _react2.default.createElement(
        'div',
        { className: 'copy-btns', onClick: this.showConfirm },
        _react2.default.createElement(
          _tooltip2.default,
          { placement: 'rightTop', title: '\u590D\u5236\u9879\u76EE' },
          _react2.default.createElement(_icon2.default, { type: 'copy', className: 'icon' })
        )
      )
    );
  };

  return ProjectCard;
}(_react.PureComponent), _class2.propTypes = {
  projectData: _propTypes2.default.object,
  uid: _propTypes2.default.number,
  inFollowPage: _propTypes2.default.bool,
  callbackResult: _propTypes2.default.func,
  history: _propTypes2.default.object,
  delFollow: _propTypes2.default.func,
  addFollow: _propTypes2.default.func,
  isShow: _propTypes2.default.bool,
  getProject: _propTypes2.default.func,
  checkProjectName: _propTypes2.default.func,
  copyProjectMsg: _propTypes2.default.func,
  currPage: _propTypes2.default.number
}, _temp)) || _class) || _class);
exports.default = ProjectCard;