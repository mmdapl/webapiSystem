{"version":3,"sources":["client\\containers\\Project\\Setting\\ProjectMock\\index.js"],"names":["FormItem","Item","formItemLayout","labelCol","sm","span","wrapperCol","tailFormItemLayout","offset","ProjectMock","projectMsg","state","project","currProject","updateProjectMock","getProject","create","props","handleSubmit","params","id","projectId","project_mock_script","is_mock_open","result","payload","data","errcode","success","errmsg","onChange","setState","v","handleMockJsInput","e","text","componentWillMount","render","minHeight","Component","propTypes","form","PropTypes","object","match","number","func"],"mappings":"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","file":"index.js","sourceRoot":"C:/Users/DUOYI/Desktop/api/test/vendors","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Form, Switch, Button, Icon, Tooltip, message } from 'antd';\nimport AceEditor from '../../../../components/AceEditor/AceEditor';\nconst FormItem = Form.Item;\nimport { updateProjectMock, getProject } from '../../../../reducer/modules/project';\n\nconst formItemLayout = {\n  labelCol: {\n    sm: { span: 4 }\n  },\n  wrapperCol: {\n    sm: { span: 16 }\n  }\n};\nconst tailFormItemLayout = {\n  wrapperCol: {\n    sm: {\n      span: 16,\n      offset: 11\n    }\n  }\n};\n\n@connect(\n  state => {\n    return {\n      projectMsg: state.project.currProject\n    };\n  },\n  {\n    updateProjectMock,\n    getProject\n  }\n)\n@Form.create()\nexport default class ProjectMock extends Component {\n  static propTypes = {\n    form: PropTypes.object,\n    match: PropTypes.object,\n    projectId: PropTypes.number,\n    updateProjectMock: PropTypes.func,\n    projectMsg: PropTypes.object,\n    getProject: PropTypes.func\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      is_mock_open: false,\n      project_mock_script: ''\n    };\n  }\n\n  handleSubmit = async () => {\n    let params = {\n      id: this.props.projectId,\n      project_mock_script: this.state.project_mock_script,\n      is_mock_open: this.state.is_mock_open\n    };\n\n    let result = await this.props.updateProjectMock(params);\n\n    if (result.payload.data.errcode === 0) {\n      message.success('保存成功');\n      await this.props.getProject(this.props.projectId);\n    } else {\n      message.success('保存失败, ' + result.payload.data.errmsg);\n    }\n  };\n\n  componentWillMount() {\n    this.setState({\n      is_mock_open: this.props.projectMsg.is_mock_open,\n      project_mock_script: this.props.projectMsg.project_mock_script\n    });\n  }\n\n  // 是否开启\n  onChange = v => {\n    this.setState({\n      is_mock_open: v\n    });\n  };\n\n  handleMockJsInput = e => {\n    this.setState({\n      project_mock_script: e.text\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"m-panel\">\n        <Form>\n          <FormItem\n            label={\n              <span>\n                是否开启&nbsp;<a\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  href=\"https://hellosean1025.github.io/yapi/documents/project.html#%E5%85%A8%E5%B1%80mock\"\n                >\n                  <Tooltip title=\"点击查看文档\">\n                    <Icon type=\"question-circle-o\" />\n                  </Tooltip>\n                </a>\n              </span>\n            }\n            {...formItemLayout}\n          >\n            <Switch\n              checked={this.state.is_mock_open}\n              onChange={this.onChange}\n              checkedChildren=\"开\"\n              unCheckedChildren=\"关\"\n            />\n          </FormItem>\n          <FormItem label=\"Mock脚本\" {...formItemLayout}>\n            <AceEditor\n              data={this.state.project_mock_script}\n              onChange={this.handleMockJsInput}\n              style={{ minHeight: '500px' }}\n            />\n          </FormItem>\n          <FormItem {...tailFormItemLayout}>\n            <Button type=\"primary\" htmlType=\"submit\" onClick={this.handleSubmit}>\n              保存\n            </Button>\n          </FormItem>\n        </Form>\n      </div>\n    );\n  }\n}\n"]}