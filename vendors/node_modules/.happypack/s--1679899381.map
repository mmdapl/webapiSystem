{"version":3,"sources":["client\\components\\AceEditor\\mockEditor.js"],"names":["ace","require","Mock","json5","MockExtra","langTools","acequire","wordList","name","mock","dom","commands","push","bindKey","exec","editor","_fullscreen_yapi","fullScreen","toggleCssClass","document","body","setCssClass","container","setAutoScrollEditorIntoView","resize","run","options","mockEditor","rhymeCompleter","handleJson","json","curData","text","obj","parse","format","jsonData","mockData","e","message","data","readOnly","edit","$blockScrolling","Infinity","getSession","setMode","setReadOnly","renderer","$cursorLayer","element","style","display","setTheme","setOptions","enableBasicAutocompletion","enableSnippets","enableLiveAutocompletion","useWorker","getValue","setValue","handleData","insertCode","pos","selection","getCursor","session","insert","code","formatJson","JSON","err","identifierRegexps","getCompletions","prefix","callback","length","map","ea","value","score","meta","addCompleter","clearSelection","on","onChange","call","module","exports"],"mappings":"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","file":"mockEditor.js","sourceRoot":"C:/Users/DUOYI/Desktop/api/test/vendors","sourcesContent":["var ace = require('brace'),\n  Mock = require('mockjs');\nrequire('brace/mode/javascript');\nrequire('brace/mode/json');\nrequire('brace/mode/xml');\nrequire('brace/mode/html');\nrequire('brace/theme/xcode');\nrequire('brace/ext/language_tools.js');\nvar json5 = require('json5');\nconst MockExtra = require('common/mock-extra.js');\n\nvar langTools = ace.acequire('ace/ext/language_tools'),\n  wordList = [\n    { name: '字符串', mock: '@string' },\n    { name: '自然数', mock: '@natural' },\n    { name: '浮点数', mock: '@float' },\n    { name: '字符', mock: '@character' },\n    { name: '布尔', mock: '@boolean' },\n    { name: 'url', mock: '@url' },\n    { name: '域名', mock: '@domain' },\n    { name: 'ip地址', mock: '@ip' },\n    { name: 'id', mock: '@id' },\n    { name: 'guid', mock: '@guid' },\n    { name: '当前时间', mock: '@now' },\n    { name: '时间戳', mock: '@timestamp' },\n    { name: '日期', mock: '@date' },\n    { name: '时间', mock: '@time' },\n    { name: '日期时间', mock: '@datetime' },\n    { name: '图片连接', mock: '@image' },\n    { name: '图片data', mock: '@imageData' },\n    { name: '颜色', mock: '@color' },\n    { name: '颜色hex', mock: '@hex' },\n    { name: '颜色rgba', mock: '@rgba' },\n    { name: '颜色rgb', mock: '@rgb' },\n    { name: '颜色hsl', mock: '@hsl' },\n    { name: '整数', mock: '@integer' },\n    { name: 'email', mock: '@email' },\n    { name: '大段文本', mock: '@paragraph' },\n    { name: '句子', mock: '@sentence' },\n    { name: '单词', mock: '@word' },\n    { name: '大段中文文本', mock: '@cparagraph' },\n    { name: '中文标题', mock: '@ctitle' },\n    { name: '标题', mock: '@title' },\n    { name: '姓名', mock: '@name' },\n    { name: '中文姓名', mock: '@cname' },\n    { name: '中文姓', mock: '@cfirst' },\n    { name: '中文名', mock: '@clast' },\n    { name: '英文姓', mock: '@first' },\n    { name: '英文名', mock: '@last' },\n    { name: '中文句子', mock: '@csentence' },\n    { name: '中文词组', mock: '@cword' },\n    { name: '地址', mock: '@region' },\n    { name: '省份', mock: '@province' },\n    { name: '城市', mock: '@city' },\n    { name: '地区', mock: '@county' },\n    { name: '转换为大写', mock: '@upper' },\n    { name: '转换为小写', mock: '@lower' },\n    { name: '挑选（枚举）', mock: '@pick' },\n    { name: '打乱数组', mock: '@shuffle' },\n    { name: '协议', mock: '@protocol' }\n  ];\n\nlet dom = ace.acequire('ace/lib/dom');\nace.acequire('ace/commands/default_commands').commands.push({\n  name: 'Toggle Fullscreen',\n  bindKey: 'F9',\n  exec: function(editor) {\n    if (editor._fullscreen_yapi) {\n      let fullScreen = dom.toggleCssClass(document.body, 'fullScreen');\n      dom.setCssClass(editor.container, 'fullScreen', fullScreen);\n      editor.setAutoScrollEditorIntoView(!fullScreen);\n      editor.resize();\n    }\n  }\n});\n\nfunction run(options) {\n  var editor, mockEditor, rhymeCompleter;\n  function handleJson(json) {\n    var curData = mockEditor.curData;\n    try {\n      curData.text = json;\n      var obj = json5.parse(json);\n      curData.format = true;\n      curData.jsonData = obj;\n      curData.mockData = () => Mock.mock(MockExtra(obj, {})); //为防止时时 mock 导致页面卡死的问题，改成函数式需要用到再计算\n    } catch (e) {\n      curData.format = e.message;\n    }\n  }\n  options = options || {};\n  var container, data;\n  container = options.container || 'mock-editor';\n  if (\n    options.wordList &&\n    typeof options.wordList === 'object' &&\n    options.wordList.name &&\n    options.wordList.mock\n  ) {\n    wordList.push(options.wordList);\n  }\n  data = options.data || '';\n  options.readOnly = options.readOnly || false;\n  options.fullScreen = options.fullScreen || false;\n\n  editor = ace.edit(container);\n  editor.$blockScrolling = Infinity;\n  editor.getSession().setMode('ace/mode/javascript');\n  if (options.readOnly === true) {\n    editor.setReadOnly(true);\n    editor.renderer.$cursorLayer.element.style.display = 'none';\n  }\n  editor.setTheme('ace/theme/xcode');\n  editor.setOptions({\n    enableBasicAutocompletion: true,\n    enableSnippets: false,\n    enableLiveAutocompletion: true,\n    useWorker: true\n  });\n  editor._fullscreen_yapi = options.fullScreen;\n  mockEditor = {\n    curData: {},\n    getValue: () => mockEditor.curData.text,\n    setValue: function(data) {\n      editor.setValue(handleData(data));\n    },\n    editor: editor,\n    options: options,\n    insertCode: code => {\n      let pos = editor.selection.getCursor();\n      editor.session.insert(pos, code);\n    }\n  };\n\n  function formatJson(json) {\n    try {\n      return JSON.stringify(JSON.parse(json), null, 2);\n    } catch (err) {\n      return json;\n    }\n  }\n\n  function handleData(data) {\n    data = data || '';\n    if (typeof data === 'string') {\n      return formatJson(data);\n    } else if (typeof data === 'object') {\n      return JSON.stringify(data, null, '  ');\n    } else {\n      return '' + data;\n    }\n  }\n\n  rhymeCompleter = {\n    identifierRegexps: [/[@]/],\n    getCompletions: function(editor, session, pos, prefix, callback) {\n      if (prefix.length === 0) {\n        callback(null, []);\n        return;\n      }\n      callback(\n        null,\n        wordList.map(function(ea) {\n          return { name: ea.mock, value: ea.mock, score: ea.mock, meta: ea.name };\n        })\n      );\n    }\n  };\n\n  langTools.addCompleter(rhymeCompleter);\n  mockEditor.setValue(handleData(data));\n  handleJson(editor.getValue());\n\n  editor.clearSelection();\n\n  editor.getSession().on('change', () => {\n    handleJson(editor.getValue());\n    if (typeof options.onChange === 'function') {\n      options.onChange.call(mockEditor, mockEditor.curData);\n    }\n    editor.clearSelection();\n  });\n  return mockEditor;\n}\n\n/**\n * mockEditor({\n      container: 'req_body_json', //dom的id\n      data: that.state.req_body_json, //初始化数据\n      onChange: function (d) {\n        that.setState({\n          req_body_json: d.text\n        })\n      }\n    })\n */\nmodule.exports = run;\n"]}