{"version":3,"sources":["client\\containers\\User\\Profile.js"],"names":["EditButton","isAdmin","props","isOwner","onClick","name","admin","propTypes","PropTypes","bool","func","string","Profile","curUid","state","user","uid","userType","type","curRole","role","setBreadcrumb","handleEdit","key","val","s","setState","getUserInfo","_this","axios","get","id","then","userinfo","res","data","_userinfo","username","updateUserinfo","value","params","post","errcode","success","error","errmsg","err","message","changeUserinfo","dom","e","target","getAttribute","changeRole","updatePassword","old_password","document","getElementById","password","verify_pass","location","reload","usernameEdit","emailEdit","secureEdit","roleEdit","componentDidMount","_uid","match","handleUserinfo","componentWillReceiveProps","nextProps","render","ButtonGroup","Group","userNameEditHtml","emailEditHtml","secureEditHtml","roleEditHtml","Option","roles","member","email","width","btn","display","add_time","up_time","Component","object","number","upload","AvatarUpload","url","imageUrl","setImageUrl","uploadAvatar","basecode","catch","console","log","handleChange","info","file","status","getBase64","originFileObj","beforeUpload","bind","height","any","isJPG","isPNG","isLt2M","size","img","callback","reader","FileReader","addEventListener","result","readAsDataURL"],"mappings":"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","file":"Profile.js","sourceRoot":"C:/Users/DUOYI/Desktop/api/test/vendors","sourcesContent":["import React, { PureComponent as Component } from 'react';\nimport { Row, Col, Input, Button, Select, message, Upload, Tooltip } from 'antd';\nimport axios from 'axios';\nimport { formatTime } from '../../common.js';\nimport PropTypes from 'prop-types';\nimport { setBreadcrumb, setImageUrl } from '../../reducer/modules/user';\nimport { connect } from 'react-redux';\n\nconst EditButton = props => {\n  const { isAdmin, isOwner, onClick, name, admin } = props;\n  if (isOwner) {\n    // 本人\n    if (admin) {\n      return null;\n    }\n    return (\n      <Button\n        icon=\"edit\"\n        onClick={() => {\n          onClick(name, true);\n        }}\n      >\n        修改\n      </Button>\n    );\n  } else if (isAdmin) {\n    // 管理员\n    return (\n      <Button\n        icon=\"edit\"\n        onClick={() => {\n          onClick(name, true);\n        }}\n      >\n        修改\n      </Button>\n    );\n  } else {\n    return null;\n  }\n};\nEditButton.propTypes = {\n  isAdmin: PropTypes.bool,\n  isOwner: PropTypes.bool,\n  onClick: PropTypes.func,\n  name: PropTypes.string,\n  admin: PropTypes.bool\n};\n\n@connect(\n  state => {\n    return {\n      curUid: state.user.uid,\n      userType: state.user.type,\n      curRole: state.user.role\n    };\n  },\n  {\n    setBreadcrumb\n  }\n)\nclass Profile extends Component {\n  static propTypes = {\n    match: PropTypes.object,\n    curUid: PropTypes.number,\n    userType: PropTypes.string,\n    setBreadcrumb: PropTypes.func,\n    curRole: PropTypes.string,\n    upload: PropTypes.bool\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      usernameEdit: false,\n      emailEdit: false,\n      secureEdit: false,\n      roleEdit: false,\n      userinfo: {}\n    };\n  }\n\n  componentDidMount() {\n    this._uid = this.props.match.params.uid;\n    this.handleUserinfo(this.props);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (!nextProps.match.params.uid) {\n      return;\n    }\n    if (this._uid !== nextProps.match.params.uid) {\n      this.handleUserinfo(nextProps);\n    }\n  }\n\n  handleUserinfo(props) {\n    const uid = props.match.params.uid;\n    this.getUserInfo(uid);\n  }\n\n  handleEdit = (key, val) => {\n    var s = {};\n    s[key] = val;\n    this.setState(s);\n  };\n\n  getUserInfo = id => {\n    var _this = this;\n    const { curUid } = this.props;\n\n    axios.get('/api/user/find?id=' + id).then(res => {\n      _this.setState({\n        userinfo: res.data.data,\n        _userinfo: res.data.data\n      });\n      if (curUid === +id) {\n        this.props.setBreadcrumb([{ name: res.data.data.username }]);\n      } else {\n        this.props.setBreadcrumb([{ name: '管理: ' + res.data.data.username }]);\n      }\n    });\n  };\n\n  updateUserinfo = name => {\n    var state = this.state;\n    let value = this.state._userinfo[name];\n    let params = { uid: state.userinfo.uid };\n    params[name] = value;\n\n    axios.post('/api/user/update', params).then(\n      res => {\n        let data = res.data;\n        if (data.errcode === 0) {\n          let userinfo = this.state.userinfo;\n          userinfo[name] = value;\n          this.setState({\n            userinfo: userinfo\n          });\n\n          this.handleEdit(name + 'Edit', false);\n          message.success('更新用户信息成功');\n        } else {\n          message.error(data.errmsg);\n        }\n      },\n      err => {\n        message.error(err.message);\n      }\n    );\n  };\n\n  changeUserinfo = e => {\n    let dom = e.target;\n    let name = dom.getAttribute('name');\n    let value = dom.value;\n\n    this.setState({\n      _userinfo: {\n        ...this.state._userinfo,\n        [name]: value\n      }\n    });\n  };\n\n  changeRole = val => {\n    let userinfo = this.state.userinfo;\n    userinfo.role = val;\n    this.setState({\n      _userinfo: userinfo\n    });\n    this.updateUserinfo('role');\n  };\n\n  updatePassword = () => {\n    let old_password = document.getElementById('old_password').value;\n    let password = document.getElementById('password').value;\n    let verify_pass = document.getElementById('verify_pass').value;\n    if (password != verify_pass) {\n      return message.error('两次输入的密码不一样');\n    }\n    let params = {\n      uid: this.state.userinfo.uid,\n      password: password,\n      old_password: old_password\n    };\n\n    axios.post('/api/user/change_password', params).then(\n      res => {\n        let data = res.data;\n        if (data.errcode === 0) {\n          this.handleEdit('secureEdit', false);\n          message.success('修改密码成功');\n          if (this.props.curUid === this.state.userinfo.uid) {\n            location.reload();\n          }\n        } else {\n          message.error(data.errmsg);\n        }\n      },\n      err => {\n        message.error(err.message);\n      }\n    );\n  };\n\n  render() {\n    let ButtonGroup = Button.Group;\n    let userNameEditHtml, emailEditHtml, secureEditHtml, roleEditHtml;\n    const Option = Select.Option;\n    let userinfo = this.state.userinfo;\n    let _userinfo = this.state._userinfo;\n    let roles = { admin: '管理员', member: '会员' };\n    let userType = '';\n    if (this.props.userType === 'third') {\n      userType = false;\n    } else if (this.props.userType === 'site') {\n      userType = true;\n    } else {\n      userType = false;\n    }\n\n    // 用户名信息修改\n    if (this.state.usernameEdit === false) {\n      userNameEditHtml = (\n        <div>\n          <span className=\"text\">{userinfo.username}</span>&nbsp;&nbsp;\n          {/*<span className=\"text-button\"  onClick={() => { this.handleEdit('usernameEdit', true) }}><Icon type=\"edit\" />修改</span>*/}\n          {/* {btn} */}\n          {/* 站点登陆才能编辑 */}\n          {userType && (\n            <EditButton\n              userType={userType}\n              isOwner={userinfo.uid === this.props.curUid}\n              isAdmin={this.props.curRole === 'admin'}\n              onClick={this.handleEdit}\n              name=\"usernameEdit\"\n            />\n          )}\n        </div>\n      );\n    } else {\n      userNameEditHtml = (\n        <div>\n          <Input\n            value={_userinfo.username}\n            name=\"username\"\n            onChange={this.changeUserinfo}\n            placeholder=\"用户名\"\n          />\n          <ButtonGroup className=\"edit-buttons\">\n            <Button\n              className=\"edit-button\"\n              onClick={() => {\n                this.handleEdit('usernameEdit', false);\n              }}\n            >\n              取消\n            </Button>\n            <Button\n              className=\"edit-button\"\n              onClick={() => {\n                this.updateUserinfo('username');\n              }}\n              type=\"primary\"\n            >\n              确定\n            </Button>\n          </ButtonGroup>\n        </div>\n      );\n    }\n    // 邮箱信息修改\n    if (this.state.emailEdit === false) {\n      emailEditHtml = (\n        <div>\n          <span className=\"text\">{userinfo.email}</span>&nbsp;&nbsp;\n          {/*<span className=\"text-button\" onClick={() => { this.handleEdit('emailEdit', true) }} ><Icon type=\"edit\" />修改</span>*/}\n          {/* {btn} */}\n          {/* 站点登陆才能编辑 */}\n          {userType && (\n            <EditButton\n              admin={userinfo.role === 'admin'}\n              isOwner={userinfo.uid === this.props.curUid}\n              isAdmin={this.props.curRole === 'admin'}\n              onClick={this.handleEdit}\n              name=\"emailEdit\"\n            />\n          )}\n        </div>\n      );\n    } else {\n      emailEditHtml = (\n        <div>\n          <Input\n            placeholder=\"Email\"\n            value={_userinfo.email}\n            name=\"email\"\n            onChange={this.changeUserinfo}\n          />\n          <ButtonGroup className=\"edit-buttons\">\n            <Button\n              className=\"edit-button\"\n              onClick={() => {\n                this.handleEdit('emailEdit', false);\n              }}\n            >\n              取消\n            </Button>\n            <Button\n              className=\"edit-button\"\n              type=\"primary\"\n              onClick={() => {\n                this.updateUserinfo('email');\n              }}\n            >\n              确定\n            </Button>\n          </ButtonGroup>\n        </div>\n      );\n    }\n\n    if (this.state.roleEdit === false) {\n      roleEditHtml = (\n        <div>\n          <span className=\"text\">{roles[userinfo.role]}</span>&nbsp;&nbsp;\n        </div>\n      );\n    } else {\n      roleEditHtml = (\n        <Select defaultValue={_userinfo.role} onChange={this.changeRole} style={{ width: 150 }}>\n          <Option value=\"admin\">管理员</Option>\n          <Option value=\"member\">会员</Option>\n        </Select>\n      );\n    }\n\n    if (this.state.secureEdit === false) {\n      let btn = '';\n      if (userType) {\n        btn = (\n          <Button\n            icon=\"edit\"\n            onClick={() => {\n              this.handleEdit('secureEdit', true);\n            }}\n          >\n            修改\n          </Button>\n        );\n      }\n      secureEditHtml = btn;\n    } else {\n      secureEditHtml = (\n        <div>\n          <Input\n            style={{\n              display: this.props.curRole === 'admin' && userinfo.role != 'admin' ? 'none' : ''\n            }}\n            placeholder=\"旧的密码\"\n            type=\"password\"\n            name=\"old_password\"\n            id=\"old_password\"\n          />\n          <Input placeholder=\"新的密码\" type=\"password\" name=\"password\" id=\"password\" />\n          <Input placeholder=\"确认密码\" type=\"password\" name=\"verify_pass\" id=\"verify_pass\" />\n          <ButtonGroup className=\"edit-buttons\">\n            <Button\n              className=\"edit-button\"\n              onClick={() => {\n                this.handleEdit('secureEdit', false);\n              }}\n            >\n              取消\n            </Button>\n            <Button className=\"edit-button\" onClick={this.updatePassword} type=\"primary\">\n              确定\n            </Button>\n          </ButtonGroup>\n        </div>\n      );\n    }\n    return (\n      <div className=\"user-profile\">\n        <div className=\"user-item-body\">\n          {userinfo.uid === this.props.curUid ? (\n            <h3>个人设置</h3>\n          ) : (\n            <h3>{userinfo.username} 资料设置</h3>\n          )}\n\n          <Row className=\"avatarCon\" type=\"flex\" justify=\"start\">\n            <Col span={24}>\n              {userinfo.uid === this.props.curUid ? (\n                <AvatarUpload uid={userinfo.uid}>点击上传头像</AvatarUpload>\n              ) : (\n                <div className=\"avatarImg\">\n                  <img src={`/api/user/avatar?uid=${userinfo.uid}`} />\n                </div>\n              )}\n            </Col>\n          </Row>\n          <Row className=\"user-item\" type=\"flex\" justify=\"start\">\n            <div className=\"maoboli\" />\n            <Col span={4}>用户id</Col>\n            <Col span={12}>{userinfo.uid}</Col>\n          </Row>\n          <Row className=\"user-item\" type=\"flex\" justify=\"start\">\n            <div className=\"maoboli\" />\n            <Col span={4}>用户名</Col>\n            <Col span={12}>{userNameEditHtml}</Col>\n          </Row>\n          <Row className=\"user-item\" type=\"flex\" justify=\"start\">\n            <div className=\"maoboli\" />\n            <Col span={4}>Email</Col>\n            <Col span={12}>{emailEditHtml}</Col>\n          </Row>\n          <Row\n            className=\"user-item\"\n            style={{ display: this.props.curRole === 'admin' ? '' : 'none' }}\n            type=\"flex\"\n            justify=\"start\"\n          >\n            <div className=\"maoboli\" />\n            <Col span={4}>角色</Col>\n            <Col span={12}>{roleEditHtml}</Col>\n          </Row>\n          <Row\n            className=\"user-item\"\n            style={{ display: this.props.curRole === 'admin' ? '' : 'none' }}\n            type=\"flex\"\n            justify=\"start\"\n          >\n            <div className=\"maoboli\" />\n            <Col span={4}>登陆方式</Col>\n            <Col span={12}>{userinfo.type === 'site' ? '站点登陆' : '第三方登陆'}</Col>\n          </Row>\n          <Row className=\"user-item\" type=\"flex\" justify=\"start\">\n            <div className=\"maoboli\" />\n            <Col span={4}>创建账号时间</Col>\n            <Col span={12}>{formatTime(userinfo.add_time)}</Col>\n          </Row>\n          <Row className=\"user-item\" type=\"flex\" justify=\"start\">\n            <div className=\"maoboli\" />\n            <Col span={4}>更新账号时间</Col>\n            <Col span={12}>{formatTime(userinfo.up_time)}</Col>\n          </Row>\n\n          {userType ? (\n            <Row className=\"user-item\" type=\"flex\" justify=\"start\">\n              <div className=\"maoboli\" />\n              <Col span={4}>密码</Col>\n              <Col span={12}>{secureEditHtml}</Col>\n            </Row>\n          ) : (\n            ''\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\n@connect(\n  state => {\n    return {\n      url: state.user.imageUrl\n    };\n  },\n  {\n    setImageUrl\n  }\n)\nclass AvatarUpload extends Component {\n  constructor(props) {\n    super(props);\n  }\n  static propTypes = {\n    uid: PropTypes.number,\n    setImageUrl: PropTypes.func,\n    url: PropTypes.any\n  };\n  uploadAvatar(basecode) {\n    axios\n      .post('/api/user/upload_avatar', { basecode: basecode })\n      .then(() => {\n        // this.setState({ imageUrl: basecode });\n        this.props.setImageUrl(basecode);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n  handleChange(info) {\n    if (info.file.status === 'done') {\n      // Get this url from response in real world.\n      getBase64(info.file.originFileObj, basecode => {\n        this.uploadAvatar(basecode);\n      });\n    }\n  }\n  render() {\n    const { url } = this.props;\n    let imageUrl = url ? url : `/api/user/avatar?uid=${this.props.uid}`;\n    // let imageUrl = this.state.imageUrl ? this.state.imageUrl : `/api/user/avatar?uid=${this.props.uid}`;\n    // console.log(this.props.uid);\n    return (\n      <div className=\"avatar-box\">\n        <Tooltip\n          placement=\"right\"\n          title={<div>点击头像更换 (只支持jpg、png格式且大小不超过200kb的图片)</div>}\n        >\n          <div>\n            <Upload\n              className=\"avatar-uploader\"\n              name=\"basecode\"\n              showUploadList={false}\n              action=\"/api/user/upload_avatar\"\n              beforeUpload={beforeUpload}\n              onChange={this.handleChange.bind(this)}\n            >\n              {/*<Avatar size=\"large\" src={imageUrl}  />*/}\n              <div style={{ width: 100, height: 100 }}>\n                <img className=\"avatar\" src={imageUrl} />\n              </div>\n            </Upload>\n          </div>\n        </Tooltip>\n        <span className=\"avatarChange\" />\n      </div>\n    );\n  }\n}\n\nfunction beforeUpload(file) {\n  const isJPG = file.type === 'image/jpeg';\n  const isPNG = file.type === 'image/png';\n  if (!isJPG && !isPNG) {\n    message.error('图片的格式只能为 jpg、png！');\n  }\n  const isLt2M = file.size / 1024 / 1024 < 0.2;\n  if (!isLt2M) {\n    message.error('图片必须小于 200kb!');\n  }\n\n  return (isPNG || isJPG) && isLt2M;\n}\n\nfunction getBase64(img, callback) {\n  const reader = new FileReader();\n  reader.addEventListener('load', () => callback(reader.result));\n  reader.readAsDataURL(img);\n}\n\nexport default Profile;\n"]}