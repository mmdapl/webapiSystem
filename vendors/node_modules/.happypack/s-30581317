'use strict';

exports.__esModule = true;

var _checkbox = require('antd/lib/checkbox');

var _checkbox2 = _interopRequireDefault(_checkbox);

var _spin = require('antd/lib/spin');

var _spin2 = _interopRequireDefault(_spin);

var _button = require('antd/lib/button');

var _button2 = _interopRequireDefault(_button);

var _input = require('antd/lib/input');

var _input2 = _interopRequireDefault(_input);

var _switch = require('antd/lib/switch');

var _switch2 = _interopRequireDefault(_switch);

var _keys = require('babel-runtime/core-js/object/keys');

var _keys2 = _interopRequireDefault(_keys);

var _tooltip = require('antd/lib/tooltip');

var _tooltip2 = _interopRequireDefault(_tooltip);

var _icon = require('antd/lib/icon');

var _icon2 = _interopRequireDefault(_icon);

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _message2 = require('antd/lib/message');

var _message3 = _interopRequireDefault(_message2);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _assign = require('babel-runtime/core-js/object/assign');

var _assign2 = _interopRequireDefault(_assign);

var _radio = require('antd/lib/radio');

var _radio2 = _interopRequireDefault(_radio);

var _modal = require('antd/lib/modal');

var _modal2 = _interopRequireDefault(_modal);

var _select = require('antd/lib/select');

var _select2 = _interopRequireDefault(_select);

var _upload = require('antd/lib/upload');

var _upload2 = _interopRequireDefault(_upload);

var _dec, _class, _class2, _temp;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reactRedux = require('react-redux');

require('./ProjectData.scss');

var _axios = require('axios');

var _axios2 = _interopRequireDefault(_axios);

var _url = require('url');

var _url2 = _interopRequireDefault(_url);

var _interface = require('../../../../reducer/modules/interface');

var _news = require('../../../../reducer/modules/news.js');

var _project = require('../../../../reducer/modules/project');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Dragger = _upload2.default.Dragger;

var Option = _select2.default.Option;
var confirm = _modal2.default.confirm;
var plugin = require('../../../../plugin.js');
var RadioGroup = _radio2.default.Group;
var importDataModule = {};
var exportDataModule = {};
var HandleImportData = require('../../../../../common/HandleImportData');
function handleExportRouteParams(url, status, isWiki) {
  if (!url) {
    return;
  }
  var urlObj = _url2.default.parse(url, true),
      query = {};
  query = (0, _assign2.default)(query, urlObj.query, { status: status, isWiki: isWiki });
  return _url2.default.format({
    pathname: urlObj.pathname,
    query: query
  });
}

// exportDataModule.pdf = {
//   name: 'Pdf',
//   route: '/api/interface/download_crx',
//   desc: '导出项目接口文档为 pdf 文件'
// }
var ProjectData = (_dec = (0, _reactRedux.connect)(function (state) {
  return {
    curCatid: - -state.inter.curdata.catid,
    basePath: state.project.currProject.basepath,
    updateLogList: state.news.updateLogList,
    swaggerUrlData: state.project.swaggerUrlData
  };
}, {
  saveImportData: _interface.saveImportData,
  fetchUpdateLogData: _news.fetchUpdateLogData,
  handleSwaggerUrlData: _project.handleSwaggerUrlData
}), _dec(_class = (_temp = _class2 = function (_Component) {
  (0, _inherits3.default)(ProjectData, _Component);

  function ProjectData(props) {
    var _this2 = this;

    (0, _classCallCheck3.default)(this, ProjectData);

    var _this = (0, _possibleConstructorReturn3.default)(this, _Component.call(this, props));

    _this.uploadChange = function (info) {
      var status = info.file.status;
      if (status !== 'uploading') {
        console.log(info.file, info.fileList);
      }
      if (status === 'done') {
        _message3.default.success(info.file.name + ' \u6587\u4EF6\u4E0A\u4F20\u6210\u529F');
      } else if (status === 'error') {
        _message3.default.error(info.file.name + ' \u6587\u4EF6\u4E0A\u4F20\u5931\u8D25');
      }
    };

    _this.handleAddInterface = function () {
      var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee(res) {
        return _regenerator2.default.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return HandleImportData(res, _this.props.match.params.id, _this.state.selectCatid, _this.state.menuList, _this.props.basePath, _this.state.dataSync, _message3.default.error, _message3.default.success, function () {
                  return _this.setState({ showLoading: false });
                });

              case 2:
                return _context.abrupt('return', _context.sent);

              case 3:
              case 'end':
                return _context.stop();
            }
          }
        }, _callee, _this2);
      }));

      return function (_x) {
        return _ref.apply(this, arguments);
      };
    }();

    _this.handleFile = function (info) {
      if (!_this.state.curImportType) {
        return _message3.default.error('请选择导入数据的方式');
      }
      if (_this.state.selectCatid) {
        _this.setState({ showLoading: true });
        var reader = new FileReader();
        reader.readAsText(info.file);
        reader.onload = function () {
          var _ref2 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee2(res) {
            return _regenerator2.default.wrap(function _callee2$(_context2) {
              while (1) {
                switch (_context2.prev = _context2.next) {
                  case 0:
                    _context2.next = 2;
                    return importDataModule[_this.state.curImportType].run(res.target.result);

                  case 2:
                    res = _context2.sent;

                    if (!(_this.state.dataSync === 'merge')) {
                      _context2.next = 7;
                      break;
                    }

                    // 开启同步
                    _this.showConfirm(res);
                    _context2.next = 9;
                    break;

                  case 7:
                    _context2.next = 9;
                    return _this.handleAddInterface(res);

                  case 9:
                  case 'end':
                    return _context2.stop();
                }
              }
            }, _callee2, _this2);
          }));

          return function (_x2) {
            return _ref2.apply(this, arguments);
          };
        }();
      } else {
        _message3.default.error('请选择上传的默认分类');
      }
    };

    _this.showConfirm = function () {
      var _ref3 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee4(res) {
        var that, typeid, apiCollections, result, domainData, ref;
        return _regenerator2.default.wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                that = _this;
                typeid = _this.props.match.params.id;
                apiCollections = res.apis.map(function (item) {
                  return {
                    method: item.method,
                    path: item.path
                  };
                });
                _context4.next = 5;
                return _this.props.fetchUpdateLogData({
                  type: 'project',
                  typeid: typeid,
                  apis: apiCollections
                });

              case 5:
                result = _context4.sent;
                domainData = result.payload.data.data;
                ref = confirm({
                  title: '您确认要进行数据同步????',
                  width: 600,
                  okType: 'danger',
                  iconType: 'exclamation-circle',
                  className: 'dataImport-confirm',
                  okText: '确认',
                  cancelText: '取消',
                  content: _react2.default.createElement(
                    'div',
                    { className: 'postman-dataImport-modal' },
                    _react2.default.createElement(
                      'div',
                      { className: 'postman-dataImport-modal-content' },
                      domainData.map(function (item, index) {
                        return _react2.default.createElement(
                          'div',
                          { key: index, className: 'postman-dataImport-show-diff' },
                          _react2.default.createElement('span', { className: 'logcontent', dangerouslySetInnerHTML: { __html: item.content } })
                        );
                      })
                    ),
                    _react2.default.createElement(
                      'p',
                      { className: 'info' },
                      '\u6E29\u99A8\u63D0\u793A\uFF1A \u6570\u636E\u540C\u6B65\u540E\uFF0C\u53EF\u80FD\u4F1A\u9020\u6210\u539F\u672C\u7684\u4FEE\u6539\u6570\u636E\u4E22\u5931'
                    )
                  ),
                  onOk: function onOk() {
                    var _this3 = this;

                    return (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee3() {
                      return _regenerator2.default.wrap(function _callee3$(_context3) {
                        while (1) {
                          switch (_context3.prev = _context3.next) {
                            case 0:
                              _context3.next = 2;
                              return that.handleAddInterface(res);

                            case 2:
                            case 'end':
                              return _context3.stop();
                          }
                        }
                      }, _callee3, _this3);
                    }))();
                  },
                  onCancel: function onCancel() {
                    that.setState({ showLoading: false, dataSync: 'normal' });
                    ref.destroy();
                  }
                });

              case 8:
              case 'end':
                return _context4.stop();
            }
          }
        }, _callee4, _this2);
      }));

      return function (_x3) {
        return _ref3.apply(this, arguments);
      };
    }();

    _this.handleImportType = function (val) {
      _this.setState({
        curImportType: val,
        isSwaggerUrl: false
      });
    };

    _this.handleExportType = function (val) {
      _this.setState({
        curExportType: val,
        isWiki: false
      });
    };

    _this.onChange = function (checked) {
      _this.setState({
        dataSync: checked
      });
    };

    _this.handleUrlChange = function (checked) {
      _this.setState({
        isSwaggerUrl: checked
      });
    };

    _this.swaggerUrlInput = function (url) {
      _this.setState({
        swaggerUrl: url
      });
    };

    _this.onUrlUpload = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee5() {
      var res;
      return _regenerator2.default.wrap(function _callee5$(_context5) {
        while (1) {
          switch (_context5.prev = _context5.next) {
            case 0:
              if (_this.state.curImportType) {
                _context5.next = 2;
                break;
              }

              return _context5.abrupt('return', _message3.default.error('请选择导入数据的方式'));

            case 2:
              if (_this.state.swaggerUrl) {
                _context5.next = 4;
                break;
              }

              return _context5.abrupt('return', _message3.default.error('url 不能为空'));

            case 4:
              if (!_this.state.selectCatid) {
                _context5.next = 26;
                break;
              }

              _this.setState({ showLoading: true });
              _context5.prev = 6;
              _context5.next = 9;
              return _this.props.handleSwaggerUrlData(_this.state.swaggerUrl);

            case 9:
              _context5.next = 11;
              return importDataModule[_this.state.curImportType].run(_this.props.swaggerUrlData);

            case 11:
              res = _context5.sent;

              if (!(_this.state.dataSync === 'merge')) {
                _context5.next = 16;
                break;
              }

              // merge
              _this.showConfirm(res);
              _context5.next = 18;
              break;

            case 16:
              _context5.next = 18;
              return _this.handleAddInterface(res);

            case 18:
              _context5.next = 24;
              break;

            case 20:
              _context5.prev = 20;
              _context5.t0 = _context5['catch'](6);

              _this.setState({ showLoading: false });
              _message3.default.error(_context5.t0.message);

            case 24:
              _context5.next = 27;
              break;

            case 26:
              _message3.default.error('请选择上传的默认分类');

            case 27:
            case 'end':
              return _context5.stop();
          }
        }
      }, _callee5, _this2, [[6, 20]]);
    }));

    _this.handleChange = function (e) {
      _this.setState({ exportContent: e.target.value });
    };

    _this.handleWikiChange = function (e) {
      _this.setState({
        isWiki: e.target.checked
      });
    };

    _this.state = {
      selectCatid: '',
      menuList: [],
      curImportType: 'swagger',
      curExportType: null,
      showLoading: false,
      dataSync: 'merge',
      exportContent: 'all',
      isSwaggerUrl: false,
      swaggerUrl: '',
      isWiki: false
    };
    return _this;
  }

  ProjectData.prototype.componentWillMount = function componentWillMount() {
    var _this4 = this;

    _axios2.default.get('/api/interface/getCatMenu?project_id=' + this.props.match.params.id).then(function (data) {
      if (data.data.errcode === 0) {
        var menuList = data.data.data;
        _this4.setState({
          menuList: menuList,
          selectCatid: menuList[0]._id
        });
      }
    });
    plugin.emitHook('import_data', importDataModule);
    plugin.emitHook('export_data', exportDataModule, this.props.match.params.id);
  };

  ProjectData.prototype.selectChange = function selectChange(value) {
    this.setState({
      selectCatid: +value
    });
  };

  // 本地文件上传


  // 处理导入信息同步


  // 处理swagger URL 导入


  // 记录输入的url


  // url导入上传


  // 处理导出接口是全部还是公开


  //  处理是否开启wiki导出


  /**
   *
   *
   * @returns
   * @memberof ProjectData
   */
  ProjectData.prototype.render = function render() {
    var _this5 = this;

    var uploadMess = {
      name: 'interfaceData',
      multiple: true,
      showUploadList: false,
      action: '/api/interface/interUpload',
      customRequest: this.handleFile,
      onChange: this.uploadChange
    };

    var exportUrl = this.state.curExportType && exportDataModule[this.state.curExportType] && exportDataModule[this.state.curExportType].route;
    var exportHref = handleExportRouteParams(exportUrl, this.state.exportContent, this.state.isWiki);

    // console.log('inter', this.state.exportContent);
    return _react2.default.createElement(
      'div',
      { className: 'g-row' },
      _react2.default.createElement(
        'div',
        { className: 'm-panel' },
        _react2.default.createElement(
          'div',
          { className: 'postman-dataImport' },
          _react2.default.createElement(
            'div',
            { className: 'dataImportCon' },
            _react2.default.createElement(
              'div',
              null,
              _react2.default.createElement(
                'h3',
                null,
                '\u6570\u636E\u5BFC\u5165\xA0',
                _react2.default.createElement(
                  'a',
                  {
                    target: '_blank',
                    rel: 'noopener noreferrer',
                    href: 'https://hellosean1025.github.io/yapi/documents/data.html'
                  },
                  _react2.default.createElement(
                    _tooltip2.default,
                    { title: '\u70B9\u51FB\u67E5\u770B\u6587\u6863' },
                    _react2.default.createElement(_icon2.default, { type: 'question-circle-o' })
                  )
                )
              )
            ),
            _react2.default.createElement(
              'div',
              { className: 'dataImportTile' },
              _react2.default.createElement(
                _select2.default,
                {
                  placeholder: '\u8BF7\u9009\u62E9\u5BFC\u5165\u6570\u636E\u7684\u65B9\u5F0F',
                  value: this.state.curImportType,
                  onChange: this.handleImportType
                },
                (0, _keys2.default)(importDataModule).map(function (name) {
                  return _react2.default.createElement(
                    Option,
                    { key: name, value: name },
                    importDataModule[name].name
                  );
                })
              )
            ),
            _react2.default.createElement(
              'div',
              { className: 'catidSelect' },
              _react2.default.createElement(
                _select2.default,
                {
                  value: this.state.selectCatid + '',
                  showSearch: true,
                  style: { width: '100%' },
                  placeholder: '\u8BF7\u9009\u62E9\u6570\u636E\u5BFC\u5165\u7684\u9ED8\u8BA4\u5206\u7C7B',
                  optionFilterProp: 'children',
                  onChange: this.selectChange.bind(this),
                  filterOption: function filterOption(input, option) {
                    return option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0;
                  }
                },
                this.state.menuList.map(function (item, key) {
                  return _react2.default.createElement(
                    Option,
                    { key: key, value: item._id + '' },
                    item.name
                  );
                })
              )
            ),
            _react2.default.createElement(
              'div',
              { className: 'dataSync' },
              _react2.default.createElement(
                'span',
                { className: 'label' },
                '\u6570\u636E\u540C\u6B65\xA0',
                _react2.default.createElement(
                  _tooltip2.default,
                  {
                    title: _react2.default.createElement(
                      'div',
                      null,
                      _react2.default.createElement(
                        'h3',
                        { style: { color: 'white' } },
                        '\u666E\u901A\u6A21\u5F0F'
                      ),
                      _react2.default.createElement(
                        'p',
                        null,
                        '\u4E0D\u5BFC\u5165\u5DF2\u5B58\u5728\u7684\u63A5\u53E3'
                      ),
                      _react2.default.createElement('br', null),
                      _react2.default.createElement(
                        'h3',
                        { style: { color: 'white' } },
                        '\u667A\u80FD\u5408\u5E76'
                      ),
                      _react2.default.createElement(
                        'p',
                        null,
                        '\u5DF2\u5B58\u5728\u7684\u63A5\u53E3\uFF0C\u5C06\u5408\u5E76\u8FD4\u56DE\u6570\u636E\u7684 response\uFF0C\u9002\u7528\u4E8E\u5BFC\u5165\u4E86 swagger \u6570\u636E\uFF0C\u4FDD\u7559\u5BF9\u6570\u636E\u7ED3\u6784\u7684\u6539\u52A8'
                      ),
                      _react2.default.createElement('br', null),
                      _react2.default.createElement(
                        'h3',
                        { style: { color: 'white' } },
                        '\u5B8C\u5168\u8986\u76D6'
                      ),
                      _react2.default.createElement(
                        'p',
                        null,
                        '\u4E0D\u4FDD\u7559\u65E7\u6570\u636E\uFF0C\u5B8C\u5168\u4F7F\u7528\u65B0\u6570\u636E\uFF0C\u9002\u7528\u4E8E\u63A5\u53E3\u5B9A\u4E49\u5B8C\u5168\u4EA4\u7ED9\u540E\u7AEF\u5B9A\u4E49'
                      )
                    )
                  },
                  _react2.default.createElement(_icon2.default, { type: 'question-circle-o' })
                ),
                ' '
              ),
              _react2.default.createElement(
                _select2.default,
                { value: this.state.dataSync, onChange: this.onChange },
                _react2.default.createElement(
                  Option,
                  { value: 'normal' },
                  '\u666E\u901A\u6A21\u5F0F'
                ),
                _react2.default.createElement(
                  Option,
                  { value: 'good' },
                  '\u667A\u80FD\u5408\u5E76'
                ),
                _react2.default.createElement(
                  Option,
                  { value: 'merge' },
                  '\u5B8C\u5168\u8986\u76D6'
                )
              )
            ),
            this.state.curImportType === 'swagger' && _react2.default.createElement(
              'div',
              { className: 'dataSync' },
              _react2.default.createElement(
                'span',
                { className: 'label' },
                '\u5F00\u542Furl\u5BFC\u5165\xA0',
                _react2.default.createElement(
                  _tooltip2.default,
                  { title: 'swagger url \u5BFC\u5165' },
                  _react2.default.createElement(_icon2.default, { type: 'question-circle-o' })
                ),
                ' ',
                '\xA0\xA0'
              ),
              _react2.default.createElement(_switch2.default, { checked: this.state.isSwaggerUrl, onChange: this.handleUrlChange })
            ),
            this.state.isSwaggerUrl ? _react2.default.createElement(
              'div',
              { className: 'import-content url-import-content' },
              _react2.default.createElement(_input2.default, {
                placeholder: 'http://demo.swagger.io/v2/swagger.json',
                onChange: function onChange(e) {
                  return _this5.swaggerUrlInput(e.target.value);
                }
              }),
              _react2.default.createElement(
                _button2.default,
                {
                  type: 'primary',
                  className: 'url-btn',
                  onClick: this.onUrlUpload,
                  loading: this.state.showLoading
                },
                '\u4E0A\u4F20'
              )
            ) : _react2.default.createElement(
              'div',
              { className: 'import-content' },
              _react2.default.createElement(
                _spin2.default,
                { spinning: this.state.showLoading, tip: '\u4E0A\u4F20\u4E2D...' },
                _react2.default.createElement(
                  Dragger,
                  uploadMess,
                  _react2.default.createElement(
                    'p',
                    { className: 'ant-upload-drag-icon' },
                    _react2.default.createElement(_icon2.default, { type: 'inbox' })
                  ),
                  _react2.default.createElement(
                    'p',
                    { className: 'ant-upload-text' },
                    '\u70B9\u51FB\u6216\u8005\u62D6\u62FD\u6587\u4EF6\u5230\u4E0A\u4F20\u533A\u57DF'
                  ),
                  _react2.default.createElement('p', {
                    className: 'ant-upload-hint',
                    onClick: function onClick(e) {
                      e.stopPropagation();
                    },
                    dangerouslySetInnerHTML: {
                      __html: this.state.curImportType ? importDataModule[this.state.curImportType].desc : null
                    }
                  })
                )
              )
            )
          ),
          _react2.default.createElement(
            'div',
            {
              className: 'dataImportCon',
              style: {
                marginLeft: '20px',
                display: (0, _keys2.default)(exportDataModule).length > 0 ? '' : 'none'
              }
            },
            _react2.default.createElement(
              'div',
              null,
              _react2.default.createElement(
                'h3',
                null,
                '\u6570\u636E\u5BFC\u51FA'
              )
            ),
            _react2.default.createElement(
              'div',
              { className: 'dataImportTile' },
              _react2.default.createElement(
                _select2.default,
                { placeholder: '\u8BF7\u9009\u62E9\u5BFC\u51FA\u6570\u636E\u7684\u65B9\u5F0F', onChange: this.handleExportType },
                (0, _keys2.default)(exportDataModule).map(function (name) {
                  return _react2.default.createElement(
                    Option,
                    { key: name, value: name },
                    exportDataModule[name].name
                  );
                })
              )
            ),
            _react2.default.createElement(
              'div',
              { className: 'dataExport' },
              _react2.default.createElement(
                RadioGroup,
                { defaultValue: 'all', onChange: this.handleChange },
                _react2.default.createElement(
                  _radio2.default,
                  { value: 'all' },
                  '\u5168\u90E8\u63A5\u53E3'
                ),
                _react2.default.createElement(
                  _radio2.default,
                  { value: 'open' },
                  '\u516C\u5F00\u63A5\u53E3'
                )
              )
            ),
            _react2.default.createElement(
              'div',
              { className: 'export-content' },
              this.state.curExportType ? _react2.default.createElement(
                'div',
                null,
                _react2.default.createElement(
                  'p',
                  { className: 'export-desc' },
                  exportDataModule[this.state.curExportType].desc
                ),
                _react2.default.createElement(
                  'a',
                  {
                    target: '_blank',
                    rel: 'noopener noreferrer',
                    href: exportHref },
                  _react2.default.createElement(
                    _button2.default,
                    { className: 'export-button', type: 'primary', size: 'large' },
                    ' ',
                    '\u5BFC\u51FA',
                    ' '
                  )
                ),
                _react2.default.createElement(
                  _checkbox2.default,
                  {
                    checked: this.state.isWiki,
                    onChange: this.handleWikiChange,
                    className: 'wiki-btn',
                    disabled: this.state.curExportType === 'json'
                  },
                  '\u6DFB\u52A0wiki\xA0',
                  _react2.default.createElement(
                    _tooltip2.default,
                    { title: '\u5F00\u542F\u540E html \u548C markdown \u6570\u636E\u5BFC\u51FA\u4F1A\u5E26\u4E0Awiki\u6570\u636E' },
                    _react2.default.createElement(_icon2.default, { type: 'question-circle-o' })
                  ),
                  ' '
                )
              ) : _react2.default.createElement(
                _button2.default,
                { disabled: true, className: 'export-button', type: 'primary', size: 'large' },
                ' ',
                '\u5BFC\u51FA',
                ' '
              )
            )
          )
        )
      )
    );
  };

  return ProjectData;
}(_react.PureComponent), _class2.propTypes = {
  match: _propTypes2.default.object,
  curCatid: _propTypes2.default.number,
  basePath: _propTypes2.default.string,
  saveImportData: _propTypes2.default.func,
  fetchUpdateLogData: _propTypes2.default.func,
  updateLogList: _propTypes2.default.array,
  handleSwaggerUrlData: _propTypes2.default.func,
  swaggerUrlData: _propTypes2.default.string
}, _temp)) || _class);
exports.default = ProjectData;