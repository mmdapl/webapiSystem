{"version":3,"sources":["client\\components\\ModalPostman\\MockList.js"],"names":["wordList","constants","MOCK_SOURCE","Search","MockList","props","onFilter","list","filter","item","mock","indexOf","e","target","value","setState","state","componentDidMount","render","click","clickValue","map","index","Component","propTypes","PropTypes","func","string"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AAEA;;;;;;AACA,IAAMA,WAAWC,mBAAUC,WAA3B;AACA,IAAMC,SAAS,gBAAMA,MAArB;;IAEMC,Q;;;AAMJ,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA,+DACjB,sBAAMA,KAAN,CADiB;;AAAA,UAcnBC,QAdmB,GAcR,aAAK;AACd,UAAMC,OAAOP,SAASQ,MAAT,CAAgB,gBAAQ;AACnC,eAAOC,KAAKC,IAAL,CAAUC,OAAV,CAAkBC,EAAEC,MAAF,CAASC,KAA3B,MAAsC,CAAC,CAA9C;AACD,OAFY,CAAb;AAGA,YAAKC,QAAL,CAAc;AACZP,gBAAQI,EAAEC,MAAF,CAASC,KADL;AAEZP,cAAMA;AAFM,OAAd;AAID,KAtBkB;;AAEjB,UAAKS,KAAL,GAAa;AACXR,cAAQ,EADG;AAEXD,YAAM;AAFK,KAAb;AAFiB;AAMlB;;qBAEDU,iB,gCAAoB;AAClB,SAAKF,QAAL,CAAc;AACZR,YAAMP;AADM,KAAd;AAGD,G;;qBAYDkB,M,qBAAS;AAAA,iBACkB,KAAKF,KADvB;AAAA,QACCT,IADD,UACCA,IADD;AAAA,QACOC,MADP,UACOA,MADP;AAAA,iBAEuB,KAAKH,KAF5B;AAAA,QAECc,KAFD,UAECA,KAFD;AAAA,QAEQC,UAFR,UAEQA,UAFR;;AAGP,WACE;AAAA;AAAA,QAAK,WAAU,yBAAf;AACE,oCAAC,MAAD;AACE,kBAAU,KAAKd,QADjB;AAEE,eAAOE,MAFT;AAGE,qBAAY,8BAHd;AAIE,mBAAU;AAJZ,QADF;AAOGD,WAAKc,GAAL,CAAS,UAACZ,IAAD,EAAOa,KAAP,EAAiB;AACzB,eACE;AAAA;AAAA;AACE,iBAAKA,KADP;AAEE,kBAAK,MAFP;AAGE,mBAAM,QAHR;AAIE,uBAAW,UAAUb,KAAKC,IAAL,KAAcU,UAAd,GAA2B,SAA3B,GAAuC,EAAjD,CAJb;AAKE,qBAAS;AAAA,qBAAMD,MAAMV,KAAKC,IAAX,CAAN;AAAA;AALX;AAOE;AAAA;AAAA;AAAOD,iBAAKC;AAAZ;AAPF,SADF;AAWD,OAZA;AAPH,KADF;AAuBD,G;;;EAxDoBa,gB,UACdC,S,GAAY;AACjBL,SAAOM,oBAAUC,IADA;AAEjBN,cAAYK,oBAAUE;AAFL,C;kBA0DNvB,Q","file":"MockList.js","sourceRoot":"C:/Users/DUOYI/Desktop/api/test/vendors","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Row, Input } from 'antd';\nimport constants from '../../constants/variable.js';\nconst wordList = constants.MOCK_SOURCE;\nconst Search = Input.Search;\n\nclass MockList extends Component {\n  static propTypes = {\n    click: PropTypes.func,\n    clickValue: PropTypes.string\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      filter: '',\n      list: []\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      list: wordList\n    });\n  }\n\n  onFilter = e => {\n    const list = wordList.filter(item => {\n      return item.mock.indexOf(e.target.value) !== -1;\n    });\n    this.setState({\n      filter: e.target.value,\n      list: list\n    });\n  };\n\n  render() {\n    const { list, filter } = this.state;\n    const { click, clickValue } = this.props;\n    return (\n      <div className=\"modal-postman-form-mock\">\n        <Search\n          onChange={this.onFilter}\n          value={filter}\n          placeholder=\"搜索mock数据\"\n          className=\"mock-search\"\n        />\n        {list.map((item, index) => {\n          return (\n            <Row\n              key={index}\n              type=\"flex\"\n              align=\"middle\"\n              className={'row ' + (item.mock === clickValue ? 'checked' : '')}\n              onClick={() => click(item.mock)}\n            >\n              <span>{item.mock}</span>\n            </Row>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nexport default MockList;\n"]}