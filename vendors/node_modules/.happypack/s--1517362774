'use strict';

exports.__esModule = true;

var _tooltip = require('antd/lib/tooltip');

var _tooltip2 = _interopRequireDefault(_tooltip);

var _row = require('antd/lib/row');

var _row2 = _interopRequireDefault(_row);

var _col = require('antd/lib/col');

var _col2 = _interopRequireDefault(_col);

var _table = require('antd/lib/table');

var _table2 = _interopRequireDefault(_table);

var _icon = require('antd/lib/icon');

var _icon2 = _interopRequireDefault(_icon);

var _message2 = require('antd/lib/message');

var _message3 = _interopRequireDefault(_message2);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _dec, _class, _class2, _temp;

require('./View.scss');

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactRedux = require('react-redux');

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reactRouterDom = require('react-router-dom');

var _AceEditor = require('../../../../components/AceEditor/AceEditor');

var _AceEditor2 = _interopRequireDefault(_AceEditor);

var _common = require('../../../../common.js');

var _ErrMsg = require('../../../../components/ErrMsg/ErrMsg.js');

var _ErrMsg2 = _interopRequireDefault(_ErrMsg);

var _variable = require('../../../../constants/variable');

var _variable2 = _interopRequireDefault(_variable);

var _variable3 = require('../../../../constants/variable.js');

var _variable4 = _interopRequireDefault(_variable3);

var _copyToClipboard = require('copy-to-clipboard');

var _copyToClipboard2 = _interopRequireDefault(_copyToClipboard);

var _SchemaTable = require('../../../../components/SchemaTable/SchemaTable.js');

var _SchemaTable2 = _interopRequireDefault(_SchemaTable);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var HTTP_METHOD = _variable4.default.HTTP_METHOD;

var View = (_dec = (0, _reactRedux.connect)(function (state) {
  return {
    curData: state.inter.curdata,
    custom_field: state.group.field,
    currProject: state.project.currProject
  };
}), _dec(_class = (_temp = _class2 = function (_Component) {
  (0, _inherits3.default)(View, _Component);

  function View(props) {
    (0, _classCallCheck3.default)(this, View);

    var _this = (0, _possibleConstructorReturn3.default)(this, _Component.call(this, props));

    _this.enterItem = function () {
      _this.setState({
        enter: true
      });
    };

    _this.leaveItem = function () {
      _this.setState({
        enter: false
      });
    };

    _this.copyUrl = function (url) {
      (0, _copyToClipboard2.default)(url);
      _message3.default.success('已经成功复制到剪切板');
    };

    _this.flagMsg = function (mock, strice) {
      if (mock && strice) {
        return _react2.default.createElement(
          'span',
          null,
          '( \u5168\u5C40mock & \u4E25\u683C\u6A21\u5F0F )'
        );
      } else if (!mock && strice) {
        return _react2.default.createElement(
          'span',
          null,
          '( \u4E25\u683C\u6A21\u5F0F )'
        );
      } else if (mock && !strice) {
        return _react2.default.createElement(
          'span',
          null,
          '( \u5168\u5C40mock )'
        );
      } else {
        return;
      }
    };

    _this.state = {
      init: true,
      enter: false
    };
    return _this;
  }

  View.prototype.req_body_form = function req_body_form(req_body_type, _req_body_form) {
    if (req_body_type === 'form') {
      var columns = [{
        title: '参数名称',
        dataIndex: 'name',
        key: 'name',
        width: 140
      }, {
        title: '参数类型',
        dataIndex: 'type',
        key: 'type',
        width: 100,
        render: function render(text) {
          text = text || '';
          return text.toLowerCase() === 'text' ? _react2.default.createElement(
            'span',
            null,
            _react2.default.createElement(
              'i',
              { className: 'query-icon text' },
              'T'
            ),
            '\u6587\u672C'
          ) : _react2.default.createElement(
            'span',
            null,
            _react2.default.createElement(_icon2.default, { type: 'file', className: 'query-icon' }),
            '\u6587\u4EF6'
          );
        }
      }, {
        title: '是否必须',
        dataIndex: 'required',
        key: 'required',
        width: 100
      }, {
        title: '示例',
        dataIndex: 'example',
        key: 'example',
        width: 80,
        render: function render(_, item) {
          return _react2.default.createElement(
            'p',
            { style: { whiteSpace: 'pre-wrap' } },
            item.example
          );
        }
      }, {
        title: '备注',
        dataIndex: 'value',
        key: 'value',
        render: function render(_, item) {
          return _react2.default.createElement(
            'p',
            { style: { whiteSpace: 'pre-wrap' } },
            item.value
          );
        }
      }];

      var dataSource = [];
      if (_req_body_form && _req_body_form.length) {
        _req_body_form.map(function (item, i) {
          dataSource.push({
            key: i,
            name: item.name,
            value: item.desc,
            example: item.example,
            required: item.required == 0 ? '否' : '是',
            type: item.type
          });
        });
      }

      return _react2.default.createElement(
        'div',
        { style: { display: dataSource.length ? '' : 'none' }, className: 'colBody' },
        _react2.default.createElement(_table2.default, {
          bordered: true,
          size: 'small',
          pagination: false,
          columns: columns,
          dataSource: dataSource
        })
      );
    }
  };

  View.prototype.res_body = function res_body(res_body_type, _res_body, res_body_is_json_schema) {
    if (res_body_type === 'json') {
      if (res_body_is_json_schema) {
        return _react2.default.createElement(_SchemaTable2.default, { dataSource: _res_body });
      } else {
        return _react2.default.createElement(
          'div',
          { className: 'colBody' },
          _react2.default.createElement(_AceEditor2.default, { data: _res_body, readOnly: true, style: { minHeight: 600 } })
        );
      }
    } else if (res_body_type === 'raw') {
      return _react2.default.createElement(
        'div',
        { className: 'colBody' },
        _react2.default.createElement(_AceEditor2.default, { data: _res_body, readOnly: true, mode: 'text', style: { minHeight: 300 } })
      );
    }
  };

  View.prototype.req_body = function req_body(req_body_type, req_body_other, req_body_is_json_schema) {
    if (req_body_other) {
      if (req_body_is_json_schema && req_body_type === 'json') {
        return _react2.default.createElement(_SchemaTable2.default, { dataSource: req_body_other });
      } else {
        return _react2.default.createElement(
          'div',
          { className: 'colBody' },
          _react2.default.createElement(_AceEditor2.default, {
            data: req_body_other,
            readOnly: true,
            style: { minHeight: 300 },
            mode: req_body_type === 'json' ? 'javascript' : 'text'
          })
        );
      }
    }
  };

  View.prototype.req_query = function req_query(query) {
    var columns = [{
      title: '参数名称',
      dataIndex: 'name',
      width: 140,
      key: 'name'
    }, {
      title: '是否必须',
      width: 100,
      dataIndex: 'required',
      key: 'required'
    }, {
      title: '示例',
      dataIndex: 'example',
      key: 'example',
      width: 80,
      render: function render(_, item) {
        return _react2.default.createElement(
          'p',
          { style: { whiteSpace: 'pre-wrap' } },
          item.example
        );
      }
    }, {
      title: '备注',
      dataIndex: 'value',
      key: 'value',
      render: function render(_, item) {
        return _react2.default.createElement(
          'p',
          { style: { whiteSpace: 'pre-wrap' } },
          item.value
        );
      }
    }];

    var dataSource = [];
    if (query && query.length) {
      query.map(function (item, i) {
        dataSource.push({
          key: i,
          name: item.name,
          value: item.desc,
          example: item.example,
          required: item.required == 0 ? '否' : '是'
        });
      });
    }

    return _react2.default.createElement(_table2.default, { bordered: true, size: 'small', pagination: false, columns: columns, dataSource: dataSource });
  };

  View.prototype.countEnter = function countEnter(str) {
    var i = 0;
    var c = 0;
    if (!str || !str.indexOf) {
      return 0;
    }
    while (str.indexOf('\n', i) > -1) {
      i = str.indexOf('\n', i) + 2;
      c++;
    }
    return c;
  };

  View.prototype.componentDidMount = function componentDidMount() {
    if (!this.props.curData.title && this.state.init) {
      this.setState({ init: false });
    }
  };

  View.prototype.render = function render() {
    var _this2 = this;

    var dataSource = [];
    if (this.props.curData.req_headers && this.props.curData.req_headers.length) {
      this.props.curData.req_headers.map(function (item, i) {
        dataSource.push({
          key: i,
          name: item.name,
          required: item.required == 0 ? '否' : '是',
          value: item.value,
          example: item.example,
          desc: item.desc
        });
      });
    }

    var req_dataSource = [];
    if (this.props.curData.req_params && this.props.curData.req_params.length) {
      this.props.curData.req_params.map(function (item, i) {
        req_dataSource.push({
          key: i,
          name: item.name,
          desc: item.desc,
          example: item.example
        });
      });
    }
    var req_params_columns = [{
      title: '参数名称',
      dataIndex: 'name',
      key: 'name',
      width: 140
    }, {
      title: '示例',
      dataIndex: 'example',
      key: 'example',
      width: 80,
      render: function render(_, item) {
        return _react2.default.createElement(
          'p',
          { style: { whiteSpace: 'pre-wrap' } },
          item.example
        );
      }
    }, {
      title: '备注',
      dataIndex: 'desc',
      key: 'desc',
      render: function render(_, item) {
        return _react2.default.createElement(
          'p',
          { style: { whiteSpace: 'pre-wrap' } },
          item.desc
        );
      }
    }];

    var columns = [{
      title: '参数名称',
      dataIndex: 'name',
      key: 'name',
      width: '200px'
    }, {
      title: '参数值',
      dataIndex: 'value',
      key: 'value',
      width: '300px'
    }, {
      title: '是否必须',
      dataIndex: 'required',
      key: 'required',
      width: '100px'
    }, {
      title: '示例',
      dataIndex: 'example',
      key: 'example',
      width: '80px',
      render: function render(_, item) {
        return _react2.default.createElement(
          'p',
          { style: { whiteSpace: 'pre-wrap' } },
          item.example
        );
      }
    }, {
      title: '备注',
      dataIndex: 'desc',
      key: 'desc',
      render: function render(_, item) {
        return _react2.default.createElement(
          'p',
          { style: { whiteSpace: 'pre-wrap' } },
          item.desc
        );
      }
    }];
    var status = {
      undone: '未完成',
      done: '已完成'
    };

    var bodyShow = this.props.curData.req_body_other || this.props.curData.req_body_type === 'form' && this.props.curData.req_body_form && this.props.curData.req_body_form.length;

    var requestShow = dataSource && dataSource.length || req_dataSource && req_dataSource.length || this.props.curData.req_query && this.props.curData.req_query.length || bodyShow;

    var methodColor = _variable2.default.METHOD_COLOR[this.props.curData.method ? this.props.curData.method.toLowerCase() : 'get'];

    // statusColor = statusColor[this.props.curData.status?this.props.curData.status.toLowerCase():"undone"];
    // const aceEditor = <div style={{ display: this.props.curData.req_body_other && (this.props.curData.req_body_type !== "form") ? "block" : "none" }} className="colBody">
    //   <AceEditor data={this.props.curData.req_body_other} readOnly={true} style={{ minHeight: 300 }} mode={this.props.curData.req_body_type === 'json' ? 'javascript' : 'text'} />
    // </div>
    if (!methodColor) {
      methodColor = 'get';
    }

    var _props$curData = this.props.curData,
        tag = _props$curData.tag,
        up_time = _props$curData.up_time,
        title = _props$curData.title,
        uid = _props$curData.uid,
        username = _props$curData.username;


    var res = _react2.default.createElement(
      'div',
      { className: 'caseContainer' },
      _react2.default.createElement(
        'h2',
        { className: 'interface-title', style: { marginTop: 0 } },
        '\u57FA\u672C\u4FE1\u606F'
      ),
      _react2.default.createElement(
        'div',
        { className: 'panel-view' },
        _react2.default.createElement(
          _row2.default,
          { className: 'row' },
          _react2.default.createElement(
            _col2.default,
            { span: 4, className: 'colKey' },
            '\u63A5\u53E3\u540D\u79F0\uFF1A'
          ),
          _react2.default.createElement(
            _col2.default,
            { span: 8, className: 'colName' },
            title
          ),
          _react2.default.createElement(
            _col2.default,
            { span: 4, className: 'colKey' },
            '\u521B\u2002\u5EFA\u2002\u4EBA\uFF1A'
          ),
          _react2.default.createElement(
            _col2.default,
            { span: 8, className: 'colValue' },
            _react2.default.createElement(
              _reactRouterDom.Link,
              { className: 'user-name', to: '/user/profile/' + uid },
              _react2.default.createElement('img', { src: '/api/user/avatar?uid=' + uid, className: 'user-img' }),
              username
            )
          )
        ),
        _react2.default.createElement(
          _row2.default,
          { className: 'row' },
          _react2.default.createElement(
            _col2.default,
            { span: 4, className: 'colKey' },
            '\u72B6\u2003\u2003\u6001\uFF1A'
          ),
          _react2.default.createElement(
            _col2.default,
            { span: 8, className: 'tag-status ' + this.props.curData.status },
            status[this.props.curData.status]
          ),
          _react2.default.createElement(
            _col2.default,
            { span: 4, className: 'colKey' },
            '\u66F4\u65B0\u65F6\u95F4\uFF1A'
          ),
          _react2.default.createElement(
            _col2.default,
            { span: 8 },
            (0, _common.formatTime)(up_time)
          )
        ),
        (0, _common.safeArray)(tag) && (0, _common.safeArray)(tag).length > 0 && _react2.default.createElement(
          _row2.default,
          { className: 'row remark' },
          _react2.default.createElement(
            _col2.default,
            { span: 4, className: 'colKey' },
            'Tag \uFF1A'
          ),
          _react2.default.createElement(
            _col2.default,
            { span: 18, className: 'colValue' },
            tag.join(' , ')
          )
        ),
        _react2.default.createElement(
          _row2.default,
          { className: 'row' },
          _react2.default.createElement(
            _col2.default,
            { span: 4, className: 'colKey' },
            '\u63A5\u53E3\u8DEF\u5F84\uFF1A'
          ),
          _react2.default.createElement(
            _col2.default,
            {
              span: 18,
              className: 'colValue',
              onMouseEnter: this.enterItem,
              onMouseLeave: this.leaveItem
            },
            _react2.default.createElement(
              'span',
              {
                style: { color: methodColor.color, backgroundColor: methodColor.bac },
                className: 'colValue tag-method'
              },
              this.props.curData.method
            ),
            _react2.default.createElement(
              'span',
              { className: 'colValue' },
              this.props.currProject.basepath,
              this.props.curData.path
            ),
            _react2.default.createElement(
              _tooltip2.default,
              { title: '\u590D\u5236\u8DEF\u5F84' },
              _react2.default.createElement(_icon2.default, {
                type: 'copy',
                className: 'interface-url-icon',
                onClick: function onClick() {
                  return _this2.copyUrl(_this2.props.currProject.basepath + _this2.props.curData.path);
                },
                style: { display: this.state.enter ? 'inline-block' : 'none' }
              })
            )
          )
        ),
        _react2.default.createElement(
          _row2.default,
          { className: 'row' },
          _react2.default.createElement(
            _col2.default,
            { span: 4, className: 'colKey' },
            'Mock\u5730\u5740\uFF1A'
          ),
          _react2.default.createElement(
            _col2.default,
            { span: 18, className: 'colValue' },
            this.flagMsg(this.props.currProject.is_mock_open, this.props.currProject.strice),
            _react2.default.createElement(
              'span',
              {
                className: 'href',
                onClick: function onClick() {
                  return window.open(location.protocol + '//' + location.hostname + (location.port !== '' ? ':' + location.port : '') + ('/mock/' + _this2.props.currProject._id + _this2.props.currProject.basepath + _this2.props.curData.path), '_blank');
                }
              },
              location.protocol + '//' + location.hostname + (location.port !== '' ? ':' + location.port : '') + ('/mock/' + this.props.currProject._id + this.props.currProject.basepath + this.props.curData.path)
            )
          )
        ),
        this.props.curData.custom_field_value && this.props.custom_field.enable && _react2.default.createElement(
          _row2.default,
          { className: 'row remark' },
          _react2.default.createElement(
            _col2.default,
            { span: 4, className: 'colKey' },
            this.props.custom_field.name,
            '\uFF1A'
          ),
          _react2.default.createElement(
            _col2.default,
            { span: 18, className: 'colValue' },
            this.props.curData.custom_field_value
          )
        )
      ),
      this.props.curData.desc && _react2.default.createElement(
        'h2',
        { className: 'interface-title' },
        '\u5907\u6CE8'
      ),
      this.props.curData.desc && _react2.default.createElement('div', {
        className: 'tui-editor-contents',
        style: { margin: '0px', padding: '0px 20px', float: 'none' },
        dangerouslySetInnerHTML: { __html: this.props.curData.desc }
      }),
      _react2.default.createElement(
        'h2',
        { className: 'interface-title', style: { display: requestShow ? '' : 'none' } },
        '\u8BF7\u6C42\u53C2\u6570'
      ),
      req_dataSource.length ? _react2.default.createElement(
        'div',
        { className: 'colHeader' },
        _react2.default.createElement(
          'h3',
          { className: 'col-title' },
          '\u8DEF\u5F84\u53C2\u6570\uFF1A'
        ),
        _react2.default.createElement(_table2.default, {
          bordered: true,
          size: 'small',
          pagination: false,
          columns: req_params_columns,
          dataSource: req_dataSource
        })
      ) : '',
      dataSource.length ? _react2.default.createElement(
        'div',
        { className: 'colHeader' },
        _react2.default.createElement(
          'h3',
          { className: 'col-title' },
          'Headers\uFF1A'
        ),
        _react2.default.createElement(_table2.default, {
          bordered: true,
          size: 'small',
          pagination: false,
          columns: columns,
          dataSource: dataSource
        })
      ) : '',
      this.props.curData.req_query && this.props.curData.req_query.length ? _react2.default.createElement(
        'div',
        { className: 'colQuery' },
        _react2.default.createElement(
          'h3',
          { className: 'col-title' },
          'Query\uFF1A'
        ),
        this.req_query(this.props.curData.req_query)
      ) : '',
      _react2.default.createElement(
        'div',
        {
          style: {
            display: this.props.curData.method && HTTP_METHOD[this.props.curData.method.toUpperCase()].request_body ? '' : 'none'
          }
        },
        _react2.default.createElement(
          'h3',
          { style: { display: bodyShow ? '' : 'none' }, className: 'col-title' },
          'Body:'
        ),
        this.props.curData.req_body_type === 'form' ? this.req_body_form(this.props.curData.req_body_type, this.props.curData.req_body_form) : this.req_body(this.props.curData.req_body_type, this.props.curData.req_body_other, this.props.curData.req_body_is_json_schema)
      ),
      _react2.default.createElement(
        'h2',
        { className: 'interface-title' },
        '\u8FD4\u56DE\u6570\u636E'
      ),
      this.res_body(this.props.curData.res_body_type, this.props.curData.res_body, this.props.curData.res_body_is_json_schema)
    );

    if (!this.props.curData.title) {
      if (this.state.init) {
        res = _react2.default.createElement('div', null);
      } else {
        res = _react2.default.createElement(_ErrMsg2.default, { type: 'noData' });
      }
    }
    return res;
  };

  return View;
}(_react.PureComponent), _class2.propTypes = {
  curData: _propTypes2.default.object,
  currProject: _propTypes2.default.object,
  custom_field: _propTypes2.default.object
}, _temp)) || _class);
exports.default = View;