'use strict';

exports.__esModule = true;

var _row = require('antd/lib/row');

var _row2 = _interopRequireDefault(_row);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _input = require('antd/lib/input');

var _input2 = _interopRequireDefault(_input);

var _class, _temp;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _variable = require('../../constants/variable.js');

var _variable2 = _interopRequireDefault(_variable);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var wordList = _variable2.default.MOCK_SOURCE;
var Search = _input2.default.Search;

var MockList = (_temp = _class = function (_Component) {
  (0, _inherits3.default)(MockList, _Component);

  function MockList(props) {
    (0, _classCallCheck3.default)(this, MockList);

    var _this = (0, _possibleConstructorReturn3.default)(this, _Component.call(this, props));

    _this.onFilter = function (e) {
      var list = wordList.filter(function (item) {
        return item.mock.indexOf(e.target.value) !== -1;
      });
      _this.setState({
        filter: e.target.value,
        list: list
      });
    };

    _this.state = {
      filter: '',
      list: []
    };
    return _this;
  }

  MockList.prototype.componentDidMount = function componentDidMount() {
    this.setState({
      list: wordList
    });
  };

  MockList.prototype.render = function render() {
    var _state = this.state,
        list = _state.list,
        filter = _state.filter;
    var _props = this.props,
        click = _props.click,
        clickValue = _props.clickValue;

    return _react2.default.createElement(
      'div',
      { className: 'modal-postman-form-mock' },
      _react2.default.createElement(Search, {
        onChange: this.onFilter,
        value: filter,
        placeholder: '\u641C\u7D22mock\u6570\u636E',
        className: 'mock-search'
      }),
      list.map(function (item, index) {
        return _react2.default.createElement(
          _row2.default,
          {
            key: index,
            type: 'flex',
            align: 'middle',
            className: 'row ' + (item.mock === clickValue ? 'checked' : ''),
            onClick: function onClick() {
              return click(item.mock);
            }
          },
          _react2.default.createElement(
            'span',
            null,
            item.mock
          )
        );
      })
    );
  };

  return MockList;
}(_react.Component), _class.propTypes = {
  click: _propTypes2.default.func,
  clickValue: _propTypes2.default.string
}, _temp);
exports.default = MockList;