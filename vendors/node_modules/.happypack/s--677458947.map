{"version":3,"sources":["client\\containers\\Project\\Setting\\ProjectMember\\ProjectMember.js"],"names":["Option","arrayAddKey","arr","map","item","index","key","ProjectMember","projectMsg","state","project","currProject","uid","user","projectList","fetchGroupMemberList","getProjectMemberList","addMember","delMember","fetchGroupMsg","changeMemberRole","getProject","fetchProjectList","changeMemberEmailNotice","props","showAddMemberModal","setState","visible","showImportMemberModal","group_id","modalVisible","reFetchList","match","params","id","then","projectMemberList","res","payload","data","handleOk","addMembers","inputUids","member_uids","memberUids","role","inputRole","errcode","add_members","exist_members","addLength","length","existLength","success","changeNewMemberRole","value","deleteConfirm","member_uid","errmsg","changeUserRole","e","split","changeEmailNotice","notice","handleCancel","handleModalCancel","handleChange","selectProjectId","handleModalOk","menberList","memberUidList","onUserSelect","uids","groupMemberList","groupName","dataSource","componentWillMount","groupMsg","group_name","render","isEmailChangeEable","columns","title","name","dataIndex","text","record","email_notice","className","children","_id","width","emptyText","location","protocol","host","username","backgroundColor","fontSize","marginLeft","borderRadius","Component","propTypes","PropTypes","object","projectId","number","func","array"],"mappings":"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","file":"ProjectMember.js","sourceRoot":"C:/Users/DUOYI/Desktop/api/test/vendors","sourcesContent":["import React, { PureComponent as Component } from 'react';\nimport {\n  Table,\n  Card,\n  Badge,\n  Select,\n  Button,\n  Modal,\n  Row,\n  Col,\n  message,\n  Popconfirm,\n  Switch,\n  Tooltip\n} from 'antd';\nimport PropTypes from 'prop-types';\nimport { fetchGroupMsg } from '../../../../reducer/modules/group';\nimport { connect } from 'react-redux';\nimport ErrMsg from '../../../../components/ErrMsg/ErrMsg.js';\nimport { fetchGroupMemberList } from '../../../../reducer/modules/group.js';\nimport {\n  fetchProjectList,\n  getProjectMemberList,\n  getProject,\n  addMember,\n  delMember,\n  changeMemberRole,\n  changeMemberEmailNotice\n} from '../../../../reducer/modules/project.js';\nimport UsernameAutoComplete from '../../../../components/UsernameAutoComplete/UsernameAutoComplete.js';\nimport '../Setting.scss';\n\nconst Option = Select.Option;\n\nconst arrayAddKey = arr => {\n  return arr.map((item, index) => {\n    return {\n      ...item,\n      key: index\n    };\n  });\n};\n\n@connect(\n  state => {\n    return {\n      projectMsg: state.project.currProject,\n      uid: state.user.uid,\n      projectList: state.project.projectList\n    };\n  },\n  {\n    fetchGroupMemberList,\n    getProjectMemberList,\n    addMember,\n    delMember,\n    fetchGroupMsg,\n    changeMemberRole,\n    getProject,\n    fetchProjectList,\n    changeMemberEmailNotice\n  }\n)\nclass ProjectMember extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      groupMemberList: [],\n      projectMemberList: [],\n      groupName: '',\n      role: '',\n      visible: false,\n      dataSource: [],\n      inputUids: [],\n      inputRole: 'dev',\n      modalVisible: false,\n      selectProjectId: 0\n    };\n  }\n  static propTypes = {\n    match: PropTypes.object,\n    projectId: PropTypes.number,\n    projectMsg: PropTypes.object,\n    uid: PropTypes.number,\n    addMember: PropTypes.func,\n    delMember: PropTypes.func,\n    changeMemberRole: PropTypes.func,\n    getProject: PropTypes.func,\n    fetchGroupMemberList: PropTypes.func,\n    fetchGroupMsg: PropTypes.func,\n    getProjectMemberList: PropTypes.func,\n    fetchProjectList: PropTypes.func,\n    projectList: PropTypes.array,\n    changeMemberEmailNotice: PropTypes.func\n  };\n\n  showAddMemberModal = () => {\n    this.setState({\n      visible: true\n    });\n  };\n\n  showImportMemberModal = async () => {\n    await this.props.fetchProjectList(this.props.projectMsg.group_id);\n    this.setState({\n      modalVisible: true\n    });\n  };\n\n  // 重新获取列表\n\n  reFetchList = () => {\n    this.props.getProjectMemberList(this.props.match.params.id).then(res => {\n      this.setState({\n        projectMemberList: arrayAddKey(res.payload.data.data),\n        visible: false,\n        modalVisible: false\n      });\n    });\n  };\n\n  handleOk = () => {\n    this.addMembers(this.state.inputUids);\n  };\n\n  // 增 - 添加成员\n  addMembers = memberUids => {\n    this.props\n      .addMember({\n        id: this.props.match.params.id,\n        member_uids: memberUids,\n        role: this.state.inputRole\n      })\n      .then(res => {\n        if (!res.payload.data.errcode) {\n          const { add_members, exist_members } = res.payload.data.data;\n          const addLength = add_members.length;\n          const existLength = exist_members.length;\n          this.setState({\n            inputRole: 'dev',\n            inputUids: []\n          });\n          message.success(`添加成功! 已成功添加 ${addLength} 人，其中 ${existLength} 人已存在`);\n          this.reFetchList(); // 添加成功后重新获取分组成员列表\n        }\n      });\n  };\n  // 添加成员时 选择新增成员权限\n  changeNewMemberRole = value => {\n    this.setState({\n      inputRole: value\n    });\n  };\n\n  // 删 - 删除分组成员\n  deleteConfirm = member_uid => {\n    return () => {\n      const id = this.props.match.params.id;\n      this.props.delMember({ id, member_uid }).then(res => {\n        if (!res.payload.data.errcode) {\n          message.success(res.payload.data.errmsg);\n          this.reFetchList(); // 添加成功后重新获取分组成员列表\n        }\n      });\n    };\n  };\n\n  // 改 - 修改成员权限\n  changeUserRole = e => {\n    const id = this.props.match.params.id;\n    const role = e.split('-')[0];\n    const member_uid = e.split('-')[1];\n    this.props.changeMemberRole({ id, member_uid, role }).then(res => {\n      if (!res.payload.data.errcode) {\n        message.success(res.payload.data.errmsg);\n        this.reFetchList(); // 添加成功后重新获取分组成员列表\n      }\n    });\n  };\n\n  // 修改用户是否接收消息通知\n  changeEmailNotice = async (notice, member_uid) => {\n    const id = this.props.match.params.id;\n    await this.props.changeMemberEmailNotice({ id, member_uid, notice });\n    this.reFetchList(); // 添加成功后重新获取项目成员列表\n  };\n\n  // 关闭模态框\n  handleCancel = () => {\n    this.setState({\n      visible: false\n    });\n  };\n  // 关闭批量导入模态框\n  handleModalCancel = () => {\n    this.setState({\n      modalVisible: false\n    });\n  };\n\n  // 处理选择项目\n  handleChange = key => {\n    this.setState({\n      selectProjectId: key\n    });\n  };\n\n  // 确定批量导入模态框\n  handleModalOk = async () => {\n    // 获取项目中的成员列表\n    const menberList = await this.props.getProjectMemberList(this.state.selectProjectId);\n    const memberUidList = menberList.payload.data.data.map(item => {\n      return item.uid;\n    });\n    this.addMembers(memberUidList);\n  };\n\n  onUserSelect = uids => {\n    this.setState({\n      inputUids: uids\n    });\n  };\n\n  async componentWillMount() {\n    const groupMemberList = await this.props.fetchGroupMemberList(this.props.projectMsg.group_id);\n    const groupMsg = await this.props.fetchGroupMsg(this.props.projectMsg.group_id);\n    const projectMemberList = await this.props.getProjectMemberList(this.props.match.params.id);\n    this.setState({\n      groupMemberList: groupMemberList.payload.data.data,\n      groupName: groupMsg.payload.data.data.group_name,\n      projectMemberList: arrayAddKey(projectMemberList.payload.data.data),\n      role: this.props.projectMsg.role\n    });\n  }\n\n  render() {\n    const isEmailChangeEable = this.state.role === 'owner' || this.state.role === 'admin';\n    const columns = [\n      {\n        title:\n          this.props.projectMsg.name + ' 项目成员 (' + this.state.projectMemberList.length + ') 人',\n        dataIndex: 'username',\n        key: 'username',\n        render: (text, record) => {\n          return (\n            <div className=\"m-user\">\n              <img src={'/api/user/avatar?uid=' + record.uid} className=\"m-user-img\" />\n              <p className=\"m-user-name\">{text}</p>\n              <Tooltip placement=\"top\" title=\"消息通知\">\n                <span>\n                  <Switch\n                    size=\"small\"\n                    checkedChildren=\"开\"\n                    unCheckedChildren=\"关\"\n                    checked={record.email_notice}\n                    disabled={!(isEmailChangeEable || record.uid === this.props.uid)}\n                    onChange={e => this.changeEmailNotice(e, record.uid)}\n                  />\n                </span>\n              </Tooltip>\n            </div>\n          );\n        }\n      },\n      {\n        title:\n          this.state.role === 'owner' || this.state.role === 'admin' ? (\n            <div className=\"btn-container\">\n              <Button className=\"btn\" type=\"primary\" icon=\"plus\" onClick={this.showAddMemberModal}>\n                添加成员\n              </Button>\n              <Button className=\"btn\" icon=\"plus\" onClick={this.showImportMemberModal}>\n                批量导入成员\n              </Button>\n            </div>\n          ) : (\n            ''\n          ),\n        key: 'action',\n        className: 'member-opration',\n        render: (text, record) => {\n          if (this.state.role === 'owner' || this.state.role === 'admin') {\n            return (\n              <div>\n                <Select\n                  value={record.role + '-' + record.uid}\n                  className=\"select\"\n                  onChange={this.changeUserRole}\n                >\n                  <Option value={'owner-' + record.uid}>组长</Option>\n                  <Option value={'dev-' + record.uid}>开发者</Option>\n                  <Option value={'guest-' + record.uid}>访客</Option>\n                </Select>\n                <Popconfirm\n                  placement=\"topRight\"\n                  title=\"你确定要删除吗? \"\n                  onConfirm={this.deleteConfirm(record.uid)}\n                  okText=\"确定\"\n                  cancelText=\"\"\n                >\n                  <Button type=\"danger\" icon=\"delete\" className=\"btn-danger\" />\n                </Popconfirm>\n              </div>\n            );\n          } else {\n            // 非管理员可以看到权限 但无法修改\n            if (record.role === 'owner') {\n              return '组长';\n            } else if (record.role === 'dev') {\n              return '开发者';\n            } else if (record.role === 'guest') {\n              return '访客';\n            } else {\n              return '';\n            }\n          }\n        }\n      }\n    ];\n    // 获取当前分组下的所有项目名称\n    const children = this.props.projectList.map((item, index) => (\n      <Option key={index} value={'' + item._id}>\n        {item.name}\n      </Option>\n    ));\n\n    return (\n      <div className=\"g-row\">\n        <div className=\"m-panel\">\n          {this.state.visible ? (\n            <Modal\n              title=\"添加成员\"\n              visible={this.state.visible}\n              onOk={this.handleOk}\n              onCancel={this.handleCancel}\n            >\n              <Row gutter={6} className=\"modal-input\">\n                <Col span=\"5\">\n                  <div className=\"label usernamelabel\">用户名: </div>\n                </Col>\n                <Col span=\"15\">\n                  <UsernameAutoComplete callbackState={this.onUserSelect} />\n                </Col>\n              </Row>\n              <Row gutter={6} className=\"modal-input\">\n                <Col span=\"5\">\n                  <div className=\"label usernamelabel\">权限: </div>\n                </Col>\n                <Col span=\"15\">\n                  <Select defaultValue=\"dev\" className=\"select\" onChange={this.changeNewMemberRole}>\n                    <Option value=\"owner\">组长</Option>\n                    <Option value=\"dev\">开发者</Option>\n                    <Option value=\"guest\">访客</Option>\n                  </Select>\n                </Col>\n              </Row>\n            </Modal>\n          ) : (\n            ''\n          )}\n          <Modal\n            title=\"批量导入成员\"\n            visible={this.state.modalVisible}\n            onOk={this.handleModalOk}\n            onCancel={this.handleModalCancel}\n          >\n            <Row gutter={6} className=\"modal-input\">\n              <Col span=\"5\">\n                <div className=\"label usernamelabel\">项目名: </div>\n              </Col>\n              <Col span=\"15\">\n                <Select\n                  showSearch\n                  style={{ width: 200 }}\n                  placeholder=\"请选择项目名称\"\n                  optionFilterProp=\"children\"\n                  onChange={this.handleChange}\n                >\n                  {children}\n                </Select>\n              </Col>\n            </Row>\n          </Modal>\n\n          <Table\n            columns={columns}\n            dataSource={this.state.projectMemberList}\n            pagination={false}\n            locale={{ emptyText: <ErrMsg type=\"noMemberInProject\" /> }}\n            className=\"setting-project-member\"\n          />\n          <Card\n            bordered={false}\n            title={\n              this.state.groupName + ' 分组成员 ' + '(' + this.state.groupMemberList.length + ') 人'\n            }\n            hoverable={true}\n            className=\"setting-group\"\n          >\n            {this.state.groupMemberList.length ? (\n              this.state.groupMemberList.map((item, index) => {\n                return (\n                  <div key={index} className=\"card-item\">\n                    <img\n                      src={\n                        location.protocol +\n                        '//' +\n                        location.host +\n                        '/api/user/avatar?uid=' +\n                        item.uid\n                      }\n                      className=\"item-img\"\n                    />\n                    <p className=\"item-name\">\n                      {item.username}\n                      {item.uid === this.props.uid ? (\n                        <Badge\n                          count={'我'}\n                          style={{\n                            backgroundColor: '#689bd0',\n                            fontSize: '13px',\n                            marginLeft: '8px',\n                            borderRadius: '4px'\n                          }}\n                        />\n                      ) : null}\n                    </p>\n                    {item.role === 'owner' ? <p className=\"item-role\">组长</p> : null}\n                    {item.role === 'dev' ? <p className=\"item-role\">开发者</p> : null}\n                    {item.role === 'guest' ? <p className=\"item-role\">访客</p> : null}\n                  </div>\n                );\n              })\n            ) : (\n              <ErrMsg type=\"noMemberInGroup\" />\n            )}\n          </Card>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ProjectMember;\n"]}