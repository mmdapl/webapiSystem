'use strict';

exports.__esModule = true;
exports.default = undefined;

var _input = require('antd/lib/input');

var _input2 = _interopRequireDefault(_input);

var _icon = require('antd/lib/icon');

var _icon2 = _interopRequireDefault(_icon);

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _autoComplete = require('antd/lib/auto-complete');

var _autoComplete2 = _interopRequireDefault(_autoComplete);

var _dec, _class, _class2, _temp;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reactRedux = require('react-redux');

require('./Search.scss');

var _reactRouter = require('react-router');

var _axios = require('axios');

var _axios2 = _interopRequireDefault(_axios);

var _group = require('../../../reducer/modules/group');

var _menu = require('../../../reducer/modules/menu');

var _interface = require('../../../reducer/modules/interface');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Option = _autoComplete2.default.Option;

var Srch = (_dec = (0, _reactRedux.connect)(function (state) {
  return {
    groupList: state.group.groupList,
    projectList: state.project.projectList
  };
}, {
  setCurrGroup: _group.setCurrGroup,
  changeMenuItem: _menu.changeMenuItem,
  fetchGroupMsg: _group.fetchGroupMsg,
  fetchInterfaceListMenu: _interface.fetchInterfaceListMenu
}), _dec(_class = (0, _reactRouter.withRouter)(_class = (_temp = _class2 = function (_Component) {
  (0, _inherits3.default)(Srch, _Component);

  function Srch(props) {
    var _this2 = this;

    (0, _classCallCheck3.default)(this, Srch);

    var _this = (0, _possibleConstructorReturn3.default)(this, _Component.call(this, props));

    _this.onSelect = function () {
      var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee(value, option) {
        return _regenerator2.default.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                if (!(option.props.type === '分组')) {
                  _context.next = 6;
                  break;
                }

                _this.props.changeMenuItem('/group');
                _this.props.history.push('/group/' + option.props['id']);
                _this.props.setCurrGroup({ group_name: value, _id: option.props['id'] - 0 });
                _context.next = 16;
                break;

              case 6:
                if (!(option.props.type === '项目')) {
                  _context.next = 12;
                  break;
                }

                _context.next = 9;
                return _this.props.fetchGroupMsg(option.props['groupId']);

              case 9:
                _this.props.history.push('/project/' + option.props['id']);
                _context.next = 16;
                break;

              case 12:
                if (!(option.props.type === '接口')) {
                  _context.next = 16;
                  break;
                }

                _context.next = 15;
                return _this.props.fetchInterfaceListMenu(option.props['projectId']);

              case 15:
                _this.props.history.push('/project/' + option.props['projectId'] + '/interface/api/' + option.props['id']);

              case 16:
              case 'end':
                return _context.stop();
            }
          }
        }, _callee, _this2);
      }));

      return function (_x, _x2) {
        return _ref.apply(this, arguments);
      };
    }();

    _this.handleSearch = function (value) {
      _axios2.default.get('/api/project/search?q=' + value).then(function (res) {
        if (res.data && res.data.errcode === 0) {
          (function () {
            var dataSource = [];

            var _loop = function _loop(title) {
              res.data.data[title].map(function (item) {
                switch (title) {
                  case 'group':
                    dataSource.push(_react2.default.createElement(
                      Option,
                      {
                        key: '\u5206\u7EC4' + item._id,
                        type: '\u5206\u7EC4',
                        value: '' + item.groupName,
                        id: '' + item._id
                      },
                      '\u5206\u7EC4: ' + item.groupName
                    ));
                    break;
                  case 'project':
                    dataSource.push(_react2.default.createElement(
                      Option,
                      {
                        key: '\u9879\u76EE' + item._id,
                        type: '\u9879\u76EE',
                        id: '' + item._id,
                        groupId: '' + item.groupId
                      },
                      '\u9879\u76EE: ' + item.name
                    ));
                    break;
                  case 'interface':
                    dataSource.push(_react2.default.createElement(
                      Option,
                      {
                        key: '\u63A5\u53E3' + item._id,
                        type: '\u63A5\u53E3',
                        id: '' + item._id,
                        projectId: '' + item.projectId
                      },
                      '\u63A5\u53E3: ' + item.title
                    ));
                    break;
                  default:
                    break;
                }
              });
            };

            for (var title in res.data.data) {
              _loop(title);
            }
            _this.setState({
              dataSource: dataSource
            });
          })();
        } else {
          console.log('查询项目或分组失败');
        }
      }).catch(function (err) {
        console.log(err);
      });
    };

    _this.state = {
      dataSource: []
    };
    return _this;
  }

  // getDataSource(groupList){
  //   const groupArr =[];
  //   groupList.forEach(item =>{
  //     groupArr.push("group: "+ item["group_name"]);
  //   })
  //   return groupArr;
  // }

  Srch.prototype.render = function render() {
    var dataSource = this.state.dataSource;


    return _react2.default.createElement(
      'div',
      { className: 'search-wrapper' },
      _react2.default.createElement(
        _autoComplete2.default,
        {
          className: 'search-dropdown',
          dataSource: dataSource,
          style: { width: '100%' },
          defaultActiveFirstOption: false,
          onSelect: this.onSelect,
          onSearch: this.handleSearch
          // filterOption={(inputValue, option) =>
          //   option.props.children.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1
          // }
        },
        _react2.default.createElement(_input2.default, {
          prefix: _react2.default.createElement(_icon2.default, { type: 'search', className: 'srch-icon' }),
          placeholder: '\u641C\u7D22\u5206\u7EC4/\u9879\u76EE/\u63A5\u53E3',
          className: 'search-input'
        })
      )
    );
  };

  return Srch;
}(_react.PureComponent), _class2.propTypes = {
  groupList: _propTypes2.default.array,
  projectList: _propTypes2.default.array,
  router: _propTypes2.default.object,
  history: _propTypes2.default.object,
  location: _propTypes2.default.object,
  setCurrGroup: _propTypes2.default.func,
  changeMenuItem: _propTypes2.default.func,
  fetchInterfaceListMenu: _propTypes2.default.func,
  fetchGroupMsg: _propTypes2.default.func
}, _temp)) || _class) || _class);
exports.default = Srch;