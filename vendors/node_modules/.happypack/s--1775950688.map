{"version":3,"sources":["node_modules\\json-schema-editor-visual\\package\\components\\AceEditor\\AceEditor.js"],"names":["ModeMap","javascript","json","text","xml","html","isNotMatch","a","b","JSON","parse","_","isEqual","e","getMode","mode","AceEditor","props","componentDidMount","editor","container","editorElement","data","onChange","readOnly","fullScreen","getSession","setMode","callback","componentWillReceiveProps","nextProps","getValue","setValue","clearSelection","render","className","undefined","style","width","height","React","PureComponent","propTypes","PropTypes","string","func","bool","object","insertCode"],"mappings":"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","file":"AceEditor.js","sourceRoot":"C:/Users/DUOYI/Desktop/api/test/vendors","sourcesContent":["import React from 'react';\nimport mockEditor from './mockEditor';\nimport PropTypes from 'prop-types';\nimport _ from 'underscore';\n\nconst ModeMap = {\n  javascript: 'ace/mode/javascript',\n  json: 'ace/mode/json',\n  text: 'ace/mode/text',\n  xml: 'ace/mode/xml',\n  html: 'ace/mode/html'\n};\n\nfunction isNotMatch(a, b) {\n  try {\n    a = JSON.parse(a);\n    b = JSON.parse(b);\n    return !_.isEqual(a, b);\n  } catch (e) {\n    return true;\n  }\n}\n\nfunction getMode(mode) {\n  return ModeMap[mode] || ModeMap.text;\n}\n\nclass AceEditor extends React.PureComponent {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    this.editor = mockEditor({\n      container: this.editorElement,\n      data: this.props.data,\n      onChange: this.props.onChange,\n      readOnly: this.props.readOnly,\n      fullScreen: this.props.fullScreen\n    });\n\n    let mode = this.props.mode || 'javascript';\n    this.editor.editor.getSession().setMode(getMode(mode));\n    if (typeof this.props.callback === 'function') {\n      this.props.callback(this.editor.editor);\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (!this.editor) return;\n\n    if (\n      isNotMatch(nextProps.data, this.props.data) &&\n      isNotMatch(this.editor.getValue(), nextProps.data)\n    ) {\n      this.editor.setValue(nextProps.data);\n\n      let mode = nextProps.mode || 'javascript';\n      this.editor.editor.getSession().setMode(getMode(mode));\n      this.editor.editor.clearSelection();\n    }\n  }\n\n  render() {\n    return (\n      <div\n        className={this.props.className}\n        style={\n          this.props.className ? undefined : this.props.style || { width: '100%', height: '200px' }\n        }\n        ref={editor => {\n          this.editorElement = editor;\n        }}\n      />\n    );\n  }\n}\n\nAceEditor.propTypes = {\n  data: PropTypes.string,\n  onChange: PropTypes.func,\n  className: PropTypes.string,\n  mode: PropTypes.string, //enum[json, text, javascript], default is javascript\n  readOnly: PropTypes.bool,\n  callback: PropTypes.func,\n  style: PropTypes.object,\n  fullScreen: PropTypes.bool,\n  insertCode: PropTypes.func\n};\n\nexport default AceEditor;\n"]}