{"version":3,"sources":["client\\containers\\Project\\Setting\\ProjectEnv\\index.js"],"names":["Content","Sider","ProjectEnv","projectMsg","state","project","currProject","updateEnv","getProject","getEnv","props","handleClick","key","data","setState","currentEnvMsg","currentKey","addParams","name","newValue","domain","header","concat","delParams","curValue","env","filter","val","index","_id","enterItem","delIcon","onSubmit","value","assignValue","splice","onSave","onOk","handleInputChange","handleDragMove","from","to","initState","curdata","id","componentWillMount","_isMounted","projectId","componentWillUnmount","showConfirm","then","res","payload","errcode","success","catch","error","render","envSettingItems","map","item","color","e","stopPropagation","display","length","background","height","borderRight","padding","margin","minHeight","Component","propTypes","PropTypes","number","func","object"],"mappings":"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","file":"index.js","sourceRoot":"C:/Users/DUOYI/Desktop/api/test/vendors","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './index.scss';\nimport { Icon, Layout, Tooltip, message, Row, Popconfirm } from 'antd';\nconst { Content, Sider } = Layout;\nimport ProjectEnvContent from './ProjectEnvContent.js';\nimport { connect } from 'react-redux';\nimport { updateEnv, getProject, getEnv } from '../../../../reducer/modules/project';\nimport EasyDragSort from '../../../../components/EasyDragSort/EasyDragSort.js';\n\n@connect(\n  state => {\n    return {\n      projectMsg: state.project.currProject\n    };\n  },\n  {\n    updateEnv,\n    getProject,\n    getEnv\n  }\n)\nclass ProjectEnv extends Component {\n  static propTypes = {\n    projectId: PropTypes.number,\n    updateEnv: PropTypes.func,\n    getProject: PropTypes.func,\n    projectMsg: PropTypes.object,\n    onOk: PropTypes.func,\n    getEnv: PropTypes.func\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      env: [],\n      _id: null,\n      currentEnvMsg: {},\n      delIcon: null,\n      currentKey: -2\n    };\n  }\n\n  initState(curdata, id) {\n    let newValue = {};\n    newValue['env'] = [].concat(curdata);\n    newValue['_id'] = id;\n    this.setState({\n      ...this.state,\n      ...newValue\n    });\n  }\n\n  async componentWillMount() {\n    this._isMounted = true;\n    await this.props.getProject(this.props.projectId);\n    const { env, _id } = this.props.projectMsg;\n    this.initState(env, _id);\n    this.handleClick(0, env[0]);\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  handleClick = (key, data) => {\n    this.setState({\n      currentEnvMsg: data,\n      currentKey: key\n    });\n  };\n\n  // 增加环境变量项\n  addParams = (name, data) => {\n    let newValue = {};\n    data = { name: '新环境', domain: '', header: [] };\n    newValue[name] = [].concat(data, this.state[name]);\n    this.setState(newValue);\n    this.handleClick(0, data);\n  };\n\n  // 删除提示信息\n  showConfirm(key, name) {\n    let assignValue = this.delParams(key, name);\n    this.onSave(assignValue);\n  }\n\n  // 删除环境变量项\n  delParams = (key, name) => {\n    let curValue = this.state.env;\n    let newValue = {};\n    newValue[name] = curValue.filter((val, index) => {\n      return index !== key;\n    });\n    this.setState(newValue);\n    this.handleClick(0, newValue[name][0]);\n    newValue['_id'] = this.state._id;\n    return newValue;\n  };\n\n  enterItem = key => {\n    this.setState({ delIcon: key });\n  };\n\n  // 保存设置\n  async onSave(assignValue) {\n    await this.props\n      .updateEnv(assignValue)\n      .then(res => {\n        if (res.payload.data.errcode == 0) {\n          this.props.getProject(this.props.projectId);\n          this.props.getEnv(this.props.projectId);\n          message.success('修改成功! ');\n          if(this._isMounted) {\n            this.setState({ ...assignValue });\n          }\n        }\n      })\n      .catch(() => {\n        message.error('环境设置不成功 ');\n      });\n  }\n\n  //  提交保存信息\n  onSubmit = (value, index) => {\n    let assignValue = {};\n    assignValue['env'] = [].concat(this.state.env);\n    assignValue['env'].splice(index, 1, value['env']);\n    assignValue['_id'] = this.state._id;\n    this.onSave(assignValue);\n    this.props.onOk && this.props.onOk(assignValue['env'], index);\n  };\n\n  // 动态修改环境名称\n  handleInputChange = (value, currentKey) => {\n    let newValue = [].concat(this.state.env);\n    newValue[currentKey].name = value || '新环境';\n    this.setState({ env: newValue });\n  };\n\n  // 侧边栏拖拽\n  handleDragMove = name => {\n    return (data, from, to) => {\n      let newValue = {\n        [name]: data\n      };\n      this.setState(newValue);\n      newValue['_id'] = this.state._id;\n      this.handleClick(to, newValue[name][to]);\n      this.onSave(newValue);\n    };\n  };\n\n  render() {\n    const { env, currentKey } = this.state;\n\n    const envSettingItems = env.map((item, index) => {\n      return (\n        <Row\n          key={index}\n          className={'menu-item ' + (index === currentKey ? 'menu-item-checked' : '')}\n          onClick={() => this.handleClick(index, item)}\n          onMouseEnter={() => this.enterItem(index)}\n        >\n          <span className=\"env-icon-style\">\n            <span className=\"env-name\" style={{ color: item.name === '新环境' && '#2395f1' }}>\n              {item.name}\n            </span>\n            <Popconfirm\n              title=\"您确认删除此环境变量?\"\n              onConfirm={e => {\n                e.stopPropagation();\n                this.showConfirm(index, 'env');\n              }}\n              okText=\"确定\"\n              cancelText=\"取消\"\n            >\n              <Icon\n                type=\"delete\"\n                className=\"interface-delete-icon\"\n                style={{\n                  display: this.state.delIcon == index && env.length - 1 !== 0 ? 'block' : 'none'\n                }}\n              />\n            </Popconfirm>\n          </span>\n        </Row>\n      );\n    });\n\n    return (\n      <div className=\"m-env-panel\">\n        <Layout className=\"project-env\">\n          <Sider width={195} style={{ background: '#fff' }}>\n            <div style={{ height: '100%', borderRight: 0 }}>\n              <Row className=\"first-menu-item menu-item\">\n                <div className=\"env-icon-style\">\n                  <h3>\n                    环境列表&nbsp;<Tooltip placement=\"top\" title=\"在这里添加项目的环境配置\">\n                      <Icon type=\"question-circle-o\" />\n                    </Tooltip>\n                  </h3>\n                  <Tooltip title=\"添加环境变量\">\n                    <Icon type=\"plus\" onClick={() => this.addParams('env')} />\n                  </Tooltip>\n                </div>\n              </Row>\n              <EasyDragSort data={() => env} onChange={this.handleDragMove('env')}>\n                {envSettingItems}\n              </EasyDragSort>\n            </div>\n          </Sider>\n          <Layout className=\"env-content\">\n            <Content style={{ background: '#fff', padding: 24, margin: 0, minHeight: 280 }}>\n              <ProjectEnvContent\n                projectMsg={this.state.currentEnvMsg}\n                onSubmit={e => this.onSubmit(e, currentKey)}\n                handleEnvInput={e => this.handleInputChange(e, currentKey)}\n              />\n            </Content>\n          </Layout>\n        </Layout>\n      </div>\n    );\n  }\n}\n\nexport default ProjectEnv;\n"]}