'use strict';

exports.__esModule = true;

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

exports.checkLoginState = checkLoginState;
exports.loginActions = loginActions;
exports.loginLdapActions = loginLdapActions;
exports.regActions = regActions;
exports.logoutActions = logoutActions;
exports.loginTypeAction = loginTypeAction;
exports.setBreadcrumb = setBreadcrumb;
exports.setImageUrl = setImageUrl;
exports.changeStudyTip = changeStudyTip;
exports.finishStudy = finishStudy;

var _axios = require('axios');

var _axios2 = _interopRequireDefault(_axios);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Actions
var LOGIN = 'yapi/user/LOGIN';
var LOGIN_OUT = 'yapi/user/LOGIN_OUT';
var LOGIN_TYPE = 'yapi/user/LOGIN_TYPE';
var GET_LOGIN_STATE = 'yapi/user/GET_LOGIN_STATE';
var REGISTER = 'yapi/user/REGISTER';
var SET_BREADCRUMB = 'yapi/user/SET_BREADCRUMB';
var CHANGE_STUDY_TIP = 'yapi/user/CHANGE_STUDY_TIP';
var FINISH_STUDY = 'yapi/user/FINISH_STUDY';
var SET_IMAGE_URL = 'yapi/user/SET_IMAGE_URL';

// Reducer
var LOADING_STATUS = 0;
var GUEST_STATUS = 1;
var MEMBER_STATUS = 2;
// Reducer user
var initialState = {
  isLogin: false,
  canRegister: true,
  isLDAP: false,
  userName: null,
  uid: null,
  email: '',
  loginState: LOADING_STATUS,
  loginWrapActiveKey: '1',
  role: '',
  type: '',
  // breadcrumb: [{
  //   name: 'name',
  //   href: 'group'
  // }, {
  //   name: '当前页面'
  // }]
  breadcrumb: [],
  studyTip: 0,
  study: false,
  imageUrl: ''
};

exports.default = function () {
  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
  var action = arguments[1];

  switch (action.type) {
    case GET_LOGIN_STATE:
      {
        return (0, _extends3.default)({}, state, {
          isLogin: action.payload.data.errcode == 0,
          isLDAP: action.payload.data.ladp,
          canRegister: action.payload.data.canRegister,
          role: action.payload.data.data ? action.payload.data.data.role : null,
          loginState: action.payload.data.errcode == 0 ? MEMBER_STATUS : GUEST_STATUS,
          userName: action.payload.data.data ? action.payload.data.data.username : null,
          uid: action.payload.data.data ? action.payload.data.data._id : null,
          type: action.payload.data.data ? action.payload.data.data.type : null,
          study: action.payload.data.data ? action.payload.data.data.study : false
        });
      }
    case LOGIN:
      {
        if (action.payload.data.errcode === 0) {
          return (0, _extends3.default)({}, state, {
            isLogin: true,
            loginState: MEMBER_STATUS,
            uid: action.payload.data.data.uid,
            userName: action.payload.data.data.username,
            role: action.payload.data.data.role,
            type: action.payload.data.data.type,
            study: action.payload.data.data.study
          });
        } else {
          return state;
        }
      }
    case LOGIN_OUT:
      {
        return (0, _extends3.default)({}, state, {
          isLogin: false,
          loginState: GUEST_STATUS,
          userName: null,
          uid: null,
          role: '',
          type: ''
        });
      }
    case LOGIN_TYPE:
      {
        return (0, _extends3.default)({}, state, {
          loginWrapActiveKey: action.index
        });
      }
    case REGISTER:
      {
        return (0, _extends3.default)({}, state, {
          isLogin: true,
          loginState: MEMBER_STATUS,
          uid: action.payload.data.data.uid,
          userName: action.payload.data.data.username,
          type: action.payload.data.data.type,
          study: action.payload.data.data ? action.payload.data.data.study : false
        });
      }
    case SET_BREADCRUMB:
      {
        return (0, _extends3.default)({}, state, {
          breadcrumb: action.data
        });
      }
    case CHANGE_STUDY_TIP:
      {
        return (0, _extends3.default)({}, state, {
          studyTip: state.studyTip + 1
        });
      }
    case FINISH_STUDY:
      {
        return (0, _extends3.default)({}, state, {
          study: true,
          studyTip: 0
        });
      }
    case SET_IMAGE_URL:
      {
        // console.log('state', state);
        return (0, _extends3.default)({}, state, {
          imageUrl: action.data
        });
      }
    default:
      return state;
  }
};

// Action Creators


function checkLoginState() {
  return {
    type: GET_LOGIN_STATE,
    payload: _axios2.default.get('/api/user/status')
  };
}

function loginActions(data) {
  return {
    type: LOGIN,
    payload: _axios2.default.post('/api/user/login', data)
  };
}

function loginLdapActions(data) {
  return {
    type: LOGIN,
    payload: _axios2.default.post('/api/user/login_by_ldap', data)
  };
}

function regActions(data) {
  var email = data.email,
      password = data.password,
      userName = data.userName;

  var param = {
    email: email,
    password: password,
    username: userName
  };
  return {
    type: REGISTER,
    payload: _axios2.default.post('/api/user/reg', param)
  };
}

function logoutActions() {
  return {
    type: LOGIN_OUT,
    payload: _axios2.default.get('/api/user/logout')
  };
}

function loginTypeAction(index) {
  return {
    type: LOGIN_TYPE,
    index: index
  };
}

function setBreadcrumb(data) {
  return {
    type: SET_BREADCRUMB,
    data: data
  };
}

function setImageUrl(data) {
  return {
    type: SET_IMAGE_URL,
    data: data
  };
}

function changeStudyTip() {
  return {
    type: CHANGE_STUDY_TIP
  };
}

function finishStudy() {
  return {
    type: FINISH_STUDY,
    payload: _axios2.default.get('/api/user/up_study')
  };
}