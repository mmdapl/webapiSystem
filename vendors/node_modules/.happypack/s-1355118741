'use strict';

exports.__esModule = true;
exports.default = undefined;

var _keys = require('babel-runtime/core-js/object/keys');

var _keys2 = _interopRequireDefault(_keys);

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _dec, _class, _class2, _temp;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactRedux = require('react-redux');

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reactRouterDom = require('react-router-dom');

var _index = require('../../components/index');

var _group = require('../../reducer/modules/group');

var _user = require('../../reducer/modules/user');

var _project = require('../../reducer/modules/project');

var _Interface = require('./Interface/Interface.js');

var _Interface2 = _interopRequireDefault(_Interface);

var _Activity = require('./Activity/Activity.js');

var _Activity2 = _interopRequireDefault(_Activity);

var _Setting = require('./Setting/Setting.js');

var _Setting2 = _interopRequireDefault(_Setting);

var _Loading = require('../../components/Loading/Loading');

var _Loading2 = _interopRequireDefault(_Loading);

var _ProjectMember = require('./Setting/ProjectMember/ProjectMember.js');

var _ProjectMember2 = _interopRequireDefault(_ProjectMember);

var _ProjectData = require('./Setting/ProjectData/ProjectData.js');

var _ProjectData2 = _interopRequireDefault(_ProjectData);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var plugin = require('../../plugin.js');
var Project = (_dec = (0, _reactRedux.connect)(function (state) {
  return {
    curProject: state.project.currProject,
    currGroup: state.group.currGroup
  };
}, {
  getProject: _project.getProject,
  fetchGroupMsg: _group.fetchGroupMsg,
  setBreadcrumb: _user.setBreadcrumb
}), _dec(_class = (_temp = _class2 = function (_Component) {
  (0, _inherits3.default)(Project, _Component);

  function Project(props) {
    (0, _classCallCheck3.default)(this, Project);
    return (0, _possibleConstructorReturn3.default)(this, _Component.call(this, props));
  }

  Project.prototype.componentWillMount = function () {
    var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee() {
      return _regenerator2.default.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              _context.next = 2;
              return this.props.getProject(this.props.match.params.id);

            case 2:
              _context.next = 4;
              return this.props.fetchGroupMsg(this.props.curProject.group_id);

            case 4:

              this.props.setBreadcrumb([{
                name: this.props.currGroup.group_name,
                href: '/group/' + this.props.currGroup._id
              }, {
                name: this.props.curProject.name
              }]);

            case 5:
            case 'end':
              return _context.stop();
          }
        }
      }, _callee, this);
    }));

    function componentWillMount() {
      return _ref.apply(this, arguments);
    }

    return componentWillMount;
  }();

  Project.prototype.componentWillReceiveProps = function () {
    var _ref2 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee2(nextProps) {
      var currProjectId, nextProjectId;
      return _regenerator2.default.wrap(function _callee2$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              currProjectId = this.props.match.params.id;
              nextProjectId = nextProps.match.params.id;

              if (!(currProjectId !== nextProjectId)) {
                _context2.next = 8;
                break;
              }

              _context2.next = 5;
              return this.props.getProject(nextProjectId);

            case 5:
              _context2.next = 7;
              return this.props.fetchGroupMsg(this.props.curProject.group_id);

            case 7:
              this.props.setBreadcrumb([{
                name: this.props.currGroup.group_name,
                href: '/group/' + this.props.currGroup._id
              }, {
                name: this.props.curProject.name
              }]);

            case 8:
            case 'end':
              return _context2.stop();
          }
        }
      }, _callee2, this);
    }));

    function componentWillReceiveProps(_x) {
      return _ref2.apply(this, arguments);
    }

    return componentWillReceiveProps;
  }();

  Project.prototype.render = function render() {
    var _this2 = this;

    var _props = this.props,
        match = _props.match,
        location = _props.location;

    var routers = {
      interface: { name: '接口', path: '/project/:id/interface/:action', component: _Interface2.default },
      activity: { name: '动态', path: '/project/:id/activity', component: _Activity2.default },
      data: { name: '数据管理', path: '/project/:id/data', component: _ProjectData2.default },
      members: { name: '成员管理', path: '/project/:id/members', component: _ProjectMember2.default },
      setting: { name: '设置', path: '/project/:id/setting', component: _Setting2.default }
    };

    plugin.emitHook('sub_nav', routers);

    var key = void 0,
        defaultName = void 0;
    for (key in routers) {
      if ((0, _reactRouterDom.matchPath)(location.pathname, {
        path: routers[key].path
      }) !== null) {
        defaultName = routers[key].name;
        break;
      }
    }

    // let subnavData = [{
    //   name: routers.interface.name,
    //   path: `/project/${match.params.id}/interface/api`
    // }, {
    //   name: routers.activity.name,
    //   path: `/project/${match.params.id}/activity`
    // }, {
    //   name: routers.data.name,
    //   path: `/project/${match.params.id}/data`
    // }, {
    //   name: routers.members.name,
    //   path: `/project/${match.params.id}/members`
    // }, {
    //   name: routers.setting.name,
    //   path: `/project/${match.params.id}/setting`
    // }];

    var subnavData = [];
    (0, _keys2.default)(routers).forEach(function (key) {
      var item = routers[key];
      var value = {};
      if (key === 'interface') {
        value = {
          name: item.name,
          path: '/project/' + match.params.id + '/interface/api'
        };
      } else {
        value = {
          name: item.name,
          path: item.path.replace(/\:id/gi, match.params.id)
        };
      }
      subnavData.push(value);
    });

    if (this.props.currGroup.type === 'private') {
      subnavData = subnavData.filter(function (item) {
        return item.name != '成员管理';
      });
    }

    if ((0, _keys2.default)(this.props.curProject).length === 0) {
      return _react2.default.createElement(_Loading2.default, { visible: true });
    }

    return _react2.default.createElement(
      'div',
      null,
      _react2.default.createElement(_index.Subnav, { 'default': defaultName, data: subnavData }),
      _react2.default.createElement(
        _reactRouterDom.Switch,
        null,
        _react2.default.createElement(_reactRouterDom.Redirect, { exact: true, from: '/project/:id', to: '/project/' + match.params.id + '/interface/api' }),
        (0, _keys2.default)(routers).map(function (key) {
          var item = routers[key];

          return key === 'members' ? _this2.props.currGroup.type !== 'private' ? _react2.default.createElement(_reactRouterDom.Route, { path: item.path, component: item.component, key: key }) : null : _react2.default.createElement(_reactRouterDom.Route, { path: item.path, component: item.component, key: key });
        })
      )
    );
  };

  return Project;
}(_react.PureComponent), _class2.propTypes = {
  match: _propTypes2.default.object,
  curProject: _propTypes2.default.object,
  getProject: _propTypes2.default.func,
  location: _propTypes2.default.object,
  fetchGroupMsg: _propTypes2.default.func,
  setBreadcrumb: _propTypes2.default.func,
  currGroup: _propTypes2.default.object
}, _temp)) || _class);
exports.default = Project;