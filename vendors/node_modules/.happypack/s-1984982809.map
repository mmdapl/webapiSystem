{"version":3,"sources":["client\\containers\\Project\\Interface\\InterfaceCol\\InterfaceColMenu.js"],"names":["TreeNode","FormItem","Item","confirm","headHeight","ColModalForm","create","visible","props","onCancel","onCreate","form","title","getFieldDecorator","rules","required","message","InterfaceColMenu","interfaceColList","state","interfaceCol","currCase","isRander","currCaseId","curProject","project","currProject","fetchInterfaceColList","fetchInterfaceCaseList","fetchCaseData","fetchCaseList","setColData","fetchProjectList","withRouter","colModalType","colModalVisible","editColId","filterValue","importInterVisible","importInterIds","importColId","expands","list","delIcon","selectedProject","addorEditCol","getFieldsValue","name","colName","desc","colDesc","col_id","project_id","match","params","id","res","axios","post","data","errcode","setState","success","getList","error","errmsg","onExpand","keys","onSelect","length","type","split","history","push","showDelColConfirm","that","content","okText","cancelText","onOk","get","colId","result","nextColId","payload","_id","copyInterface","item","_copyInterfaceSign","add_col_res","new_col_id","add_case_list_res","showNoDelColConfirm","caseCopy","caseId","caseData","JSON","parse","casename","projectId","showDelCaseConfirm","showColModal","col","editCol","setFieldsValue","saveFormRef","selectInterface","showImportInterfaceModal","groupId","group_id","handleImportOk","interface_list","handleImportCancel","filterCol","value","e","target","onDrop","dropColIndex","node","pos","dropColId","dragNode","eventKey","dragColIndex","dragColId","dropPos","dropIndex","Number","dragPos","dragIndex","indexOf","caseList","changes","then","enterItem","leaveItem","componentWillMount","componentWillReceiveProps","nextProps","r","render","currProjectId","defaultExpandedKeys","router","rNull","selects","action","actionId","itemInterfaceColCreate","width","interfaceCase","stopPropagation","display","currentKes","arr","filter","inter","path","marginLeft","maxHeight","parseInt","document","body","clientHeight","map","marginRight","Component","propTypes","PropTypes","object","array","func","number","bool"],"mappings":"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","file":"InterfaceColMenu.js","sourceRoot":"C:/Users/DUOYI/Desktop/api/test/vendors","sourcesContent":["import React, { PureComponent as Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  fetchInterfaceColList,\r\n  fetchInterfaceCaseList,\r\n  setColData,\r\n  fetchCaseList,\r\n  fetchCaseData\r\n} from '../../../../reducer/modules/interfaceCol';\r\nimport { fetchProjectList } from '../../../../reducer/modules/project';\r\nimport axios from 'axios';\r\nimport ImportInterface from './ImportInterface';\r\nimport { Input, Icon, Button, Modal, message, Tooltip, Tree, Form } from 'antd';\r\nimport { arrayChangeIndex } from '../../../../common.js';\r\n\r\nconst TreeNode = Tree.TreeNode;\r\nconst FormItem = Form.Item;\r\nconst confirm = Modal.confirm;\r\nconst headHeight = 240; // menu顶部到网页顶部部分的高度\r\n\r\nimport './InterfaceColMenu.scss';\r\n\r\nconst ColModalForm = Form.create()(props => {\r\n  const { visible, onCancel, onCreate, form, title } = props;\r\n  const { getFieldDecorator } = form;\r\n  return (\r\n    <Modal visible={visible} title={title} onCancel={onCancel} onOk={onCreate}>\r\n      <Form layout=\"vertical\">\r\n        <FormItem label=\"集合名\">\r\n          {getFieldDecorator('colName', {\r\n            rules: [{ required: true, message: '请输入集合命名！' }]\r\n          })(<Input />)}\r\n        </FormItem>\r\n        <FormItem label=\"简介\">{getFieldDecorator('colDesc')(<Input type=\"textarea\" />)}</FormItem>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n});\r\n\r\n@connect(\r\n  state => {\r\n    return {\r\n      interfaceColList: state.interfaceCol.interfaceColList,\r\n      currCase: state.interfaceCol.currCase,\r\n      isRander: state.interfaceCol.isRander,\r\n      currCaseId: state.interfaceCol.currCaseId,\r\n      // list: state.inter.list,\r\n      // 当前项目的信息\r\n      curProject: state.project.currProject\r\n      // projectList: state.project.projectList\r\n    };\r\n  },\r\n  {\r\n    fetchInterfaceColList,\r\n    fetchInterfaceCaseList,\r\n    fetchCaseData,\r\n    // fetchInterfaceListMenu,\r\n    fetchCaseList,\r\n    setColData,\r\n    fetchProjectList\r\n  }\r\n)\r\n@withRouter\r\nexport default class InterfaceColMenu extends Component {\r\n  static propTypes = {\r\n    match: PropTypes.object,\r\n    interfaceColList: PropTypes.array,\r\n    fetchInterfaceColList: PropTypes.func,\r\n    fetchInterfaceCaseList: PropTypes.func,\r\n    // fetchInterfaceListMenu: PropTypes.func,\r\n    fetchCaseList: PropTypes.func,\r\n    fetchCaseData: PropTypes.func,\r\n    setColData: PropTypes.func,\r\n    currCaseId: PropTypes.number,\r\n    history: PropTypes.object,\r\n    isRander: PropTypes.bool,\r\n    // list: PropTypes.array,\r\n    router: PropTypes.object,\r\n    currCase: PropTypes.object,\r\n    curProject: PropTypes.object,\r\n    fetchProjectList: PropTypes.func\r\n    // projectList: PropTypes.array\r\n  };\r\n\r\n  state = {\r\n    colModalType: '',\r\n    colModalVisible: false,\r\n    editColId: 0,\r\n    filterValue: '',\r\n    importInterVisible: false,\r\n    importInterIds: [],\r\n    importColId: 0,\r\n    expands: null,\r\n    list: [],\r\n    delIcon: null,\r\n    selectedProject: null\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.getList();\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (this.props.interfaceColList !== nextProps.interfaceColList) {\r\n      this.setState({\r\n        list: nextProps.interfaceColList\r\n      });\r\n    }\r\n  }\r\n\r\n  async getList() {\r\n    let r = await this.props.fetchInterfaceColList(this.props.match.params.id);\r\n    this.setState({\r\n      list: r.payload.data.data\r\n    });\r\n    return r;\r\n  }\r\n\r\n  addorEditCol = async () => {\r\n    const { colName: name, colDesc: desc } = this.form.getFieldsValue();\r\n    const { colModalType, editColId: col_id } = this.state;\r\n    const project_id = this.props.match.params.id;\r\n    let res = {};\r\n    if (colModalType === 'add') {\r\n      res = await axios.post('/api/col/add_col', { name, desc, project_id });\r\n    } else if (colModalType === 'edit') {\r\n      res = await axios.post('/api/col/up_col', { name, desc, col_id });\r\n    }\r\n    if (!res.data.errcode) {\r\n      this.setState({\r\n        colModalVisible: false\r\n      });\r\n      message.success(colModalType === 'edit' ? '修改集合成功' : '添加集合成功');\r\n      // await this.props.fetchInterfaceColList(project_id);\r\n      this.getList();\r\n    } else {\r\n      message.error(res.data.errmsg);\r\n    }\r\n  };\r\n\r\n  onExpand = keys => {\r\n    this.setState({ expands: keys });\r\n  };\r\n\r\n  onSelect = keys => {\r\n    if (keys.length) {\r\n      const type = keys[0].split('_')[0];\r\n      const id = keys[0].split('_')[1];\r\n      const project_id = this.props.match.params.id;\r\n      if (type === 'col') {\r\n        this.props.setColData({\r\n          isRander: false\r\n        });\r\n        this.props.history.push('/project/' + project_id + '/interface/col/' + id);\r\n      } else {\r\n        this.props.setColData({\r\n          isRander: false\r\n        });\r\n        this.props.history.push('/project/' + project_id + '/interface/case/' + id);\r\n      }\r\n    }\r\n    this.setState({\r\n      expands: null\r\n    });\r\n  };\r\n\r\n  showDelColConfirm = colId => {\r\n    let that = this;\r\n    const params = this.props.match.params;\r\n    confirm({\r\n      title: '您确认删除此测试集合',\r\n      content: '温馨提示：该操作会删除该集合下所有测试用例，用例删除后无法恢复',\r\n      okText: '确认',\r\n      cancelText: '取消',\r\n      async onOk() {\r\n        const res = await axios.get('/api/col/del_col?col_id=' + colId);\r\n        if (!res.data.errcode) {\r\n          message.success('删除集合成功');\r\n          const result = await that.getList();\r\n          const nextColId = result.payload.data.data[0]._id;\r\n\r\n          that.props.history.push('/project/' + params.id + '/interface/col/' + nextColId);\r\n        } else {\r\n          message.error(res.data.errmsg);\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  // 复制测试集合\r\n  copyInterface = async item => {\r\n    if (this._copyInterfaceSign === true) {\r\n      return;\r\n    }\r\n    this._copyInterfaceSign = true;\r\n    const { desc, project_id, _id: col_id } = item;\r\n    let { name } = item;\r\n    name = `${name} copy`;\r\n\r\n    // 添加集合\r\n    const add_col_res = await axios.post('/api/col/add_col', { name, desc, project_id });\r\n\r\n    if (add_col_res.data.errcode) {\r\n      message.error(add_col_res.data.errmsg);\r\n      return;\r\n    }\r\n\r\n    const new_col_id = add_col_res.data.data._id;\r\n\r\n    // 克隆集合\r\n    const add_case_list_res = await axios.post('/api/col/clone_case_list', {\r\n      new_col_id,\r\n      col_id,\r\n      project_id\r\n    });\r\n    this._copyInterfaceSign = false;\r\n\r\n    if (add_case_list_res.data.errcode) {\r\n      message.error(add_case_list_res.data.errmsg);\r\n      return;\r\n    }\r\n\r\n    // 刷新接口列表\r\n    // await this.props.fetchInterfaceColList(project_id);\r\n    this.getList();\r\n    this.props.setColData({ isRander: true });\r\n    message.success('克隆测试集成功');\r\n  };\r\n\r\n  showNoDelColConfirm = () => {\r\n    confirm({\r\n      title: '此测试集合为最后一个集合',\r\n      content: '温馨提示：建议不要删除'\r\n    });\r\n  };\r\n  caseCopy = async caseId=> {\r\n    let that = this;\r\n    let caseData = await that.props.fetchCaseData(caseId);\r\n    let data = caseData.payload.data.data;\r\n    data = JSON.parse(JSON.stringify(data));\r\n    data.casename=`${data.casename}_copy`\r\n    delete data._id \r\n    const res = await axios.post('/api/col/add_case',data);\r\n      if (!res.data.errcode) {\r\n        message.success('克隆用例成功');\r\n        let colId = res.data.data.col_id;\r\n        let projectId=res.data.data.project_id;\r\n        await this.getList();\r\n        this.props.history.push('/project/' + projectId + '/interface/col/' + colId);\r\n        this.setState({\r\n          visible: false\r\n        });\r\n      } else {\r\n        message.error(res.data.errmsg);\r\n      }\r\n  };\r\n  showDelCaseConfirm = caseId => {\r\n    let that = this;\r\n    const params = this.props.match.params;\r\n    confirm({\r\n      title: '您确认删除此测试用例',\r\n      content: '温馨提示：用例删除后无法恢复',\r\n      okText: '确认',\r\n      cancelText: '取消',\r\n      async onOk() {\r\n        const res = await axios.get('/api/col/del_case?caseid=' + caseId);\r\n        if (!res.data.errcode) {\r\n          message.success('删除用例成功');\r\n          that.getList();\r\n          // 如果删除当前选中 case，切换路由到集合\r\n          if (+caseId === +that.props.currCaseId) {\r\n            that.props.history.push('/project/' + params.id + '/interface/col/');\r\n          } else {\r\n            // that.props.fetchInterfaceColList(that.props.match.params.id);\r\n            that.props.setColData({ isRander: true });\r\n          }\r\n        } else {\r\n          message.error(res.data.errmsg);\r\n        }\r\n      }\r\n    });\r\n  };\r\n  showColModal = (type, col) => {\r\n    const editCol =\r\n      type === 'edit' ? { colName: col.name, colDesc: col.desc } : { colName: '', colDesc: '' };\r\n    this.setState({\r\n      colModalVisible: true,\r\n      colModalType: type || 'add',\r\n      editColId: col && col._id\r\n    });\r\n    this.form.setFieldsValue(editCol);\r\n  };\r\n  saveFormRef = form => {\r\n    this.form = form;\r\n  };\r\n\r\n  selectInterface = (importInterIds, selectedProject) => {\r\n    this.setState({ importInterIds, selectedProject });\r\n  };\r\n\r\n  showImportInterfaceModal = async colId => {\r\n    // const projectId = this.props.match.params.id;\r\n    // console.log('project', this.props.curProject)\r\n    const groupId = this.props.curProject.group_id;\r\n    await this.props.fetchProjectList(groupId);\r\n    // await this.props.fetchInterfaceListMenu(projectId)\r\n    this.setState({ importInterVisible: true, importColId: colId });\r\n  };\r\n\r\n  handleImportOk = async () => {\r\n    const project_id = this.state.selectedProject || this.props.match.params.id;\r\n    const { importColId, importInterIds } = this.state;\r\n    const res = await axios.post('/api/col/add_case_list', {\r\n      interface_list: importInterIds,\r\n      col_id: importColId,\r\n      project_id\r\n    });\r\n    if (!res.data.errcode) {\r\n      this.setState({ importInterVisible: false });\r\n      message.success('导入集合成功');\r\n      // await this.props.fetchInterfaceColList(project_id);\r\n      this.getList();\r\n\r\n      this.props.setColData({ isRander: true });\r\n    } else {\r\n      message.error(res.data.errmsg);\r\n    }\r\n  };\r\n  handleImportCancel = () => {\r\n    this.setState({ importInterVisible: false });\r\n  };\r\n\r\n  filterCol = e => {\r\n    const value = e.target.value;\r\n    // console.log('list', this.props.interfaceColList);\r\n    // const newList = produce(this.props.interfaceColList, draftList => {})\r\n    // console.log('newList',newList);\r\n    this.setState({\r\n      filterValue: value,\r\n      list: JSON.parse(JSON.stringify(this.props.interfaceColList))\r\n      // list: newList\r\n    });\r\n  };\r\n\r\n  onDrop = async e => {\r\n    // const projectId = this.props.match.params.id;\r\n    const { interfaceColList } = this.props;\r\n    const dropColIndex = e.node.props.pos.split('-')[1];\r\n    const dropColId = interfaceColList[dropColIndex]._id;\r\n    const id = e.dragNode.props.eventKey;\r\n    const dragColIndex = e.dragNode.props.pos.split('-')[1];\r\n    const dragColId = interfaceColList[dragColIndex]._id;\r\n\r\n    const dropPos = e.node.props.pos.split('-');\r\n    const dropIndex = Number(dropPos[dropPos.length - 1]);\r\n    const dragPos = e.dragNode.props.pos.split('-');\r\n    const dragIndex = Number(dragPos[dragPos.length - 1]);\r\n\r\n    if (id.indexOf('col') === -1) {\r\n      if (dropColId === dragColId) {\r\n        // 同一个测试集合下的接口交换顺序\r\n        let caseList = interfaceColList[dropColIndex].caseList;\r\n        let changes = arrayChangeIndex(caseList, dragIndex, dropIndex);\r\n        axios.post('/api/col/up_case_index', changes).then();\r\n      }\r\n      await axios.post('/api/col/up_case', { id: id.split('_')[1], col_id: dropColId });\r\n      // this.props.fetchInterfaceColList(projectId);\r\n      this.getList();\r\n      this.props.setColData({ isRander: true });\r\n    } else {\r\n      let changes = arrayChangeIndex(interfaceColList, dragIndex, dropIndex);\r\n      axios.post('/api/col/up_col_index', changes).then();\r\n      this.getList();\r\n    }\r\n  };\r\n\r\n  enterItem = id => {\r\n    this.setState({ delIcon: id });\r\n  };\r\n\r\n  leaveItem = () => {\r\n    this.setState({ delIcon: null });\r\n  };\r\n\r\n  render() {\r\n    // const { currColId, currCaseId, isShowCol } = this.props;\r\n    const { colModalType, colModalVisible, importInterVisible } = this.state;\r\n    const currProjectId = this.props.match.params.id;\r\n    // const menu = (col) => {\r\n    //   return (\r\n    //     <Menu>\r\n    //       <Menu.Item>\r\n    //         <span onClick={() => this.showColModal('edit', col)}>修改集合</span>\r\n    //       </Menu.Item>\r\n    //       <Menu.Item>\r\n    //         <span onClick={() => {\r\n    //           this.showDelColConfirm(col._id)\r\n    //         }}>删除集合</span>\r\n    //       </Menu.Item>\r\n    //       <Menu.Item>\r\n    //         <span onClick={() => this.showImportInterface(col._id)}>导入接口</span>\r\n    //       </Menu.Item>\r\n    //     </Menu>\r\n    //   )\r\n    // };\r\n\r\n    const defaultExpandedKeys = () => {\r\n      const { router, currCase, interfaceColList } = this.props,\r\n        rNull = { expands: [], selects: [] };\r\n      if (interfaceColList.length === 0) {\r\n        return rNull;\r\n      }\r\n      if (router) {\r\n        if (router.params.action === 'case') {\r\n          if (!currCase || !currCase._id) {\r\n            return rNull;\r\n          }\r\n          return {\r\n            expands: this.state.expands ? this.state.expands : ['col_' + currCase.col_id],\r\n            selects: ['case_' + currCase._id + '']\r\n          };\r\n        } else {\r\n          let col_id = router.params.actionId;\r\n          return {\r\n            expands: this.state.expands ? this.state.expands : ['col_' + col_id],\r\n            selects: ['col_' + col_id]\r\n          };\r\n        }\r\n      } else {\r\n        return {\r\n          expands: this.state.expands ? this.state.expands : ['col_' + interfaceColList[0]._id],\r\n          selects: ['root']\r\n        };\r\n      }\r\n    };\r\n\r\n    const itemInterfaceColCreate = interfaceCase => {\r\n      return (\r\n        <TreeNode\r\n          style={{ width: '100%' }}\r\n          key={'case_' + interfaceCase._id}\r\n          title={\r\n            <div\r\n              className=\"menu-title\"\r\n              onMouseEnter={() => this.enterItem(interfaceCase._id)}\r\n              onMouseLeave={this.leaveItem}\r\n              title={interfaceCase.casename}\r\n            >\r\n              <span className=\"casename\">{interfaceCase.casename}</span>\r\n              <div className=\"btns\">\r\n                <Tooltip title=\"删除用例\">\r\n                  <Icon\r\n                    type=\"delete\"\r\n                    className=\"interface-delete-icon\"\r\n                    onClick={e => {\r\n                      e.stopPropagation();\r\n                      this.showDelCaseConfirm(interfaceCase._id);\r\n                    }}\r\n                    style={{ display: this.state.delIcon == interfaceCase._id ? 'block' : 'none' }}\r\n                  />\r\n                </Tooltip>\r\n                <Tooltip title=\"克隆用例\">\r\n                  <Icon\r\n                    type=\"copy\"\r\n                    className=\"interface-delete-icon\"\r\n                    onClick={e => {\r\n                      e.stopPropagation();\r\n                      this.caseCopy(interfaceCase._id);\r\n                    }}\r\n                    style={{ display: this.state.delIcon == interfaceCase._id ? 'block' : 'none' }}\r\n                  />\r\n                </Tooltip>\r\n              </div>\r\n            </div>\r\n          }\r\n        />\r\n      );\r\n    };\r\n\r\n    let currentKes = defaultExpandedKeys();\r\n    // console.log('currentKey', currentKes)\r\n\r\n    let list = this.state.list;\r\n\r\n    if (this.state.filterValue) {\r\n      let arr = [];\r\n      list = list.filter(item => {\r\n\r\n        item.caseList = item.caseList.filter(inter => {\r\n          if (inter.casename.indexOf(this.state.filterValue) === -1 \r\n          && inter.path.indexOf(this.state.filterValue) === -1\r\n          ) {\r\n            return false;\r\n          }\r\n          return true;\r\n        });\r\n\r\n        arr.push('col_' + item._id);\r\n        return true;\r\n      });\r\n      // console.log('arr', arr);\r\n      if (arr.length > 0) {\r\n        currentKes.expands = arr;\r\n      }\r\n    }\r\n\r\n    // console.log('list', list);\r\n    // console.log('currentKey', currentKes)\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"interface-filter\">\r\n          <Input placeholder=\"搜索测试集合\" onChange={this.filterCol} />\r\n          <Tooltip placement=\"bottom\" title=\"添加集合\">\r\n            <Button\r\n              type=\"primary\"\r\n              style={{ marginLeft: '16px' }}\r\n              onClick={() => this.showColModal('add')}\r\n              className=\"btn-filter\"\r\n            >\r\n              添加集合\r\n            </Button>\r\n          </Tooltip>\r\n        </div>\r\n        <div className=\"tree-wrapper\" style={{ maxHeight: parseInt(document.body.clientHeight) - headHeight + 'px'}}>\r\n          <Tree\r\n            className=\"col-list-tree\"\r\n            defaultExpandedKeys={currentKes.expands}\r\n            defaultSelectedKeys={currentKes.selects}\r\n            expandedKeys={currentKes.expands}\r\n            selectedKeys={currentKes.selects}\r\n            onSelect={this.onSelect}\r\n            autoExpandParent\r\n            draggable\r\n            onExpand={this.onExpand}\r\n            onDrop={this.onDrop}\r\n          >\r\n            {list.map(col => (\r\n              <TreeNode\r\n                key={'col_' + col._id}\r\n                title={\r\n                  <div className=\"menu-title\">\r\n                    <span>\r\n                      <Icon type=\"folder-open\" style={{ marginRight: 5 }} />\r\n                      <span>{col.name}</span>\r\n                    </span>\r\n                    <div className=\"btns\">\r\n                      <Tooltip title=\"删除集合\">\r\n                        <Icon\r\n                          type=\"delete\"\r\n                          style={{ display: list.length > 1 ? '' : 'none' }}\r\n                          className=\"interface-delete-icon\"\r\n                          onClick={() => {\r\n                            this.showDelColConfirm(col._id);\r\n                          }}\r\n                        />\r\n                      </Tooltip>\r\n                      <Tooltip title=\"编辑集合\">\r\n                        <Icon\r\n                          type=\"edit\"\r\n                          className=\"interface-delete-icon\"\r\n                          onClick={e => {\r\n                            e.stopPropagation();\r\n                            this.showColModal('edit', col);\r\n                          }}\r\n                        />\r\n                      </Tooltip>\r\n                      <Tooltip title=\"导入接口\">\r\n                        <Icon\r\n                          type=\"plus\"\r\n                          className=\"interface-delete-icon\"\r\n                          onClick={e => {\r\n                            e.stopPropagation();\r\n                            this.showImportInterfaceModal(col._id);\r\n                          }}\r\n                        />\r\n                      </Tooltip>\r\n                      <Tooltip title=\"克隆集合\">\r\n                        <Icon\r\n                          type=\"copy\"\r\n                          className=\"interface-delete-icon\"\r\n                          onClick={e => {\r\n                            e.stopPropagation();\r\n                            this.copyInterface(col);\r\n                          }}\r\n                        />\r\n                      </Tooltip>\r\n                    </div>\r\n                    {/*<Dropdown overlay={menu(col)} trigger={['click']} onClick={e => e.stopPropagation()}>\r\n                      <Icon className=\"opts-icon\" type='ellipsis'/>\r\n                    </Dropdown>*/}\r\n                  </div>\r\n                }\r\n              >\r\n                {col.caseList.map(itemInterfaceColCreate)}\r\n              </TreeNode>\r\n            ))}\r\n          </Tree>\r\n        </div>\r\n        <ColModalForm\r\n          ref={this.saveFormRef}\r\n          type={colModalType}\r\n          visible={colModalVisible}\r\n          onCancel={() => {\r\n            this.setState({ colModalVisible: false });\r\n          }}\r\n          onCreate={this.addorEditCol}\r\n        />\r\n\r\n        <Modal\r\n          title=\"导入接口到集合\"\r\n          visible={importInterVisible}\r\n          onOk={this.handleImportOk}\r\n          onCancel={this.handleImportCancel}\r\n          className=\"import-case-modal\"\r\n          width={800}\r\n        >\r\n          <ImportInterface currProjectId={currProjectId} selectInterface={this.selectInterface} />\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]}