{"version":3,"sources":["node_modules\\json-schema-editor-visual\\package\\components\\SchemaComponents\\SchemaOther.js"],"names":["TextArea","Option","changeOtherValue","value","name","data","change","SchemaString","props","context","changeCustomValue","changeEnumOtherValue","arr","split","length","enum","changeEnumDescOtherValue","enumDesc","onChangeCheckBox","checked","setState","state","_","isUndefined","format","Model","__jsonSchemaFormat","componentWillReceiveProps","nextprops","render","default","e","target","minLength","maxLength","width","pattern","join","minRows","maxRows","input","option","toLowerCase","indexOf","map","item","title","PureComponent","contextTypes","PropTypes","func","object","SchemaNumber","enumLen","onEnterEnumOtherValue","enumStr","nextEnumStr","exclusiveMinimum","exclusiveMaximum","minimum","maximum","SchemaBoolean","SchemaArray","uniqueItems","minItems","maxItems","mapping","string","number","boolean","integer","array","type","handleInputEditor","text","jsonData","CustomItem","optionForm","JSON","parse"],"mappings":"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","file":"SchemaOther.js","sourceRoot":"C:/Users/DUOYI/Desktop/api/test/vendors","sourcesContent":["import React, { PureComponent } from 'react';\nimport {\n  Dropdown,\n  Menu,\n  Input,\n  InputNumber,\n  Row,\n  Col,\n  Form,\n  Select,\n  Checkbox,\n  Button,\n  Icon,\n  Modal,\n  message,\n  Tooltip,\n  Switch\n} from 'antd';\nconst { TextArea } = Input;\nimport './schemaJson.css';\nimport _ from 'underscore';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { JSONPATH_JOIN_CHAR, SCHEMA_TYPE } from '../../utils.js';\nconst Option = Select.Option;\nimport AceEditor from '../AceEditor/AceEditor.js';\nimport LocalProvider from '../LocalProvider/index.js';\n\nconst changeOtherValue = (value, name, data, change) => {\n  data[name] = value;\n  change(data);\n};\n\nclass SchemaString extends PureComponent {\n  constructor(props, context) {\n    super(props);\n    this.state = {\n      checked: _.isUndefined(props.data.enum) ? false : true\n    };\n    this.format = context.Model.__jsonSchemaFormat;\n  }\n\n  componentWillReceiveProps(nextprops) {\n    if (this.props.data.enum !== nextprops.data.enum) {\n      this.setState({\n        checked: _.isUndefined(nextprops.data.enum) ? false : true\n      });\n    }\n  }\n\n  changeOtherValue = (value, name, data) => {\n    data[name] = value;\n    this.context.changeCustomValue(data);\n  };\n\n  changeEnumOtherValue = (value, data) => {\n    var arr = value.split('\\n');\n    if (arr.length === 0 || (arr.length == 1 && !arr[0])) {\n      delete data.enum;\n      this.context.changeCustomValue(data);\n    } else {\n      data.enum = arr;\n      this.context.changeCustomValue(data);\n    }\n  };\n\n  changeEnumDescOtherValue = (value, data) => {\n    data.enumDesc = value;\n    this.context.changeCustomValue(data);\n  };\n\n  onChangeCheckBox = (checked, data) => {\n    this.setState({\n      checked\n    });\n    if (!checked) {\n      delete data.enum;\n      this.context.changeCustomValue(data);\n    }\n  };\n\n  render() {\n    const { data } = this.props;\n    return (\n      <div>\n        <div className=\"default-setting\">{LocalProvider('base_setting')}</div>\n        <Row className=\"other-row\" type=\"flex\" align=\"middle\">\n          <Col span={4} className=\"other-label\">\n            {LocalProvider('default')}：\n          </Col>\n          <Col span={20}>\n            <Input\n              value={data.default}\n              placeholder={LocalProvider('default')}\n              onChange={e => this.changeOtherValue(e.target.value, 'default', data)}\n            />\n          </Col>\n        </Row>\n        <Row className=\"other-row\" type=\"flex\" align=\"middle\">\n          <Col span={12}>\n            <Row type=\"flex\" align=\"middle\">\n              <Col span={8} className=\"other-label\">\n                {LocalProvider('minLength')}：\n              </Col>\n              <Col span={16}>\n                <InputNumber\n                  value={data.minLength}\n                  placeholder=\"min.length\"\n                  onChange={e => this.changeOtherValue(e, 'minLength', data)}\n                />\n              </Col>\n            </Row>\n          </Col>\n          <Col span={12}>\n            <Row type=\"flex\" align=\"middle\">\n              <Col span={8} className=\"other-label\">\n                {LocalProvider('maxLength')}：\n              </Col>\n              <Col span={16}>\n                <InputNumber\n                  value={data.maxLength}\n                  placeholder=\"max.length\"\n                  onChange={e => this.changeOtherValue(e, 'maxLength', data)}\n                />\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n        <Row className=\"other-row\" type=\"flex\" align=\"middle\">\n          <Col span={4} className=\"other-label\">\n            <span>\n              Pattern&nbsp;\n              <Tooltip title={LocalProvider('pattern')}>\n                <Icon type=\"question-circle-o\" style={{ width: '10px' }} />\n              </Tooltip>\n              &nbsp; :\n            </span>\n          </Col>\n          <Col span={20}>\n            <Input\n              value={data.pattern}\n              placeholder=\"Pattern\"\n              onChange={e => this.changeOtherValue(e.target.value, 'pattern', data)}\n            />\n          </Col>\n        </Row>\n        <Row className=\"other-row\" type=\"flex\" align=\"middle\">\n          <Col span={4} className=\"other-label\">\n            <span>\n              {LocalProvider('enum')}\n              <Checkbox\n                checked={this.state.checked}\n                onChange={e => this.onChangeCheckBox(e.target.checked, data)}\n              />{' '}\n              :\n            </span>\n          </Col>\n          <Col span={20}>\n            <TextArea\n              value={data.enum && data.enum.length && data.enum.join('\\n')}\n              disabled={!this.state.checked}\n              placeholder={LocalProvider('enum_msg')}\n              autosize={{ minRows: 2, maxRows: 6 }}\n              onChange={e => {\n                this.changeEnumOtherValue(e.target.value, data);\n              }}\n            />\n          </Col>\n        </Row>\n        {this.state.checked && (\n          <Row className=\"other-row\" type=\"flex\" align=\"middle\">\n            <Col span={4} className=\"other-label\">\n              <span>{LocalProvider('enum_desc')}</span>\n            </Col>\n            <Col span={20}>\n              <TextArea\n                value={data.enumDesc}\n                disabled={!this.state.checked}\n                placeholder={LocalProvider('enum_desc_msg')}\n                autosize={{ minRows: 2, maxRows: 6 }}\n                onChange={e => {\n                  this.changeEnumDescOtherValue(e.target.value, data);\n                }}\n              />\n            </Col>\n          </Row>\n        )}\n        <Row className=\"other-row\" type=\"flex\" align=\"middle\">\n          <Col span={4} className=\"other-label\">\n            <span>format :</span>\n          </Col>\n          <Col span={20}>\n            <Select\n              showSearch\n              style={{ width: 150 }}\n              value={data.format}\n              dropdownClassName=\"json-schema-react-editor-adv-modal-select\"\n              placeholder=\"Select a format\"\n              optionFilterProp=\"children\"\n              optionLabelProp=\"value\"\n              onChange={e => this.changeOtherValue(e, 'format', data)}\n              filterOption={(input, option) => {\n                return option.props.value.toLowerCase().indexOf(input.toLowerCase()) >= 0;\n              }}\n            >\n              {this.format.map(item => {\n                return (\n                  <Option value={item.name} key={item.name}>\n                    {item.name} <span className=\"format-items-title\">{item.title}</span>\n                  </Option>\n                );\n              })}\n            </Select>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\nSchemaString.contextTypes = {\n  changeCustomValue: PropTypes.func,\n  Model: PropTypes.object\n};\n\nclass SchemaNumber extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      checked: _.isUndefined(props.data.enum) ? false : true,\n      enum: _.isUndefined(props.data.enum) ? '' : props.data.enum.join('\\n')\n    };\n  }\n\n  componentWillReceiveProps(nextprops) {\n    const enumStr = _.isUndefined(this.props.data.enum) ? '' : this.props.data.enum.join('\\n');\n    const nextEnumStr = _.isUndefined(nextprops.data.enum) ? '' : nextprops.data.enum.join('\\n');\n    if (enumStr !== nextEnumStr) {\n      this.setState({ enum: nextEnumStr });\n    }\n  }\n\n  onChangeCheckBox = (checked, data) => {\n    this.setState({\n      checked\n    });\n\n    if (!checked) {\n      delete data.enum;\n      this.setState({ enum: '' });\n      this.context.changeCustomValue(data);\n    }\n  };\n\n  changeEnumOtherValue = (value, data) => {\n    this.setState({ enum: value });\n    let arr = value.split('\\n');\n    const enumLen = this.state.enum.split('\\n').length;\n    // 判断是否是删除操作\n    if (enumLen > arr.length) {\n      data.enum = arr.map(item => +item);\n      this.context.changeCustomValue(data);\n    }\n    if (arr.length === 0 || (arr.length == 1 && !arr[0])) {\n      delete data.enum;\n      this.context.changeCustomValue(data);\n    }\n  };\n\n  onEnterEnumOtherValue = (value, data) => {\n    let arr = value.split('\\n').map(item => +item);\n    data.enum = arr;\n    this.context.changeCustomValue(data);\n  };\n\n  changeEnumDescOtherValue = (value, data) => {\n    data.enumDesc = value;\n    this.context.changeCustomValue(data);\n  };\n\n  render() {\n    const { data } = this.props;\n    return (\n      <div>\n        <div className=\"default-setting\">{LocalProvider('base_setting')}</div>\n        <Row className=\"other-row\" type=\"flex\" align=\"middle\">\n          <Col span={4} className=\"other-label\">\n            {LocalProvider('default')}：\n          </Col>\n          <Col span={20}>\n            <Input\n              value={data.default}\n              placeholder={LocalProvider('default')}\n              onChange={e =>\n                changeOtherValue(e.target.value, 'default', data, this.context.changeCustomValue)\n              }\n            />\n          </Col>\n        </Row>\n        <Row className=\"other-row\" type=\"flex\" align=\"middle\">\n          <Col span={12}>\n            <Row type=\"flex\" align=\"middle\">\n              <Col span={13} className=\"other-label\">\n                <span>\n                  exclusiveMinimum&nbsp;\n                  <Tooltip title={LocalProvider('exclusiveMinimum')}>\n                    <Icon type=\"question-circle-o\" style={{ width: '10px' }} />\n                  </Tooltip>\n                  &nbsp; :\n                </span>\n              </Col>\n              <Col span={11}>\n                <Switch\n                  checked={data.exclusiveMinimum}\n                  placeholder=\"exclusiveMinimum\"\n                  onChange={e =>\n                    changeOtherValue(e, 'exclusiveMinimum', data, this.context.changeCustomValue)\n                  }\n                />\n              </Col>\n            </Row>\n          </Col>\n          <Col span={12}>\n            <Row type=\"flex\" align=\"middle\">\n              <Col span={13} className=\"other-label\">\n                <span>\n                  exclusiveMaximum&nbsp;\n                  <Tooltip title={LocalProvider('exclusiveMaximum')}>\n                    <Icon type=\"question-circle-o\" style={{ width: '10px' }} />\n                  </Tooltip>\n                  &nbsp; :\n                </span>\n              </Col>\n              <Col span={11}>\n                <Switch\n                  checked={data.exclusiveMaximum}\n                  placeholder=\"exclusiveMaximum\"\n                  onChange={e =>\n                    changeOtherValue(e, 'exclusiveMaximum', data, this.context.changeCustomValue)\n                  }\n                />\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n        <Row className=\"other-row\" type=\"flex\" align=\"middle\">\n          <Col span={12}>\n            <Row type=\"flex\" align=\"middle\">\n              <Col span={8} className=\"other-label\">\n                {LocalProvider('minimum')}：\n              </Col>\n              <Col span={16}>\n                <InputNumber\n                  value={data.minimum}\n                  placeholder={LocalProvider('minimum')}\n                  onChange={e =>\n                    changeOtherValue(e, 'minimum', data, this.context.changeCustomValue)\n                  }\n                />\n              </Col>\n            </Row>\n          </Col>\n          <Col span={12}>\n            <Row type=\"flex\" align=\"middle\">\n              <Col span={8} className=\"other-label\">\n                {LocalProvider('maximum')}：\n              </Col>\n              <Col span={16}>\n                <InputNumber\n                  value={data.maximum}\n                  placeholder={LocalProvider('maximum')}\n                  onChange={e =>\n                    changeOtherValue(e, 'maximum', data, this.context.changeCustomValue)\n                  }\n                />\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n        <Row className=\"other-row\" type=\"flex\" align=\"middle\">\n          <Col span={4} className=\"other-label\">\n            <span>\n              {LocalProvider('enum')}\n              <Checkbox\n                checked={this.state.checked}\n                onChange={e => this.onChangeCheckBox(e.target.checked, data)}\n              />{' '}\n              :\n            </span>\n          </Col>\n          <Col span={20}>\n            <TextArea\n              // value={data.enum && data.enum.length && data.enum.join('\\n')}\n              value={this.state.enum}\n              disabled={!this.state.checked}\n              placeholder={LocalProvider('enum_msg')}\n              autosize={{ minRows: 2, maxRows: 6 }}\n              onChange={e => {\n                this.changeEnumOtherValue(e.target.value, data);\n              }}\n              onPressEnter={e => this.onEnterEnumOtherValue(e.target.value, data)}\n            />\n          </Col>\n        </Row>\n        {this.state.checked && (\n          <Row className=\"other-row\" type=\"flex\" align=\"middle\">\n            <Col span={4} className=\"other-label\">\n              <span>{LocalProvider('enum_desc')} ：</span>\n            </Col>\n            <Col span={20}>\n              <TextArea\n                value={data.enumDesc}\n                disabled={!this.state.checked}\n                placeholder={LocalProvider('enum_desc_msg')}\n                autosize={{ minRows: 2, maxRows: 6 }}\n                onChange={e => {\n                  this.changeEnumDescOtherValue(e.target.value, data);\n                }}\n              />\n            </Col>\n          </Row>\n        )}\n      </div>\n    );\n  }\n}\n\nSchemaNumber.contextTypes = {\n  changeCustomValue: PropTypes.func\n};\n\nconst SchemaBoolean = (props, context) => {\n  const { data } = props;\n  let value = _.isUndefined(data.default) ? '' : data.default ? 'true' : 'false';\n  return (\n    <div>\n      <div className=\"default-setting\">{LocalProvider('base_setting')}</div>\n      <Row className=\"other-row\" type=\"flex\" align=\"middle\">\n        <Col span={4} className=\"other-label\">\n          {LocalProvider('default')}：\n        </Col>\n        <Col span={20}>\n          <Select\n            value={value}\n            onChange={e =>\n              changeOtherValue(\n                e === 'true' ? true : false,\n                'default',\n                data,\n                context.changeCustomValue\n              )\n            }\n            style={{ width: 200 }}\n          >\n            <Option value=\"true\">true</Option>\n            <Option value=\"false\">false</Option>\n          </Select>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nSchemaBoolean.contextTypes = {\n  changeCustomValue: PropTypes.func\n};\n\nconst SchemaArray = (props, context) => {\n  const { data } = props;\n  return (\n    <div>\n      <div className=\"default-setting\">{LocalProvider('base_setting')}</div>\n      <Row className=\"other-row\" type=\"flex\" align=\"middle\">\n        <Col span={6} className=\"other-label\">\n          <span>\n            uniqueItems&nbsp;\n            <Tooltip title={LocalProvider('unique_items')}>\n              <Icon type=\"question-circle-o\" style={{ width: '10px' }} />\n            </Tooltip>\n            &nbsp; :\n          </span>\n        </Col>\n        <Col span={18}>\n          <Switch\n            checked={data.uniqueItems}\n            placeholder=\"uniqueItems\"\n            onChange={e => changeOtherValue(e, 'uniqueItems', data, context.changeCustomValue)}\n          />\n        </Col>\n      </Row>\n      <Row className=\"other-row\" type=\"flex\" align=\"middle\">\n        <Col span={12}>\n          <Row type=\"flex\" align=\"middle\">\n            <Col span={12} className=\"other-label\">\n              {LocalProvider('min_items')}：\n            </Col>\n            <Col span={12}>\n              <InputNumber\n                value={data.minItems}\n                placeholder=\"minItems\"\n                onChange={e => changeOtherValue(e, 'minItems', data, context.changeCustomValue)}\n              />\n            </Col>\n          </Row>\n        </Col>\n        <Col span={12}>\n          <Row type=\"flex\" align=\"middle\">\n            <Col span={12} className=\"other-label\">\n              {LocalProvider('max_items')}：\n            </Col>\n            <Col span={12}>\n              <InputNumber\n                value={data.maxItems}\n                placeholder=\"maxItems\"\n                onChange={e => changeOtherValue(e, 'maxItems', data, context.changeCustomValue)}\n              />\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nSchemaArray.contextTypes = {\n  changeCustomValue: PropTypes.func\n};\n\nconst mapping = data => {\n  return {\n    string: <SchemaString data={data} />,\n    number: <SchemaNumber data={data} />,\n    boolean: <SchemaBoolean data={data} />,\n    integer: <SchemaNumber data={data} />,\n    array: <SchemaArray data={data} />\n  }[data.type];\n};\n\nconst handleInputEditor = (e, change) => {\n  if (!e.text) return;\n  change(e.jsonData);\n};\n\nconst CustomItem = (props, context) => {\n  const { data } = props;\n  const optionForm = mapping(JSON.parse(data));\n\n  return (\n    <div>\n      <div>{optionForm}</div>\n      <div className=\"default-setting\">{LocalProvider('all_setting')}</div>\n      <AceEditor\n        data={data}\n        mode=\"json\"\n        onChange={e => handleInputEditor(e, context.changeCustomValue)}\n      />\n    </div>\n  );\n};\n\nCustomItem.contextTypes = {\n  changeCustomValue: PropTypes.func\n};\n\nexport default CustomItem;\n"]}