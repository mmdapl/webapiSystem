{"version":3,"sources":["client\\containers\\Project\\Interface\\InterfaceList\\InterfaceContent.js"],"names":["plugin","require","TabPane","Content","curdata","state","inter","list","editStatus","fetchInterfaceData","props","switchToView","setState","curtab","onChange","showModal","key","nextTab","handleOk","visible","handleCancel","title","componentWillMount","params","match","actionId","handleRequest","componentWillUnmount","document","getElementsByTagName","innerText","componentWillReceiveProps","nextProps","render","InterfaceTabs","view","component","View","name","edit","Edit","run","Run","emitHook","tabs","map","item","tabContent","C","Component","propTypes","PropTypes","object","array","func","history","bool"],"mappings":"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","file":"InterfaceContent.js","sourceRoot":"C:/Users/DUOYI/Desktop/api/test/vendors","sourcesContent":["import React, { PureComponent as Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Tabs, Modal, Button } from 'antd';\nimport Edit from './Edit.js';\nimport View from './View.js';\nimport { Prompt } from 'react-router';\nimport { fetchInterfaceData } from '../../../../reducer/modules/interface.js';\nimport { withRouter } from 'react-router-dom';\nimport Run from './Run/Run.js';\nconst plugin = require('client/plugin.js');\n\nconst TabPane = Tabs.TabPane;\n@connect(\n  state => {\n    return {\n      curdata: state.inter.curdata,\n      list: state.inter.list,\n      editStatus: state.inter.editStatus\n    };\n  },\n  {\n    fetchInterfaceData\n  }\n)\nclass Content extends Component {\n  static propTypes = {\n    match: PropTypes.object,\n    list: PropTypes.array,\n    curdata: PropTypes.object,\n    fetchInterfaceData: PropTypes.func,\n    history: PropTypes.object,\n    editStatus: PropTypes.bool\n  };\n  constructor(props) {\n    super(props);\n    this.title = 'YApi-高效、易用、功能强大的可视化接口管理平台';\n    this.state = {\n      curtab: 'view',\n      visible: false,\n      nextTab: ''\n    };\n  }\n\n  componentWillMount() {\n    const params = this.props.match.params;\n    this.actionId = params.actionId;\n    this.handleRequest(this.props);\n  }\n\n  componentWillUnmount() {\n    document.getElementsByTagName('title')[0].innerText = this.title;\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const params = nextProps.match.params;\n    if (params.actionId !== this.actionId) {\n      this.actionId = params.actionId;\n      this.handleRequest(nextProps);\n    }\n  }\n\n  handleRequest(nextProps) {\n    const params = nextProps.match.params;\n    this.props.fetchInterfaceData(params.actionId);\n    this.setState({\n      curtab: 'view'\n    });\n  }\n\n  switchToView = () => {\n    this.setState({\n      curtab: 'view'\n    });\n  };\n\n  onChange = key => {\n    if (this.state.curtab === 'edit' && this.props.editStatus) {\n      this.showModal();\n    } else {\n      this.setState({\n        curtab: key\n      });\n    }\n    this.setState({\n      nextTab: key\n    });\n  };\n  // 确定离开页面\n  handleOk = () => {\n    this.setState({\n      visible: false,\n      curtab: this.state.nextTab\n    });\n  };\n  // 离开编辑页面的提示\n  showModal = () => {\n    this.setState({\n      visible: true\n    });\n  };\n  // 取消离开编辑页面\n  handleCancel = () => {\n    this.setState({\n      visible: false\n    });\n  };\n  render() {\n    if (this.props.curdata.title) {\n      document.getElementsByTagName('title')[0].innerText =\n        this.props.curdata.title + '-' + this.title;\n    }\n\n    let InterfaceTabs = {\n      view: {\n        component: View,\n        name: '预览'\n      },\n      edit: {\n        component: Edit,\n        name: '编辑'\n      },\n      run: {\n        component: Run,\n        name: '运行'\n      }\n    };\n\n    plugin.emitHook('interface_tab', InterfaceTabs);\n\n    const tabs = (\n      <Tabs\n        className=\"tabs-large\"\n        onChange={this.onChange}\n        activeKey={this.state.curtab}\n        defaultActiveKey=\"view\"\n      >\n        {Object.keys(InterfaceTabs).map(key => {\n          let item = InterfaceTabs[key];\n          return <TabPane tab={item.name} key={key} />;\n        })}\n      </Tabs>\n    );\n    let tabContent = null;\n    if (this.state.curtab) {\n      let C = InterfaceTabs[this.state.curtab].component;\n      tabContent = <C switchToView={this.switchToView} />;\n    }\n\n    return (\n      <div className=\"interface-content\">\n        <Prompt\n          when={this.state.curtab === 'edit' && this.props.editStatus ? true : false}\n          message={() => {\n            // this.showModal();\n            return '离开页面会丢失当前编辑的内容，确定要离开吗？';\n          }}\n        />\n        {tabs}\n        {tabContent}\n        {this.state.visible && (\n          <Modal\n            title=\"你即将离开编辑页面\"\n            visible={this.state.visible}\n            onCancel={this.handleCancel}\n            footer={[\n              <Button key=\"back\" onClick={this.handleCancel}>\n                取 消\n              </Button>,\n              <Button key=\"submit\" onClick={this.handleOk}>\n                确 定\n              </Button>\n            ]}\n          >\n            <p>离开页面会丢失当前编辑的内容，确定要离开吗？</p>\n          </Modal>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Content);\n"]}