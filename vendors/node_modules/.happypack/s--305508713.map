{"version":3,"sources":["client\\containers\\User\\List.js"],"names":["Search","limit","List","curUserRole","state","user","role","setBreadcrumb","props","changePage","setState","current","getUserList","confirm","axios","post","id","uid","then","res","data","errcode","success","userlist","filter","item","_id","error","errmsg","err","message","handleSearch","params","q","value","get","userList","forEach","push","v","isSearch","backups","total","result","list","count","map","index","key","up_time","componentDidMount","componentWillMount","name","render","columns","title","dataIndex","width","username","display","textAlign","pageConfig","pageSize","onChange","defaultPageConfig","length","marginBottom","e","target","record","Component","propTypes","PropTypes","func","string"],"mappings":"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","file":"List.js","sourceRoot":"C:/Users/DUOYI/Desktop/api/test/vendors","sourcesContent":["import React, { PureComponent as Component } from 'react';\nimport { formatTime } from '../../common.js';\nimport { Link } from 'react-router-dom';\nimport { setBreadcrumb } from '../../reducer/modules/user';\n//import PropTypes from 'prop-types'\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Table, Popconfirm, message, Input } from 'antd';\nimport axios from 'axios';\n\nconst Search = Input.Search;\nconst limit = 20;\n@connect(\n  state => {\n    return {\n      curUserRole: state.user.role\n    };\n  },\n  {\n    setBreadcrumb\n  }\n)\nclass List extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      total: null,\n      current: 1,\n      backups: [],\n      isSearch: false\n    };\n  }\n  static propTypes = {\n    setBreadcrumb: PropTypes.func,\n    curUserRole: PropTypes.string\n  };\n  changePage = current => {\n    this.setState(\n      {\n        current: current\n      },\n      this.getUserList\n    );\n  };\n\n  getUserList() {\n    axios.get('/api/user/list?page=' + this.state.current + '&limit=' + limit).then(res => {\n      let result = res.data;\n\n      if (result.errcode === 0) {\n        let list = result.data.list;\n        let total = result.data.count;\n        list.map((item, index) => {\n          item.key = index;\n          item.up_time = formatTime(item.up_time);\n        });\n        this.setState({\n          data: list,\n          total: total,\n          backups: list\n        });\n      }\n    });\n  }\n\n  componentDidMount() {\n    this.getUserList();\n  }\n\n  confirm = uid => {\n    axios\n      .post('/api/user/del', {\n        id: uid\n      })\n      .then(\n        res => {\n          if (res.data.errcode === 0) {\n            message.success('已删除此用户');\n            let userlist = this.state.data;\n            userlist = userlist.filter(item => {\n              return item._id != uid;\n            });\n            this.setState({\n              data: userlist\n            });\n          } else {\n            message.error(res.data.errmsg);\n          }\n        },\n        err => {\n          message.error(err.message);\n        }\n      );\n  };\n\n  async componentWillMount() {\n    this.props.setBreadcrumb([{ name: '用户管理' }]);\n  }\n\n  handleSearch = value => {\n    let params = { q: value };\n    if (params.q !== '') {\n      axios.get('/api/user/search', { params }).then(data => {\n        let userList = [];\n\n        data = data.data.data;\n        if (data) {\n          data.forEach(v =>\n            userList.push({\n              ...v,\n              _id: v.uid\n            })\n          );\n        }\n\n        this.setState({\n          data: userList,\n          isSearch: true\n        });\n      });\n    } else {\n      this.setState({\n        data: this.state.backups,\n        isSearch: false\n      });\n    }\n  };\n\n  render() {\n    const role = this.props.curUserRole;\n    let data = [];\n    if (role === 'admin') {\n      data = this.state.data;\n    }\n    let columns = [\n      {\n        title: '用户名',\n        dataIndex: 'username',\n        key: 'username',\n        width: 180,\n        render: (username, item) => {\n          return <Link to={'/user/profile/' + item._id}>{item.username}</Link>;\n        }\n      },\n      {\n        title: 'Email',\n        dataIndex: 'email',\n        key: 'email'\n      },\n      {\n        title: '用户角色',\n        dataIndex: 'role',\n        key: 'role',\n        width: 150\n      },\n      {\n        title: '更新日期',\n        dataIndex: 'up_time',\n        key: 'up_time',\n        width: 160\n      },\n      {\n        title: '功能',\n        key: 'action',\n        width: '90px',\n        render: item => {\n          return (\n            <span>\n              {/* <span className=\"ant-divider\" /> */}\n              <Popconfirm\n                title=\"确认删除此用户?\"\n                onConfirm={() => {\n                  this.confirm(item._id);\n                }}\n                okText=\"确定\"\n                cancelText=\"取消\"\n              >\n                <a style={{ display: 'block', textAlign: 'center' }} href=\"#\">\n                  删除\n                </a>\n              </Popconfirm>\n            </span>\n          );\n        }\n      }\n    ];\n\n    columns = columns.filter(item => {\n      if (item.key === 'action' && role !== 'admin') {\n        return false;\n      }\n      return true;\n    });\n\n    const pageConfig = {\n      total: this.state.total,\n      pageSize: limit,\n      current: this.state.current,\n      onChange: this.changePage\n    };\n\n    const defaultPageConfig = {\n      total: this.state.data.length,\n      pageSize: limit,\n      current: 1\n    };\n\n    return (\n      <section className=\"user-table\">\n        <div className=\"user-search-wrapper\">\n          <h2 style={{ marginBottom: '10px' }}>用户总数：{this.state.total}位</h2>\n          <Search\n            onChange={e => this.handleSearch(e.target.value)}\n            onSearch={this.handleSearch}\n            placeholder=\"请输入用户名\"\n          />\n        </div>\n        <Table\n          bordered={true}\n          rowKey={record => record._id}\n          columns={columns}\n          pagination={this.state.isSearch ? defaultPageConfig : pageConfig}\n          dataSource={data}\n        />\n      </section>\n    );\n  }\n}\n\nexport default List;\n"]}