{"version":3,"sources":["common\\mock-extra.js"],"names":["strRegex","varSplit","mockSplit","Mock","require","Random","extend","timestamp","time","Date","getTime","substr","length","mock","mockJSON","context","filtersMap","regexp","handleRegexp","parse","p","c","Array","isArray","i","hasOwnProperty","constructor","handleStr","filters","split","newFilters","concat","f","l","index","toLowerCase","indexOf","splice","join","call","item","RegExp","str","matchs","match","name","names","data","undefined","forEach","n","module","exports"],"mappings":"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","file":"mock-extra.js","sourceRoot":"C:/Users/DUOYI/Desktop/api/test/vendors","sourcesContent":["/**\n * @author suxiaoxin\n * @info  mockJs 功能增强脚本\n */\nvar strRegex = /\\${([a-zA-Z]+)\\.?([a-zA-Z0-9_\\.]*)\\}/i;\nvar varSplit = '.';\nvar mockSplit = '|';\nvar Mock = require('mockjs');\nMock.Random.extend({\n  timestamp: function(){\n    var time = new Date().getTime() + '';\n    return +time.substr(0, time.length - 3)\n  }\n})\n\nfunction mock(mockJSON, context) {\n  context = context || {};\n  var filtersMap = {\n    regexp: handleRegexp\n  };\n  if(!mockJSON || typeof mockJSON !== 'object'){\n    return mockJSON;\n  }\n\n  return parse(mockJSON);\n\n  function parse(p, c) {\n    if(!c){\n      c = Array.isArray(p) ? [] :  {}\n    }\n\n    for (var i in p) {\n      if (!p.hasOwnProperty(i)) {\n        continue;\n      }\n      if (p[i] && typeof p[i] === 'object') {\n        c[i] = (p[i].constructor === Array) ? [] : {};\n        parse(p[i], c[i]);\n      } else if(p[i] && typeof p[i] === 'string'){\n        p[i] = handleStr(p[i]);        \n        var filters = i.split(mockSplit), newFilters = [].concat(filters);\n        c[i] = p[i];\n        if (filters.length > 1) {\n          for (var f = 1, l = filters.length, index; f < l; f++) {\n            filters[f] = filters[f].toLowerCase();\n            if (filters[f] in filtersMap) {\n              if ((index = newFilters.indexOf(filters[f])) !== -1) {\n                newFilters.splice(index, 1);\n              }\n              delete c[i];\n              c[newFilters.join(mockSplit)] = filtersMap[filters[f]].call(p, p[i]);\n            }\n          }\n        }\n      }else{\n        c[i] = p[i];\n      }\n    }\n    return c;\n  }\n\n  function handleRegexp(item) {\n    return new RegExp(item);\n  }\n\n  function handleStr(str) {\n    if (typeof str !== 'string' || str.indexOf('{') === -1 || str.indexOf('}') === -1 || str.indexOf('$') === -1) {\n      return str;\n    }\n\n    let matchs = str.match(strRegex);\n    if(matchs){\n      let name = matchs[1] + (matchs[2]? '.' + matchs[2] : '');\n      if(!name) return str;\n      var names = name.split(varSplit);\n      var data = context;\n      \n      if(typeof context[names[0]] === undefined){\n        return str;\n      }\n      names.forEach(function (n) {\n        if (data === '') return '';\n        if (n in data) {\n          data = data[n];\n        } else {\n          data = '';\n        }\n      });\n      return data;\n    }\n    return str;\n  }\n}\n\nmodule.exports = mock;"]}