{"version":3,"sources":["client\\components\\SchemaTable\\SchemaTable.js"],"names":["messageMap","desc","default","maximum","minimum","maxItems","minItems","maxLength","minLength","enum","enumDesc","uniqueItems","itemType","format","itemFormat","mock","columns","title","dataIndex","key","width","render","text","item","sub","_","isBoolean","isUndefined","childrenDesc","record","result","map","index","name","value","isShow","fontWeight","toString","SchemaTable","props","product","json5","parse","dataSource","e","data","isArray","Component","propTypes","PropTypes","string"],"mappings":"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","file":"SchemaTable.js","sourceRoot":"C:/Users/DUOYI/Desktop/api/test/vendors","sourcesContent":["import React, { Component } from 'react';\nimport { Table } from 'antd';\nimport json5 from 'json5';\nimport PropTypes from 'prop-types';\nimport { schemaTransformToTable } from '../../../common/shema-transformTo-table.js';\nimport _ from 'underscore';\nimport './index.scss';\n\nconst messageMap = {\n  desc: '备注',\n  default: '实例',\n  maximum: '最大值',\n  minimum: '最小值',\n  maxItems: '最大数量',\n  minItems: '最小数量',\n  maxLength: '最大长度',\n  minLength: '最小长度',\n  enum: '枚举',\n  enumDesc: '枚举备注',\n  uniqueItems: '元素是否都不同',\n  itemType: 'item 类型',\n  format: 'format',\n  itemFormat: 'format',\n  mock: 'mock'\n};\n\nconst columns = [\n  {\n    title: '名称',\n    dataIndex: 'name',\n    key: 'name',\n    width: 200\n  },\n  {\n    title: '类型',\n    dataIndex: 'type',\n    key: 'type',\n    width: 100,\n    render: (text, item) => {\n      // console.log('text',item.sub);\n      return text === 'array' ? (\n        <span>{item.sub ? item.sub.itemType || '' : 'array'} []</span>\n      ) : (\n        <span>{text}</span>\n      );\n    }\n  },\n  {\n    title: '是否必须',\n    dataIndex: 'required',\n    key: 'required',\n    width: 80,\n    render: text => {\n      return <div>{text ? '必须' : '非必须'}</div>;\n    }\n  },\n  {\n    title: '默认值',\n    dataIndex: 'default',\n    key: 'default',\n    width: 80,\n    render: text => {\n      return <div>{_.isBoolean(text) ? text + '' : text}</div>;\n    }\n  },\n  {\n    title: '备注',\n    dataIndex: 'desc',\n    key: 'desc',\n    render: (text, item) => {\n      return _.isUndefined(item.childrenDesc) ? (\n        <span className=\"table-desc\">{text}</span>\n      ) : (\n        <span className=\"table-desc\">{item.childrenDesc}</span>\n      );\n    }\n  },\n  {\n    title: '其他信息',\n    dataIndex: 'sub',\n    key: 'sub',\n    width: 180,\n    render: (text, record) => {\n      let result = text || record;\n\n      return Object.keys(result).map((item, index) => {\n        let name = messageMap[item];\n        let value = result[item];\n        let isShow = !_.isUndefined(result[item]) && !_.isUndefined(name);\n\n        return (\n          isShow && (\n            <p key={index}>\n              <span style={{ fontWeight: '700' }}>{name}: </span>\n              <span>{value.toString()}</span>\n            </p>\n          )\n        );\n      });\n    }\n  }\n];\n\nclass SchemaTable extends Component {\n  static propTypes = {\n    dataSource: PropTypes.string\n  };\n\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    let product;\n    try {\n      product = json5.parse(this.props.dataSource);\n    } catch (e) {\n      product = null;\n    }\n    if (!product) {\n      return null;\n    }\n    let data = schemaTransformToTable(product);\n    data = _.isArray(data) ? data : [];\n    return <Table bordered size=\"small\" pagination={false} dataSource={data} columns={columns} />;\n  }\n}\nexport default SchemaTable;\n"]}