{"version":3,"sources":["client\\containers\\Project\\Interface\\InterfaceList\\InterfaceEditForm.js"],"names":["jSchema","require","ResBodySchema","lang","mock","MOCK_SOURCE","ReqBodySchema","TabPane","checkIsJsonSchema","json","json5","parse","properties","type","items","toLowerCase","types","indexOf","e","EditFormContext","validJson","Json5Example","TextArea","FormItem","Item","Option","InputGroup","Group","RadioButton","Button","RadioGroup","dataTpl","req_query","name","required","desc","example","req_headers","req_params","req_body_form","HTTP_METHOD","constants","HTTP_METHOD_KEYS","HTTP_REQUEST_HEADER","InterfaceEditForm","custom_field","state","group","field","projectMsg","project","currProject","changeEditStatus","initState","curdata","startTime","Date","getTime","length","map","item","req","body","query","headers","method","default_tab","submitStatus","title","path","status","value","req_body_type","req_body_other","res_body_type","res_body","res_body_mock","jsonType","mockUrl","props","req_radio_type","custom_field_value","api_opened","visible","handleSubmit","preventDefault","setState","form","validateFields","err","values","setTimeout","_isMounted","editor","getHtml","markdown","getMarkdown","error","JSON","isfile","isHavaContentType","forEach","unshift","filter","request_body","req_body_is_json_schema","res_body_is_json_schema","onSubmit","console","message","onChangeMethod","radio","val","join","_changeRadioGroup","addParams","data","newValue","concat","delParams","key","curValue","getFieldValue","index","setFieldsValue","handleMockPreview","str","schema","axios","post","result","mockPreview","setValue","resBodyEditor","curData","format","mockData","handleJsonType","handlePath","target","queue","insertParams","findExist","_","find","push","paths","split","i","substr","replace","match","changeRadioGroup","res","obj","hideTabs","handleDragMove","handleResBody","initResBody","d","text","handleReqBody","initReqBody","handleBulkOk","bulkName","bulkValue","valueItem","handleBulkCancel","showBulk","handleBulkValueInput","componentDidMount","container","readOnly","Editor","el","document","querySelector","initialEditType","height","initialValue","componentWillUnmount","render","getFieldDecorator","formItemLayout","labelCol","span","wrapperCol","res_body_use_schema_editor","req_body_other_use_schema_editor","queryTpl","headerTpl","inputValue","option","children","toUpperCase","requestBodyTpl","paramsTpl","paramsList","QueryList","headerList","requestBodyList","DEMOPATH","minRows","maxRows","marginTop","rules","catid","cat","_id","width","display","basepath","tag","cursor","color","onTagClick","enable","minHeight","is_json5","valuePropName","padding","fontSize","window","open","fontWeight","backgroundColor","lineHeight","noticed","textAlign","Component","propTypes","PropTypes","object","groupList","array","string","func","bool","create","onValuesChange"],"mappings":"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","file":"InterfaceEditForm.js","sourceRoot":"C:/Users/DUOYI/Desktop/api/test/vendors","sourcesContent":["import React, { PureComponent as Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport _ from 'underscore';\nimport constants from '../../../../constants/variable.js';\nimport { handlePath, nameLengthLimit } from '../../../../common.js';\nimport { changeEditStatus } from '../../../../reducer/modules/interface.js';\nimport json5 from 'json5';\nimport { message, Affix, Tabs, Modal } from 'antd';\nimport EasyDragSort from '../../../../components/EasyDragSort/EasyDragSort.js';\nimport mockEditor from 'client/components/AceEditor/mockEditor';\nimport AceEditor from 'client/components/AceEditor/AceEditor';\nimport axios from 'axios';\nimport { MOCK_SOURCE } from '../../../../constants/variable.js';\nimport Editor from 'common/tui-editor/dist/tui-editor-Editor-all.min.js';\nconst jSchema = require('json-schema-editor-visual');\nconst ResBodySchema = jSchema({ lang: 'zh_CN', mock: MOCK_SOURCE });\nconst ReqBodySchema = jSchema({ lang: 'zh_CN', mock: MOCK_SOURCE });\nconst TabPane = Tabs.TabPane;\n\n\nrequire('common/tui-editor/dist/tui-editor.min.css'); // editor ui\nrequire('common/tui-editor/dist/tui-editor-contents.min.css'); // editor content\nrequire('./editor.css');\n\n\nfunction checkIsJsonSchema(json) {\n  try {\n    json = json5.parse(json);\n    if (json.properties && typeof json.properties === 'object' && !json.type) {\n      json.type = 'object';\n    }\n    if (json.items && typeof json.items === 'object' && !json.type) {\n      json.type = 'array';\n    }\n    if (!json.type) {\n      return false;\n    }\n    json.type = json.type.toLowerCase();\n    let types = ['object', 'string', 'number', 'array', 'boolean', 'integer'];\n    if (types.indexOf(json.type) === -1) {\n      return false;\n    }\n    return JSON.stringify(json);\n  } catch (e) {\n    return false;\n  }\n}\n\nlet EditFormContext;\nconst validJson = json => {\n  try {\n    json5.parse(json);\n    return true;\n  } catch (e) {\n    return false;\n  }\n};\n\nimport {\n  Form,\n  Select,\n  Input,\n  Tooltip,\n  Button,\n  Row,\n  Col,\n  Radio,\n  Icon,\n  AutoComplete,\n  Switch\n} from 'antd';\n\nconst Json5Example = `\n  {\n    /**\n     * info\n     */\n\n    \"id\": 1 //appId\n  }\n\n`;\n\nconst TextArea = Input.TextArea;\nconst FormItem = Form.Item;\nconst Option = Select.Option;\nconst InputGroup = Input.Group;\nconst RadioButton = Radio.Button;\nconst RadioGroup = Radio.Group;\nconst dataTpl = {\n  req_query: { name: '', required: '1', desc: '', example: '' },\n  req_headers: { name: '', required: '1', desc: '', example: '' },\n  req_params: { name: '', desc: '', example: '' },\n  req_body_form: {\n    name: '',\n    type: 'text',\n    required: '1',\n    desc: '',\n    example: ''\n  }\n};\n\nconst HTTP_METHOD = constants.HTTP_METHOD;\nconst HTTP_METHOD_KEYS = Object.keys(HTTP_METHOD);\nconst HTTP_REQUEST_HEADER = constants.HTTP_REQUEST_HEADER;\n\n@connect(\n  state => {\n    return {\n      custom_field: state.group.field,\n      projectMsg: state.project.currProject\n    };\n  },\n  {\n    changeEditStatus\n  }\n)\nclass InterfaceEditForm extends Component {\n  static propTypes = {\n    custom_field: PropTypes.object,\n    groupList: PropTypes.array,\n    form: PropTypes.object,\n    curdata: PropTypes.object,\n    mockUrl: PropTypes.string,\n    onSubmit: PropTypes.func,\n    basepath: PropTypes.string,\n    noticed: PropTypes.bool,\n    cat: PropTypes.array,\n    changeEditStatus: PropTypes.func,\n    projectMsg: PropTypes.object,\n    onTagClick: PropTypes.func\n  };\n\n  initState(curdata) {\n    this.startTime = new Date().getTime();\n    if (curdata.req_query && curdata.req_query.length === 0) {\n      delete curdata.req_query;\n    }\n    if (curdata.req_headers && curdata.req_headers.length === 0) {\n      delete curdata.req_headers;\n    }\n    if (curdata.req_body_form && curdata.req_body_form.length === 0) {\n      delete curdata.req_body_form;\n    }\n    if (curdata.req_params && curdata.req_params.length === 0) {\n      delete curdata.req_params;\n    }\n    if (curdata.req_body_form) {\n      curdata.req_body_form = curdata.req_body_form.map(item => {\n        item.type = item.type === 'text' ? 'text' : 'file';\n        return item;\n      });\n    }\n    // 设置标签的展开与折叠\n    curdata['hideTabs'] = {\n      req: {\n        body: 'hide',\n        query: 'hide',\n        headers: 'hide'\n      }\n    };\n    curdata['hideTabs']['req'][HTTP_METHOD[curdata.method].default_tab] = '';\n    return Object.assign(\n      {\n        submitStatus: false,\n        title: '',\n        path: '',\n        status: 'undone',\n        method: 'get',\n\n        req_params: [],\n\n        req_query: [\n          {\n            name: '',\n            desc: '',\n            required: '1'\n          }\n        ],\n\n        req_headers: [\n          {\n            name: '',\n            value: '',\n            required: '1'\n          }\n        ],\n\n        req_body_type: 'form',\n        req_body_form: [\n          {\n            name: '',\n            type: 'text',\n            required: '1'\n          }\n        ],\n        req_body_other: '',\n\n        res_body_type: 'json',\n        res_body: '',\n        desc: '',\n        res_body_mock: '',\n        jsonType: 'tpl',\n        mockUrl: this.props.mockUrl,\n        req_radio_type: 'req-query',\n        custom_field_value: '',\n        api_opened: false,\n        visible: false\n      },\n      curdata\n    );\n  }\n\n  constructor(props) {\n    super(props);\n    const { curdata } = this.props;\n    // console.log('custom_field1', this.props.custom_field);\n    this.state = this.initState(curdata);\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.setState({\n      submitStatus: true\n    });\n    try {\n      this.props.form.validateFields((err, values) => {\n        setTimeout(() => {\n          if (this._isMounted) {\n            this.setState({\n              submitStatus: false\n            });\n          }\n        }, 3000);\n        if (!err) {\n          values.desc = this.editor.getHtml();\n          values.markdown = this.editor.getMarkdown();\n          if (values.res_body_type === 'json') {\n            if (this.state.res_body && validJson(this.state.res_body) === false) {\n              return message.error('返回body json格式有问题，请检查！');\n            }\n            try {\n              values.res_body = JSON.stringify(JSON.parse(this.state.res_body), null, '   ');\n            } catch (e) {\n              values.res_body = this.state.res_body;\n            }\n          }\n          if (values.req_body_type === 'json') {\n            if (this.state.req_body_other && validJson(this.state.req_body_other) === false) {\n              return message.error('响应Body json格式有问题，请检查！');\n            }\n            try {\n              values.req_body_other = JSON.stringify(\n                JSON.parse(this.state.req_body_other),\n                null,\n                '   '\n              );\n            } catch (e) {\n              values.req_body_other = this.state.req_body_other;\n            }\n          }\n\n          values.method = this.state.method;\n          values.req_params = values.req_params || [];\n          values.req_headers = values.req_headers || [];\n          values.req_body_form = values.req_body_form || [];\n          let isfile = false,\n            isHavaContentType = false;\n          if (values.req_body_type === 'form') {\n            values.req_body_form.forEach(item => {\n              if (item.type === 'file') {\n                isfile = true;\n              }\n            });\n\n            values.req_headers.map(item => {\n              if (item.name === 'Content-Type') {\n                item.value = isfile ? 'multipart/form-data' : 'application/x-www-form-urlencoded';\n                isHavaContentType = true;\n              }\n            });\n            if (isHavaContentType === false) {\n              values.req_headers.unshift({\n                name: 'Content-Type',\n                value: isfile ? 'multipart/form-data' : 'application/x-www-form-urlencoded'\n              });\n            }\n          } else if (values.req_body_type === 'json') {\n            values.req_headers\n              ? values.req_headers.map(item => {\n                  if (item.name === 'Content-Type') {\n                    item.value = 'application/json';\n                    isHavaContentType = true;\n                  }\n                })\n              : [];\n            if (isHavaContentType === false) {\n              values.req_headers = values.req_headers || [];\n              values.req_headers.unshift({\n                name: 'Content-Type',\n                value: 'application/json'\n              });\n            }\n          }\n          values.req_headers = values.req_headers\n            ? values.req_headers.filter(item => item.name !== '')\n            : [];\n\n          values.req_body_form = values.req_body_form\n            ? values.req_body_form.filter(item => item.name !== '')\n            : [];\n          values.req_params = values.req_params\n            ? values.req_params.filter(item => item.name !== '')\n            : [];\n          values.req_query = values.req_query\n            ? values.req_query.filter(item => item.name !== '')\n            : [];\n\n          if (HTTP_METHOD[values.method].request_body !== true) {\n            values.req_body_form = [];\n          }\n\n          if (\n            values.req_body_is_json_schema &&\n            values.req_body_other &&\n            values.req_body_type === 'json'\n          ) {\n            values.req_body_other = checkIsJsonSchema(values.req_body_other);\n            if (!values.req_body_other) {\n              return message.error('请求参数 json-schema 格式有误');\n            }\n          }\n          if (\n            values.res_body_is_json_schema &&\n            values.res_body &&\n            values.res_body_type === 'json'\n          ) {\n            values.res_body = checkIsJsonSchema(values.res_body);\n            if (!values.res_body) {\n              return message.error('返回数据 json-schema 格式有误');\n            }\n          }\n\n          this.props.onSubmit(values);\n          EditFormContext.props.changeEditStatus(false);\n        }\n      });\n    } catch (e) {\n      console.error(e.message);\n      this.setState({\n        submitStatus: false\n      });\n    }\n  };\n\n  onChangeMethod = val => {\n    let radio = [];\n    if (HTTP_METHOD[val].request_body) {\n      radio = ['req', 'body'];\n    } else {\n      radio = ['req', 'query'];\n    }\n    this.setState({\n      req_radio_type: radio.join('-')\n    });\n\n    this.setState({ method: val }, () => {\n      this._changeRadioGroup(radio[0], radio[1]);\n    });\n  };\n\n  componentDidMount() {\n    EditFormContext = this;\n    this._isMounted = true;\n    this.setState({\n      req_radio_type: HTTP_METHOD[this.state.method].request_body ? 'req-body' : 'req-query'\n    });\n\n    this.mockPreview = mockEditor({\n      container: 'mock-preview',\n      data: '',\n      readOnly: true\n    });\n\n    this.editor = new Editor({\n      el: document.querySelector('#desc'),\n      initialEditType: 'wysiwyg',\n      height: '500px',\n      initialValue: this.state.markdown || this.state.desc\n    });\n  }\n\n  componentWillUnmount() {\n    EditFormContext.props.changeEditStatus(false);\n    EditFormContext = null;\n    this._isMounted = false;\n  }\n\n  addParams = (name, data) => {\n    let newValue = {};\n    data = data || dataTpl[name];\n    newValue[name] = [].concat(this.state[name], data);\n    this.setState(newValue);\n  };\n\n  delParams = (key, name) => {\n    let curValue = this.props.form.getFieldValue(name);\n    let newValue = {};\n    newValue[name] = curValue.filter((val, index) => {\n      return index !== key;\n    });\n    this.props.form.setFieldsValue(newValue);\n    this.setState(newValue);\n  };\n\n  handleMockPreview = async () => {\n    let str = '';\n\n    try {\n      if (this.props.form.getFieldValue('res_body_is_json_schema')) {\n        let schema = json5.parse(this.props.form.getFieldValue('res_body'));\n        let result = await axios.post('/api/interface/schema2json', {\n          schema: schema\n        });\n        return this.mockPreview.setValue(JSON.stringify(result.data));\n      }\n      if (this.resBodyEditor.editor.curData.format === true) {\n        str = JSON.stringify(this.resBodyEditor.editor.curData.mockData(), null, '  ');\n      } else {\n        str = '解析出错: ' + this.resBodyEditor.editor.curData.format;\n      }\n    } catch (err) {\n      str = '解析出错: ' + err.message;\n    }\n    this.mockPreview.setValue(str);\n  };\n\n  handleJsonType = key => {\n    key = key || 'tpl';\n    if (key === 'preview') {\n      this.handleMockPreview();\n    }\n    this.setState({\n      jsonType: key\n    });\n  };\n\n  handlePath = e => {\n    let val = e.target.value,\n      queue = [];\n\n    let insertParams = name => {\n      let findExist = _.find(this.state.req_params, { name: name });\n      if (findExist) {\n        queue.push(findExist);\n      } else {\n        queue.push({ name: name, desc: '' });\n      }\n    };\n    val = handlePath(val);\n    this.props.form.setFieldsValue({\n      path: val\n    });\n    if (val && val.indexOf(':') !== -1) {\n      let paths = val.split('/'),\n        name,\n        i;\n      for (i = 1; i < paths.length; i++) {\n        if (paths[i][0] === ':') {\n          name = paths[i].substr(1);\n          insertParams(name);\n        }\n      }\n    }\n\n    if (val && val.length > 3) {\n      val.replace(/\\{(.+?)\\}/g, function(str, match) {\n        insertParams(match);\n      });\n    }\n\n    this.setState({\n      req_params: queue\n    });\n  };\n\n  // 点击切换radio\n  changeRadioGroup = e => {\n    const res = e.target.value.split('-');\n    if (res[0] === 'req') {\n      this.setState({\n        req_radio_type: e.target.value\n      });\n    }\n    this._changeRadioGroup(res[0], res[1]);\n  };\n\n  _changeRadioGroup = (group, item) => {\n    const obj = {};\n    // 先全部隐藏\n    for (let key in this.state.hideTabs[group]) {\n      obj[key] = 'hide';\n    }\n    // 再取消选中项目的隐藏\n    obj[item] = '';\n    this.setState({\n      hideTabs: {\n        ...this.state.hideTabs,\n        [group]: obj\n      }\n    });\n  };\n\n  handleDragMove = name => {\n    return data => {\n      let newValue = {\n        [name]: data\n      };\n      this.props.form.setFieldsValue(newValue);\n      this.setState(newValue);\n    };\n  };\n\n  // 处理res_body Editor\n  handleResBody = d => {\n    const initResBody = this.state.res_body;\n    this.setState({\n      res_body: d.text\n    });\n    EditFormContext.props.changeEditStatus(initResBody !== d.text);\n  };\n\n  // 处理 req_body_other Editor\n  handleReqBody = d => {\n    const initReqBody = this.state.req_body_other;\n    this.setState({\n      req_body_other: d.text\n    });\n    EditFormContext.props.changeEditStatus(initReqBody !== d.text);\n  };\n\n  // 处理批量导入参数\n  handleBulkOk = () => {\n    let curValue = this.props.form.getFieldValue(this.state.bulkName);\n    // { name: '', required: '1', desc: '', example: '' }\n    let newValue = [];\n\n    this.state.bulkValue.split('\\n').forEach((item, index) => {\n      let valueItem = Object.assign({}, curValue[index] || dataTpl[this.state.bulkName]);\n      valueItem.name = item.split(':')[0];\n      valueItem.example = item.split(':')[1] || '';\n      newValue.push(valueItem);\n    });\n\n    this.setState({\n      visible: false,\n      bulkValue: null,\n      bulkName: null,\n      [this.state.bulkName]: newValue\n    });\n  };\n\n  // 取消批量导入参数\n  handleBulkCancel = () => {\n    this.setState({\n      visible: false,\n      bulkValue: null,\n      bulkName: null\n    });\n  };\n\n  showBulk = name => {\n    let value = this.props.form.getFieldValue(name);\n\n    let bulkValue = ``;\n    value.forEach(item => {\n      return (bulkValue += item.name ? `${item.name}:${item.example || ''}\\n` : '');\n    });\n\n    this.setState({\n      visible: true,\n      bulkValue,\n      bulkName: name\n    });\n  };\n\n  handleBulkValueInput = e => {\n    this.setState({\n      bulkValue: e.target.value\n    });\n  };\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const { custom_field, projectMsg } = this.props;\n\n    const formItemLayout = {\n      labelCol: { span: 4 },\n      wrapperCol: { span: 18 }\n    };\n\n    const res_body_use_schema_editor = checkIsJsonSchema(this.state.res_body) || '';\n\n    const req_body_other_use_schema_editor = checkIsJsonSchema(this.state.req_body_other) || '';\n\n    const queryTpl = (data, index) => {\n      return (\n        <Row key={index} className=\"interface-edit-item-content\">\n          <Col\n            span=\"1\"\n            easy_drag_sort_child=\"true\"\n            className=\"interface-edit-item-content-col interface-edit-item-content-col-drag\"\n          >\n            <Icon type=\"bars\" />\n          </Col>\n          <Col span=\"4\" draggable=\"false\" className=\"interface-edit-item-content-col\">\n            {getFieldDecorator('req_query[' + index + '].name', {\n              initialValue: data.name\n            })(<Input placeholder=\"参数名称\" />)}\n          </Col>\n          <Col span=\"3\" className=\"interface-edit-item-content-col\">\n            {getFieldDecorator('req_query[' + index + '].required', {\n              initialValue: data.required\n            })(\n              <Select>\n                <Option value=\"1\">必需</Option>\n                <Option value=\"0\">非必需</Option>\n              </Select>\n            )}\n          </Col>\n          <Col span=\"6\" className=\"interface-edit-item-content-col\">\n            {getFieldDecorator('req_query[' + index + '].example', {\n              initialValue: data.example\n            })(<TextArea autosize={true} placeholder=\"参数示例\" />)}\n          </Col>\n          <Col span=\"9\" className=\"interface-edit-item-content-col\">\n            {getFieldDecorator('req_query[' + index + '].desc', {\n              initialValue: data.desc\n            })(<TextArea autosize={true} placeholder=\"备注\" />)}\n          </Col>\n          <Col span=\"1\" className=\"interface-edit-item-content-col\">\n            <Icon\n              type=\"delete\"\n              className=\"interface-edit-del-icon\"\n              onClick={() => this.delParams(index, 'req_query')}\n            />\n          </Col>\n        </Row>\n      );\n    };\n\n    const headerTpl = (data, index) => {\n      return (\n        <Row key={index} className=\"interface-edit-item-content\">\n          <Col\n            span=\"1\"\n            easy_drag_sort_child=\"true\"\n            className=\"interface-edit-item-content-col interface-edit-item-content-col-drag\"\n          >\n            <Icon type=\"bars\" />\n          </Col>\n          <Col span=\"4\" className=\"interface-edit-item-content-col\">\n            {getFieldDecorator('req_headers[' + index + '].name', {\n              initialValue: data.name\n            })(\n              <AutoComplete\n                dataSource={HTTP_REQUEST_HEADER}\n                filterOption={(inputValue, option) =>\n                  option.props.children.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\n                }\n                placeholder=\"参数名称\"\n              />\n            )}\n          </Col>\n          <Col span=\"5\" className=\"interface-edit-item-content-col\">\n            {getFieldDecorator('req_headers[' + index + '].value', {\n              initialValue: data.value\n            })(<Input placeholder=\"参数值\" />)}\n          </Col>\n          <Col span=\"5\" className=\"interface-edit-item-content-col\">\n            {getFieldDecorator('req_headers[' + index + '].example', {\n              initialValue: data.example\n            })(<TextArea autosize={true} placeholder=\"参数示例\" />)}\n          </Col>\n          <Col span=\"8\" className=\"interface-edit-item-content-col\">\n            {getFieldDecorator('req_headers[' + index + '].desc', {\n              initialValue: data.desc\n            })(<TextArea autosize={true} placeholder=\"备注\" />)}\n          </Col>\n          <Col span=\"1\" className=\"interface-edit-item-content-col\">\n            <Icon\n              type=\"delete\"\n              className=\"interface-edit-del-icon\"\n              onClick={() => this.delParams(index, 'req_headers')}\n            />\n          </Col>\n        </Row>\n      );\n    };\n\n    const requestBodyTpl = (data, index) => {\n      return (\n        <Row key={index} className=\"interface-edit-item-content\">\n          <Col\n            span=\"1\"\n            easy_drag_sort_child=\"true\"\n            className=\"interface-edit-item-content-col interface-edit-item-content-col-drag\"\n          >\n            <Icon type=\"bars\" />\n          </Col>\n          <Col span=\"4\" className=\"interface-edit-item-content-col\">\n            {getFieldDecorator('req_body_form[' + index + '].name', {\n              initialValue: data.name\n            })(<Input placeholder=\"name\" />)}\n          </Col>\n          <Col span=\"3\" className=\"interface-edit-item-content-col\">\n            {getFieldDecorator('req_body_form[' + index + '].type', {\n              initialValue: data.type\n            })(\n              <Select>\n                <Option value=\"text\">text</Option>\n                <Option value=\"file\">file</Option>\n              </Select>\n            )}\n          </Col>\n          <Col span=\"3\" className=\"interface-edit-item-content-col\">\n            {getFieldDecorator('req_body_form[' + index + '].required', {\n              initialValue: data.required\n            })(\n              <Select>\n                <Option value=\"1\">必需</Option>\n                <Option value=\"0\">非必需</Option>\n              </Select>\n            )}\n          </Col>\n          <Col span=\"5\" className=\"interface-edit-item-content-col\">\n            {getFieldDecorator('req_body_form[' + index + '].example', {\n              initialValue: data.example\n            })(<TextArea autosize={true} placeholder=\"参数示例\" />)}\n          </Col>\n          <Col span=\"7\" className=\"interface-edit-item-content-col\">\n            {getFieldDecorator('req_body_form[' + index + '].desc', {\n              initialValue: data.desc\n            })(<TextArea autosize={true} placeholder=\"备注\" />)}\n          </Col>\n          <Col span=\"1\" className=\"interface-edit-item-content-col\">\n            <Icon\n              type=\"delete\"\n              className=\"interface-edit-del-icon\"\n              onClick={() => this.delParams(index, 'req_body_form')}\n            />\n          </Col>\n        </Row>\n      );\n    };\n\n    const paramsTpl = (data, index) => {\n      return (\n        <Row key={index} className=\"interface-edit-item-content\">\n          <Col span=\"6\" className=\"interface-edit-item-content-col\">\n            {getFieldDecorator('req_params[' + index + '].name', {\n              initialValue: data.name\n            })(<Input disabled placeholder=\"参数名称\" />)}\n          </Col>\n          <Col span=\"7\" className=\"interface-edit-item-content-col\">\n            {getFieldDecorator('req_params[' + index + '].example', {\n              initialValue: data.example\n            })(<TextArea autosize={true} placeholder=\"参数示例\" />)}\n          </Col>\n          <Col span=\"11\" className=\"interface-edit-item-content-col\">\n            {getFieldDecorator('req_params[' + index + '].desc', {\n              initialValue: data.desc\n            })(<TextArea autosize={true} placeholder=\"备注\" />)}\n          </Col>\n        </Row>\n      );\n    };\n\n    const paramsList = this.state.req_params.map((item, index) => {\n      return paramsTpl(item, index);\n    });\n\n    const QueryList = this.state.req_query.map((item, index) => {\n      return queryTpl(item, index);\n    });\n\n    const headerList = this.state.req_headers\n      ? this.state.req_headers.map((item, index) => {\n          return headerTpl(item, index);\n        })\n      : [];\n\n    const requestBodyList = this.state.req_body_form.map((item, index) => {\n      return requestBodyTpl(item, index);\n    });\n\n    const DEMOPATH = '/api/user/{id}';\n\n    return (\n      <div>\n        <Modal\n          title=\"批量添加参数\"\n          width={680}\n          visible={this.state.visible}\n          onOk={this.handleBulkOk}\n          onCancel={this.handleBulkCancel}\n          okText=\"导入\"\n        >\n          <div>\n            <TextArea\n              placeholder=\"每行一个name:examples\"\n              autosize={{ minRows: 6, maxRows: 10 }}\n              value={this.state.bulkValue}\n              onChange={this.handleBulkValueInput}\n            />\n          </div>\n        </Modal>\n        <Form onSubmit={this.handleSubmit}>\n          <h2 className=\"interface-title\" style={{ marginTop: 0 }}>\n            基本设置\n          </h2>\n          <div className=\"panel-sub\">\n            <FormItem className=\"interface-edit-item\" {...formItemLayout} label=\"接口名称\">\n              {getFieldDecorator('title', {\n                initialValue: this.state.title,\n                rules: nameLengthLimit('接口')\n              })(<Input id=\"title\" placeholder=\"接口名称\" />)}\n            </FormItem>\n\n            <FormItem className=\"interface-edit-item\" {...formItemLayout} label=\"选择分类\">\n              {getFieldDecorator('catid', {\n                initialValue: this.state.catid + '',\n                rules: [{ required: true, message: '请选择一个分类' }]\n              })(\n                <Select placeholder=\"请选择一个分类\">\n                  {this.props.cat.map(item => {\n                    return (\n                      <Option key={item._id} value={item._id + ''}>\n                        {item.name}\n                      </Option>\n                    );\n                  })}\n                </Select>\n              )}\n            </FormItem>\n\n            <FormItem\n              className=\"interface-edit-item\"\n              {...formItemLayout}\n              label={\n                <span>\n                  接口路径&nbsp;\n                  <Tooltip\n                    title={\n                      <div>\n                        <p>\n                          1. 支持动态路由,例如:\n                          {DEMOPATH}\n                        </p>\n                        <p>\n                          2. 支持 ?controller=xxx 的QueryRouter,非router的Query参数请定义到\n                          Request设置-&#62;Query\n                        </p>\n                      </div>\n                    }\n                  >\n                    <Icon type=\"question-circle-o\" style={{ width: '10px' }} />\n                  </Tooltip>\n                </span>\n              }\n            >\n              <InputGroup compact>\n                <Select\n                  value={this.state.method}\n                  onChange={this.onChangeMethod}\n                  style={{ width: '15%' }}\n                >\n                  {HTTP_METHOD_KEYS.map(item => {\n                    return (\n                      <Option key={item} value={item}>\n                        {item}\n                      </Option>\n                    );\n                  })}\n                </Select>\n\n                <Tooltip\n                  title=\"接口基本路径，可在 项目设置 里修改\"\n                  style={{\n                    display: this.props.basepath == '' ? 'block' : 'none'\n                  }}\n                >\n                  <Input\n                    disabled\n                    value={this.props.basepath}\n                    readOnly\n                    onChange={() => {}}\n                    style={{ width: '25%' }}\n                  />\n                </Tooltip>\n                {getFieldDecorator('path', {\n                  initialValue: this.state.path,\n                  rules: [\n                    {\n                      required: true,\n                      message: '请输入接口路径!'\n                    }\n                  ]\n                })(\n                  <Input onChange={this.handlePath} placeholder=\"/path\" style={{ width: '60%' }} />\n                )}\n              </InputGroup>\n              <Row className=\"interface-edit-item\">\n                <Col span={24} offset={0}>\n                  {paramsList}\n                </Col>\n              </Row>\n            </FormItem>\n            <FormItem className=\"interface-edit-item\" {...formItemLayout} label=\"Tag\">\n              {getFieldDecorator('tag', { initialValue: this.state.tag })(\n                <Select placeholder=\"请选择 tag \" mode=\"multiple\">\n                  {projectMsg.tag.map(item => {\n                    return (\n                      <Option value={item.name} key={item._id}>\n                        {item.name}\n                      </Option>\n                    );\n                  })}\n                  <Option value=\"tag设置\" disabled style={{ cursor: 'pointer', color: '#2395f1' }}>\n                    <Button type=\"primary\" onClick={this.props.onTagClick}>\n                      Tag设置\n                    </Button>\n                  </Option>\n                </Select>\n              )}\n            </FormItem>\n            <FormItem className=\"interface-edit-item\" {...formItemLayout} label=\"状态\">\n              {getFieldDecorator('status', { initialValue: this.state.status })(\n                <Select>\n                  <Option value=\"done\">已完成</Option>\n                  <Option value=\"undone\">未完成</Option>\n                </Select>\n              )}\n            </FormItem>\n            {custom_field.enable && (\n              <FormItem\n                className=\"interface-edit-item\"\n                {...formItemLayout}\n                label={custom_field.name}\n              >\n                {getFieldDecorator('custom_field_value', {\n                  initialValue: this.state.custom_field_value\n                })(<Input placeholder=\"请输入\" />)}\n              </FormItem>\n            )}\n          </div>\n\n          <h2 className=\"interface-title\">请求参数设置</h2>\n\n          <div className=\"container-radiogroup\">\n            <RadioGroup\n              value={this.state.req_radio_type}\n              size=\"large\"\n              className=\"radioGroup\"\n              onChange={this.changeRadioGroup}\n            >\n              {HTTP_METHOD[this.state.method].request_body ? (\n                <RadioButton value=\"req-body\">Body</RadioButton>\n              ) : null}\n              <RadioButton value=\"req-query\">Query</RadioButton>\n              <RadioButton value=\"req-headers\">Headers</RadioButton>\n            </RadioGroup>\n          </div>\n\n          <div className=\"panel-sub\">\n            <FormItem className={'interface-edit-item ' + this.state.hideTabs.req.query}>\n              <Row type=\"flex\" justify=\"space-around\">\n                <Col span={12}>\n                  <Button size=\"small\" type=\"primary\" onClick={() => this.addParams('req_query')}>\n                    添加Query参数\n                  </Button>\n                </Col>\n                <Col span={12}>\n                  <div className=\"bulk-import\" onClick={() => this.showBulk('req_query')}>\n                    批量添加\n                  </div>\n                </Col>\n              </Row>\n            </FormItem>\n\n            <Row className={'interface-edit-item ' + this.state.hideTabs.req.query}>\n              <Col>\n                <EasyDragSort\n                  data={() => this.props.form.getFieldValue('req_query')}\n                  onChange={this.handleDragMove('req_query')}\n                  onlyChild=\"easy_drag_sort_child\"\n                >\n                  {QueryList}\n                </EasyDragSort>\n              </Col>\n            </Row>\n\n            <FormItem className={'interface-edit-item ' + this.state.hideTabs.req.headers}>\n              <Button size=\"small\" type=\"primary\" onClick={() => this.addParams('req_headers')}>\n                添加Header\n              </Button>\n            </FormItem>\n\n            <Row className={'interface-edit-item ' + this.state.hideTabs.req.headers}>\n              <Col>\n                <EasyDragSort\n                  data={() => this.props.form.getFieldValue('req_headers')}\n                  onChange={this.handleDragMove('req_headers')}\n                  onlyChild=\"easy_drag_sort_child\"\n                >\n                  {headerList}\n                </EasyDragSort>\n              </Col>\n            </Row>\n            {HTTP_METHOD[this.state.method].request_body ? (\n              <div>\n                <FormItem className={'interface-edit-item ' + this.state.hideTabs.req.body}>\n                  {getFieldDecorator('req_body_type', {\n                    initialValue: this.state.req_body_type\n                  })(\n                    <RadioGroup>\n                      <Radio value=\"form\">form</Radio>\n                      <Radio value=\"json\">json</Radio>\n                      <Radio value=\"file\">file</Radio>\n                      <Radio value=\"raw\">raw</Radio>\n                    </RadioGroup>\n                  )}\n                </FormItem>\n\n                <Row\n                  className={\n                    'interface-edit-item ' +\n                    (this.props.form.getFieldValue('req_body_type') === 'form'\n                      ? this.state.hideTabs.req.body\n                      : 'hide')\n                  }\n                >\n                  <Col style={{ minHeight: '50px' }}>\n                    <Row type=\"flex\" justify=\"space-around\">\n                      <Col span=\"12\" className=\"interface-edit-item\">\n                        <Button\n                          size=\"small\"\n                          type=\"primary\"\n                          onClick={() => this.addParams('req_body_form')}\n                        >\n                          添加form参数\n                        </Button>\n                      </Col>\n                      <Col span=\"12\">\n                        <div className=\"bulk-import\" onClick={() => this.showBulk('req_body_form')}>\n                          批量添加\n                        </div>\n                      </Col>\n                    </Row>\n                    <EasyDragSort\n                      data={() => this.props.form.getFieldValue('req_body_form')}\n                      onChange={this.handleDragMove('req_body_form')}\n                      onlyChild=\"easy_drag_sort_child\"\n                    >\n                      {requestBodyList}\n                    </EasyDragSort>\n                  </Col>\n                </Row>\n              </div>\n            ) : null}\n\n            <Row\n              className={\n                'interface-edit-item ' +\n                (this.props.form.getFieldValue('req_body_type') === 'json'\n                  ? this.state.hideTabs.req.body\n                  : 'hide')\n              }\n            >\n              <span>\n                JSON-SCHEMA:&nbsp;\n                {!projectMsg.is_json5 && (\n                  <Tooltip title=\"项目 -> 设置 开启 json5\">\n                    <Icon type=\"question-circle-o\" />{' '}\n                  </Tooltip>\n                )}\n              </span>\n              {getFieldDecorator('req_body_is_json_schema', {\n                valuePropName: 'checked',\n                initialValue: this.state.req_body_is_json_schema || !projectMsg.is_json5\n              })(\n                <Switch\n                  checkedChildren=\"开\"\n                  unCheckedChildren=\"关\"\n                  disabled={!projectMsg.is_json5}\n                />\n              )}\n\n              <Col style={{ marginTop: '5px' }} className=\"interface-edit-json-info\">\n                {!this.props.form.getFieldValue('req_body_is_json_schema') ? (\n                  <span>\n                    基于 Json5, 参数描述信息用注释的方式实现{' '}\n                    <Tooltip title={<pre>{Json5Example}</pre>}>\n                      <Icon type=\"question-circle-o\" style={{ color: '#086dbf' }} />\n                    </Tooltip>\n                    “全局编辑”或 “退出全屏” 请按 F9\n                  </span>\n                ) : (\n                  <ReqBodySchema\n                    onChange={text => {\n                      this.setState({\n                        req_body_other: text\n                      });\n\n                      if (new Date().getTime() - this.startTime > 1000) {\n                        EditFormContext.props.changeEditStatus(true);\n                      }\n                    }}\n                    isMock={true}\n                    data={req_body_other_use_schema_editor}\n                  />\n                )}\n              </Col>\n              <Col>\n                {!this.props.form.getFieldValue('req_body_is_json_schema') && (\n                  <AceEditor\n                    className=\"interface-editor\"\n                    data={this.state.req_body_other}\n                    onChange={this.handleReqBody}\n                    fullScreen={true}\n                  />\n                )}\n              </Col>\n            </Row>\n\n            {this.props.form.getFieldValue('req_body_type') === 'file' &&\n            this.state.hideTabs.req.body !== 'hide' ? (\n              <Row className=\"interface-edit-item\">\n                <Col className=\"interface-edit-item-other-body\">\n                  {getFieldDecorator('req_body_other', {\n                    initialValue: this.state.req_body_other\n                  })(<TextArea placeholder=\"\" autosize={true} />)}\n                </Col>\n              </Row>\n            ) : null}\n            {this.props.form.getFieldValue('req_body_type') === 'raw' &&\n            this.state.hideTabs.req.body !== 'hide' ? (\n              <Row>\n                <Col>\n                  {getFieldDecorator('req_body_other', {\n                    initialValue: this.state.req_body_other\n                  })(<TextArea placeholder=\"\" autosize={{ minRows: 8 }} />)}\n                </Col>\n              </Row>\n            ) : null}\n          </div>\n\n          {/* ----------- Response ------------- */}\n\n          <h2 className=\"interface-title\">\n            返回数据设置&nbsp;\n            {!projectMsg.is_json5 && (\n              <Tooltip title=\"项目 -> 设置 开启 json5\">\n                <Icon type=\"question-circle-o\" className=\"tooltip\" />{' '}\n              </Tooltip>\n            )}\n            {getFieldDecorator('res_body_is_json_schema', {\n              valuePropName: 'checked',\n              initialValue: this.state.res_body_is_json_schema || !projectMsg.is_json5\n            })(\n              <Switch\n                checkedChildren=\"json-schema\"\n                unCheckedChildren=\"json\"\n                disabled={!projectMsg.is_json5}\n              />\n            )}\n          </h2>\n          <div className=\"container-radiogroup\">\n            {getFieldDecorator('res_body_type', {\n              initialValue: this.state.res_body_type\n            })(\n              <RadioGroup size=\"large\" className=\"radioGroup\">\n                <RadioButton value=\"json\">JSON</RadioButton>\n                <RadioButton value=\"raw\">RAW</RadioButton>\n              </RadioGroup>\n            )}\n          </div>\n          <div className=\"panel-sub\">\n            <Row\n              className=\"interface-edit-item\"\n              style={{\n                display:\n                  this.props.form.getFieldValue('res_body_type') === 'json' ? 'block' : 'none'\n              }}\n            >\n              <Col>\n                <Tabs size=\"large\" defaultActiveKey=\"tpl\" onChange={this.handleJsonType}>\n                  <TabPane tab=\"模板\" key=\"tpl\" />\n                  <TabPane tab=\"预览\" key=\"preview\" />\n                </Tabs>\n                <div style={{ marginTop: '10px' }}>\n                  {!this.props.form.getFieldValue('res_body_is_json_schema') ? (\n                    <div style={{ padding: '10px 0', fontSize: '15px' }}>\n                      <span>\n                        基于 mockjs 和 json5,使用注释方式写参数说明{' '}\n                        <Tooltip title={<pre>{Json5Example}</pre>}>\n                          <Icon type=\"question-circle-o\" style={{ color: '#086dbf' }} />\n                        </Tooltip>{' '}\n                        ,具体使用方法请{' '}\n                        <span\n                          className=\"href\"\n                          onClick={() =>\n                            window.open('https://hellosean1025.github.io/yapi/documents/mock.html', '_blank')\n                          }\n                        >\n                          查看文档\n                        </span>\n                      </span>\n                      ，“全局编辑”或 “退出全屏” 请按 <span style={{ fontWeight: '500' }}>F9</span>\n                    </div>\n                  ) : (\n                    <div style={{ display: this.state.jsonType === 'tpl' ? 'block' : 'none' }}>\n                      <ResBodySchema\n                        onChange={text => {\n                          this.setState({\n                            res_body: text\n                          });\n                          if (new Date().getTime() - this.startTime > 1000) {\n                            EditFormContext.props.changeEditStatus(true);\n                          }\n                        }}\n                        isMock={true}\n                        data={res_body_use_schema_editor}\n                      />\n                    </div>\n                  )}\n                  {!this.props.form.getFieldValue('res_body_is_json_schema') &&\n                    this.state.jsonType === 'tpl' && (\n                      <AceEditor\n                        className=\"interface-editor\"\n                        data={this.state.res_body}\n                        onChange={this.handleResBody}\n                        ref={editor => (this.resBodyEditor = editor)}\n                        fullScreen={true}\n                      />\n                    )}\n                  <div\n                    id=\"mock-preview\"\n                    style={{\n                      backgroundColor: '#eee',\n                      lineHeight: '20px',\n                      minHeight: '300px',\n                      display: this.state.jsonType === 'preview' ? 'block' : 'none'\n                    }}\n                  />\n                </div>\n              </Col>\n            </Row>\n\n            <Row\n              className=\"interface-edit-item\"\n              style={{\n                display: this.props.form.getFieldValue('res_body_type') === 'raw' ? 'block' : 'none'\n              }}\n            >\n              <Col>\n                {getFieldDecorator('res_body', {\n                  initialValue: this.state.res_body\n                })(<TextArea style={{ minHeight: '150px' }} placeholder=\"\" />)}\n              </Col>\n            </Row>\n          </div>\n\n          {/* ----------- remark ------------- */}\n\n          <h2 className=\"interface-title\">备 注</h2>\n          <div className=\"panel-sub\">\n            <FormItem className={'interface-edit-item'}>\n              <div>\n                <div id=\"desc\" style={{ lineHeight: '20px' }} className=\"remark-editor\" />\n              </div>\n            </FormItem>\n          </div>\n\n          {/* ----------- email ------------- */}\n          <h2 className=\"interface-title\">其 他</h2>\n          <div className=\"panel-sub\">\n            <FormItem\n              className={'interface-edit-item'}\n              {...formItemLayout}\n              label={\n                <span>\n                  消息通知&nbsp;\n                  <Tooltip title={'开启消息通知，可在 项目设置 里修改'}>\n                    <Icon type=\"question-circle-o\" style={{ width: '10px' }} />\n                  </Tooltip>\n                </span>\n              }\n            >\n              {getFieldDecorator('switch_notice', {\n                valuePropName: 'checked',\n                initialValue: this.props.noticed\n              })(<Switch checkedChildren=\"开\" unCheckedChildren=\"关\" />)}\n            </FormItem>\n            <FormItem\n              className={'interface-edit-item'}\n              {...formItemLayout}\n              label={\n                <span>\n                  开放接口&nbsp;\n                  <Tooltip title={'用户可以在 数据导出 时选择只导出公开接口'}>\n                    <Icon type=\"question-circle-o\" style={{ width: '10px' }} />\n                  </Tooltip>\n                </span>\n              }\n            >\n              {getFieldDecorator('api_opened', {\n                valuePropName: 'checked',\n                initialValue: this.state.api_opened\n              })(<Switch checkedChildren=\"开\" unCheckedChildren=\"关\" />)}\n            </FormItem>\n          </div>\n\n          <FormItem\n            className=\"interface-edit-item\"\n            style={{ textAlign: 'center', marginTop: '16px' }}\n          >\n            {/* <Button type=\"primary\" htmlType=\"submit\">保存1</Button> */}\n            <Affix offsetBottom={0}>\n              <Button\n                className=\"interface-edit-submit-button\"\n                disabled={this.state.submitStatus}\n                size=\"large\"\n                htmlType=\"submit\"\n              >\n                保存\n              </Button>\n            </Affix>\n          </FormItem>\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default Form.create({\n  onValuesChange() {\n    EditFormContext.props.changeEditStatus(true);\n  }\n})(InterfaceEditForm);\n"]}