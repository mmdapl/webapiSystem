{"version":3,"sources":["client\\containers\\Project\\Interface\\InterfaceCol\\InterfaceColContent.js"],"names":["Table","dnd","resolve","require","handleParams","crossRequest","handleCurrDomain","checkNameIsExistInArray","handleParamsValue","json_parse","ArrayToObject","Option","createContext","defaultModalStyle","top","handleReport","json","JSON","parse","e","InterfaceColContent","interfaceColList","state","interfaceCol","currColId","currCaseId","isShowCol","isRander","currCaseList","currProject","project","token","envList","curProjectRole","role","projectEnv","curUid","user","uid","fetchInterfaceColList","fetchCaseList","setColData","getToken","getEnv","fetchCaseEnvList","HTML5Backend","withRouter","props","handleChangeInterfaceCol","desc","name","params","col_id","axios","post","then","res","data","errcode","error","errmsg","project_id","match","id","success","handleReqHeader","req_header","case_env","envItem","_","find","item","_id","currDomain","env","header","forEach","abled","push","handleColdata","rows","currColEnvObj","that","newRows","draftRows","map","_test_status","test_status","req_headers","setState","executeTests","i","l","curitem","pre_script","after_script","concat","status","result","handleTest","code","console","reports","records","body","res_body","length","test_report","interfaceData","requestParams","options","handleValue","msg","validRes","interface_id","taskId","res_header","statusText","responseData","handleScriptTest","message","response","script","test_script","test","logs","val","global","globalValue","context","arrToObj","arr","obj","enable","type","value","onDrop","changes","index","onChangeTest","commonSetting","checkScript","content","d","text","handleInsertCode","aceEditor","editor","insertCode","changeCollapseClose","key","collapseKey","openReport","warn","visible","curCaseid","openAdv","findCase","enableScript","enable_script","curScript","advVisible","handleScriptChange","handleAdvCancel","handleAdvOk","handleCancel","currProjectEnvChange","envName","autoTests","autoVisible","handleAuto","email","download","mode","copyUrl","url","modeChange","emailChange","downloadChange","handleColEnvObj","str","envObj","handleCommonSetting","setting","log","commonSettingModalVisible","cancelCommonSetting","openCommonSetting","changeCommonFieldSetting","target","checkResponseField","hasPlugin","checkHttpCodeIs200","checkResponseSchema","onRow","bind","onMoveRow","handleColIdChange","newColId","payload","colData","componentWillMount","actionId","history","_crossRequestInterval","componentWillUnmount","clearInterval","row","rowId","onMove","sourceRowId","targetRowId","moveRows","componentWillReceiveProps","nextProps","isNaN","render","currProjectId","columns","property","label","style","width","cell","formatters","rowData","record","casename","substr","color","path","reportFun","components","Header","Row","resolvedColumns","columnChildren","resolvedRows","method","nested","localUrl","location","protocol","hostname","port","autoTestsUrl","col_name","col_desc","InsertCodeMap","cursor","title","display","margin","float","paddingTop","marginRight","marginTop","borderCollapse","headerRows","minHeight","Component","propTypes","PropTypes","object","array","func","number","bool","string"],"mappings":"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","file":"InterfaceColContent.js","sourceRoot":"C:/Users/DUOYI/Desktop/api/test/vendors","sourcesContent":["import React, { PureComponent as Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router';\nimport { Link } from 'react-router-dom';\n//import constants from '../../../../constants/variable.js'\nimport { Tooltip, Icon,Input, Button, Row, Col, Spin, Modal, message, Select, Switch } from 'antd';\nimport {\n  fetchInterfaceColList,\n  fetchCaseList,\n  setColData,\n  fetchCaseEnvList\n} from '../../../../reducer/modules/interfaceCol';\nimport HTML5Backend from 'react-dnd-html5-backend';\nimport { getToken, getEnv } from '../../../../reducer/modules/project';\nimport { DragDropContext } from 'react-dnd';\nimport AceEditor from 'client/components/AceEditor/AceEditor';\nimport * as Table from 'reactabular-table';\nimport * as dnd from 'reactabular-dnd';\nimport * as resolve from 'table-resolver';\nimport axios from 'axios';\nimport CaseReport from './CaseReport.js';\nimport _ from 'underscore';\nimport { initCrossRequest } from 'client/components/Postman/CheckCrossInstall.js';\nimport produce from 'immer';\nimport {InsertCodeMap} from 'client/components/Postman/Postman.js'\n\nconst {\n  handleParams,\n  crossRequest,\n  handleCurrDomain,\n  checkNameIsExistInArray\n} = require('common/postmanLib.js');\nconst { handleParamsValue, json_parse, ArrayToObject } = require('common/utils.js');\nimport CaseEnv from 'client/components/CaseEnv';\nimport Label from '../../../../components/Label/Label.js';\n\nconst Option = Select.Option;\nconst createContext = require('common/createContext')\n\nimport copy from 'copy-to-clipboard';\n\nconst defaultModalStyle = {\n  top: 10\n}\n\nfunction handleReport(json) {\n  try {\n    return JSON.parse(json);\n  } catch (e) {\n    return {};\n  }\n}\n\n@connect(\n  state => {\n    return {\n      interfaceColList: state.interfaceCol.interfaceColList,\n      currColId: state.interfaceCol.currColId,\n      currCaseId: state.interfaceCol.currCaseId,\n      isShowCol: state.interfaceCol.isShowCol,\n      isRander: state.interfaceCol.isRander,\n      currCaseList: state.interfaceCol.currCaseList,\n      currProject: state.project.currProject,\n      token: state.project.token,\n      envList: state.interfaceCol.envList,\n      curProjectRole: state.project.currProject.role,\n      projectEnv: state.project.projectEnv,\n      curUid: state.user.uid\n    };\n  },\n  {\n    fetchInterfaceColList,\n    fetchCaseList,\n    setColData,\n    getToken,\n    getEnv,\n    fetchCaseEnvList\n  }\n)\n@withRouter\n@DragDropContext(HTML5Backend)\nclass InterfaceColContent extends Component {\n  static propTypes = {\n    match: PropTypes.object,\n    interfaceColList: PropTypes.array,\n    fetchInterfaceColList: PropTypes.func,\n    fetchCaseList: PropTypes.func,\n    setColData: PropTypes.func,\n    history: PropTypes.object,\n    currCaseList: PropTypes.array,\n    currColId: PropTypes.number,\n    currCaseId: PropTypes.number,\n    isShowCol: PropTypes.bool,\n    isRander: PropTypes.bool,\n    currProject: PropTypes.object,\n    getToken: PropTypes.func,\n    token: PropTypes.string,\n    curProjectRole: PropTypes.string,\n    getEnv: PropTypes.func,\n    projectEnv: PropTypes.object,\n    fetchCaseEnvList: PropTypes.func,\n    envList: PropTypes.array,\n    curUid: PropTypes.number\n  };\n\n  constructor(props) {\n    super(props);\n    this.reports = {};\n    this.records = {};\n    this.state = {\n      rows: [],\n      reports: {},\n      visible: false,\n      curCaseid: null,\n      hasPlugin: false,\n\n      advVisible: false,\n      curScript: '',\n      enableScript: false,\n      autoVisible: false,\n      mode: 'html',\n      email: false,\n      download: false,\n      currColEnvObj: {},\n      collapseKey: '1',\n      commonSettingModalVisible: false,\n      commonSetting: {\n        checkHttpCodeIs200: false,\n        checkResponseField: {\n          name: 'code',\n          value: '0',\n          enable: false\n        },\n        checkResponseSchema: false,\n        checkScript:{\n          enable: false,\n          content: ''\n        }\n      }\n    };\n    this.onRow = this.onRow.bind(this);\n    this.onMoveRow = this.onMoveRow.bind(this);\n  }\n\n  async handleColIdChange(newColId){\n    this.props.setColData({\n      currColId: +newColId,\n      isShowCol: true,\n      isRander: false\n    });\n\n    let result = await this.props.fetchCaseList(newColId);\n    if (result.payload.data.errcode === 0) {\n      this.reports = handleReport(result.payload.data.colData.test_report);\n      this.setState({\n        commonSetting:{\n          ...this.state.commonSetting,\n          ...result.payload.data.colData\n        }\n      })\n    }\n\n    await this.props.fetchCaseList(newColId);\n    await this.props.fetchCaseEnvList(newColId);\n    this.changeCollapseClose();\n    this.handleColdata(this.props.currCaseList);\n  }\n\n  async componentWillMount() {\n    const result = await this.props.fetchInterfaceColList(this.props.match.params.id);\n    await this.props.getToken(this.props.match.params.id);\n    let { currColId } = this.props;\n    const params = this.props.match.params;\n    const { actionId } = params;\n    this.currColId = currColId = +actionId || result.payload.data.data[0]._id;\n    this.props.history.push('/project/' + params.id + '/interface/col/' + currColId);\n    if (currColId && currColId != 0) {\n      await this.handleColIdChange(currColId)\n    }\n\n    this._crossRequestInterval = initCrossRequest(hasPlugin => {\n      this.setState({ hasPlugin: hasPlugin });\n    });\n  }\n\n  componentWillUnmount() {\n    clearInterval(this._crossRequestInterval);\n  }\n\n  // 更新分类简介\n  handleChangeInterfaceCol = (desc, name) => {\n    let params = {\n      col_id: this.props.currColId,\n      name: name,\n      desc: desc\n    };\n\n    axios.post('/api/col/up_col', params).then(async res => {\n      if (res.data.errcode) {\n        return message.error(res.data.errmsg);\n      }\n      let project_id = this.props.match.params.id;\n      await this.props.fetchInterfaceColList(project_id);\n      message.success('接口集合简介更新成功');\n    });\n  };\n\n  // 整合header信息\n  handleReqHeader = (project_id, req_header, case_env) => {\n    let envItem = _.find(this.props.envList, item => {\n      return item._id === project_id;\n    });\n\n    let currDomain = handleCurrDomain(envItem && envItem.env, case_env);\n    let header = currDomain.header;\n    header.forEach(item => {\n      if (!checkNameIsExistInArray(item.name, req_header)) {\n        // item.abled = true;\n        item = {\n          ...item,\n          abled: true\n        };\n        req_header.push(item);\n      }\n    });\n    return req_header;\n  };\n\n  handleColdata = (rows, currColEnvObj = {}) => {\n    let that = this;\n    let newRows = produce(rows, draftRows => {\n      draftRows.map(item => {\n        item.id = item._id;\n        item._test_status = item.test_status;\n        if(currColEnvObj[item.project_id]){\n          item.case_env =currColEnvObj[item.project_id];\n        }\n        item.req_headers = that.handleReqHeader(item.project_id, item.req_headers, item.case_env);\n        return item;\n      });\n    });\n    this.setState({ rows: newRows });\n  };\n\n  executeTests = async () => {\n    for (let i = 0, l = this.state.rows.length, newRows, curitem; i < l; i++) {\n      let { rows } = this.state;\n\n      let envItem = _.find(this.props.envList, item => {\n        return item._id === rows[i].project_id;\n      });\n\n      curitem = Object.assign(\n        {},\n        rows[i],\n        {\n          env: envItem.env,\n          pre_script: this.props.currProject.pre_script,\n          after_script: this.props.currProject.after_script\n        },\n        { test_status: 'loading' }\n      );\n      newRows = [].concat([], rows);\n      newRows[i] = curitem;\n      this.setState({ rows: newRows });\n      let status = 'error',\n        result;\n      try {\n        result = await this.handleTest(curitem);\n\n        if (result.code === 400) {\n          status = 'error';\n        } else if (result.code === 0) {\n          status = 'ok';\n        } else if (result.code === 1) {\n          status = 'invalid';\n        }\n      } catch (e) {\n        console.error(e);\n        status = 'error';\n        result = e;\n      }\n\n      //result.body = result.data;\n      this.reports[curitem._id] = result;\n      this.records[curitem._id] = {\n        status: result.status,\n        params: result.params,\n        body: result.res_body\n      };\n\n      curitem = Object.assign({}, rows[i], { test_status: status });\n      newRows = [].concat([], rows);\n      newRows[i] = curitem;\n      this.setState({ rows: newRows });\n    }\n    await axios.post('/api/col/up_col', {\n      col_id: this.props.currColId,\n      test_report: JSON.stringify(this.reports)\n    });\n  };\n\n  handleTest = async interfaceData => {\n    let requestParams = {};\n    let options = handleParams(interfaceData, this.handleValue, requestParams);\n\n    let result = {\n      code: 400,\n      msg: '数据异常',\n      validRes: []\n    };\n\n    try {\n      let data = await crossRequest(options, interfaceData.pre_script, interfaceData.after_script, createContext(\n        this.props.curUid,\n        this.props.match.params.id,\n        interfaceData.interface_id\n      ));\n      options.taskId = this.props.curUid;\n      let res = (data.res.body = json_parse(data.res.body));\n      result = {\n        ...options,\n        ...result,\n        res_header: data.res.header,\n        res_body: res,\n        status: data.res.status,\n        statusText: data.res.statusText\n      };\n\n      if (options.data && typeof options.data === 'object') {\n        requestParams = {\n          ...requestParams,\n          ...options.data\n        };\n      }\n\n      let validRes = [];\n\n      let responseData = Object.assign(\n        {},\n        {\n          status: data.res.status,\n          body: res,\n          header: data.res.header,\n          statusText: data.res.statusText\n        }\n      );\n\n      // 断言测试\n      await this.handleScriptTest(interfaceData, responseData, validRes, requestParams);\n\n      if (validRes.length === 0) {\n        result.code = 0;\n        result.validRes = [\n          {\n            message: '验证通过'\n          }\n        ];\n      } else if (validRes.length > 0) {\n        result.code = 1;\n        result.validRes = validRes;\n      }\n    } catch (data) {\n      result = {\n        ...options,\n        ...result,\n        res_header: data.header,\n        res_body: data.body || data.message,\n        status: 0,\n        statusText: data.message,\n        code: 400,\n        validRes: [\n          {\n            message: data.message\n          }\n        ]\n      };\n    }\n\n    result.params = requestParams;\n    return result;\n  };\n\n  //response, validRes\n  // 断言测试\n  handleScriptTest = async (interfaceData, response, validRes, requestParams) => {\n    // 是否启动断言\n    try {\n      let test = await axios.post('/api/col/run_script', {\n        response: response,\n        records: this.records,\n        script: interfaceData.test_script,\n        params: requestParams,\n        col_id: this.props.currColId,\n        interface_id: interfaceData.interface_id\n      });\n      if (test.data.errcode !== 0) {\n        test.data.data.logs.forEach(item => {\n          validRes.push({ message: item });\n        });\n      }\n    } catch (err) {\n      validRes.push({\n        message: 'Error: ' + err.message\n      });\n    }\n  };\n\n  handleValue = (val, global) => {\n    let globalValue = ArrayToObject(global);\n    let context = Object.assign({}, { global: globalValue }, this.records);\n    return handleParamsValue(val, context);\n  };\n\n  arrToObj = (arr, requestParams) => {\n    arr = arr || [];\n    const obj = {};\n    arr.forEach(item => {\n      if (item.name && item.enable && item.type !== 'file') {\n        obj[item.name] = this.handleValue(item.value);\n        if (requestParams) {\n          requestParams[item.name] = obj[item.name];\n        }\n      }\n    });\n    return obj;\n  };\n\n  onRow(row) {\n    return { rowId: row.id, onMove: this.onMoveRow, onDrop: this.onDrop };\n  }\n\n  onDrop = () => {\n    let changes = [];\n    this.state.rows.forEach((item, index) => {\n      changes.push({ id: item._id, index: index });\n    });\n    axios.post('/api/col/up_case_index', changes).then(() => {\n      this.props.fetchInterfaceColList(this.props.match.params.id);\n    });\n  };\n  onMoveRow({ sourceRowId, targetRowId }) {\n    let rows = dnd.moveRows({ sourceRowId, targetRowId })(this.state.rows);\n\n    if (rows) {\n      this.setState({ rows });\n    }\n  }\n\n  onChangeTest = d => {\n    \n    this.setState({\n      commonSetting: {\n        ...this.state.commonSetting,\n        checkScript: {\n          ...this.state.commonSetting.checkScript,\n          content: d.text\n        }\n      }\n    });\n  };\n\n  handleInsertCode = code => {\n    this.aceEditor.editor.insertCode(code);\n  };\n\n  async componentWillReceiveProps(nextProps) {\n    let newColId = !isNaN(nextProps.match.params.actionId) ? +nextProps.match.params.actionId : 0;\n\n    if ((newColId && this.currColId && newColId !== this.currColId) || nextProps.isRander) {\n      this.currColId = newColId;\n      this.handleColIdChange(newColId)\n    }\n  }\n\n  // 测试用例环境面板折叠\n  changeCollapseClose = key => {\n    if (key) {\n      this.setState({\n        collapseKey: key\n      });\n    } else {\n      this.setState({\n        collapseKey: '1',\n        currColEnvObj: {}\n      });\n    }\n  };\n\n  openReport = id => {\n    if (!this.reports[id]) {\n      return message.warn('还没有生成报告');\n    }\n    this.setState({ visible: true, curCaseid: id });\n  };\n\n  openAdv = id => {\n    let findCase = _.find(this.props.currCaseList, item => item.id === id);\n\n    this.setState({\n      enableScript: findCase.enable_script,\n      curScript: findCase.test_script,\n      advVisible: true,\n      curCaseid: id\n    });\n  };\n\n  handleScriptChange = d => {\n    this.setState({ curScript: d.text });\n  };\n\n  handleAdvCancel = () => {\n    this.setState({ advVisible: false });\n  };\n\n  handleAdvOk = async () => {\n    const { curCaseid, enableScript, curScript } = this.state;\n    const res = await axios.post('/api/col/up_case', {\n      id: curCaseid,\n      test_script: curScript,\n      enable_script: enableScript\n    });\n    if (res.data.errcode === 0) {\n      message.success('更新成功');\n    }\n    this.setState({ advVisible: false });\n    let currColId = this.currColId;\n    this.props.setColData({\n      currColId: +currColId,\n      isShowCol: true,\n      isRander: false\n    });\n    await this.props.fetchCaseList(currColId);\n\n    this.handleColdata(this.props.currCaseList);\n  };\n\n  handleCancel = () => {\n    this.setState({ visible: false });\n  };\n\n  currProjectEnvChange = (envName, project_id) => {\n    let currColEnvObj = {\n      ...this.state.currColEnvObj,\n      [project_id]: envName\n    };\n    this.setState({ currColEnvObj });\n   // this.handleColdata(this.props.currCaseList, envName, project_id);\n   this.handleColdata(this.props.currCaseList,currColEnvObj);\n  };\n\n  autoTests = () => {\n    this.setState({ autoVisible: true, currColEnvObj: {}, collapseKey: '' });\n  };\n\n  handleAuto = () => {\n    this.setState({\n      autoVisible: false,\n      email: false,\n      download: false,\n      mode: 'html',\n      currColEnvObj: {},\n      collapseKey: ''\n    });\n  };\n\n  copyUrl = url => {\n    copy(url);\n    message.success('已经成功复制到剪切板');\n  };\n\n  modeChange = mode => {\n    this.setState({ mode });\n  };\n\n  emailChange = email => {\n    this.setState({ email });\n  };\n\n  downloadChange = download => {\n    this.setState({ download });\n  };\n\n  handleColEnvObj = envObj => {\n    let str = '';\n    for (let key in envObj) {\n      str += envObj[key] ? `&env_${key}=${envObj[key]}` : '';\n    }\n    return str;\n  };\n\n  handleCommonSetting = ()=>{\n    let setting = this.state.commonSetting;\n\n    let params = {\n      col_id: this.props.currColId,\n      ...setting\n\n    };\n    console.log(params)\n\n    axios.post('/api/col/up_col', params).then(async res => {\n      if (res.data.errcode) {\n        return message.error(res.data.errmsg);\n      }\n      message.success('配置测试集成功');\n    });\n\n    this.setState({\n      commonSettingModalVisible: false\n    })\n  }\n\n  cancelCommonSetting = ()=>{\n    this.setState({\n      commonSettingModalVisible: false\n    })\n  }\n\n  openCommonSetting = ()=>{\n    this.setState({\n      commonSettingModalVisible: true\n    })\n  }\n\n  changeCommonFieldSetting = (key)=>{\n    return (e)=>{\n      let value = e;\n      if(typeof e === 'object' && e){\n        value = e.target.value;\n      }\n      let {checkResponseField} = this.state.commonSetting;\n      this.setState({\n        commonSetting: {\n          ...this.state.commonSetting,\n          checkResponseField: {\n            ...checkResponseField,\n            [key]: value\n          }\n        }\n      })\n    }\n  }\n  \n  render() {\n    const currProjectId = this.props.currProject._id;\n    const columns = [\n      {\n        property: 'casename',\n        header: {\n          label: '用例名称'\n        },\n        props: {\n          style: {\n            width: '250px'\n          }\n        },\n        cell: {\n          formatters: [\n            (text, { rowData }) => {\n              let record = rowData;\n              return (\n                <Link to={'/project/' + currProjectId + '/interface/case/' + record._id}>\n                  {record.casename.length > 23\n                    ? record.casename.substr(0, 20) + '...'\n                    : record.casename}\n                </Link>\n              );\n            }\n          ]\n        }\n      },\n      {\n        header: {\n          label: 'key',\n          formatters: [\n            () => {\n              return (\n                <Tooltip\n                  title={\n                    <span>\n                      {' '}\n                      每个用例都有唯一的key，用于获取所匹配接口的响应数据，例如使用{' '}\n                      <a\n                        href=\"https://hellosean1025.github.io/yapi/documents/case.html#%E7%AC%AC%E4%BA%8C%E6%AD%A5%EF%BC%8C%E7%BC%96%E8%BE%91%E6%B5%8B%E8%AF%95%E7%94%A8%E4%BE%8B\"\n                        className=\"link-tooltip\"\n                        target=\"blank\"\n                      >\n                        {' '}\n                        变量参数{' '}\n                      </a>{' '}\n                      功能{' '}\n                    </span>\n                  }\n                >\n                  Key\n                </Tooltip>\n              );\n            }\n          ]\n        },\n        props: {\n          style: {\n            width: '100px'\n          }\n        },\n        cell: {\n          formatters: [\n            (value, { rowData }) => {\n              return <span>{rowData._id}</span>;\n            }\n          ]\n        }\n      },\n      {\n        property: 'test_status',\n        header: {\n          label: '状态'\n        },\n        props: {\n          style: {\n            width: '100px'\n          }\n        },\n        cell: {\n          formatters: [\n            (value, { rowData }) => {\n              let id = rowData._id;\n              let code = this.reports[id] ? this.reports[id].code : 0;\n              if (rowData.test_status === 'loading') {\n                return (\n                  <div>\n                    <Spin />\n                  </div>\n                );\n              }\n\n              switch (code) {\n                case 0:\n                  return (\n                    <div>\n                      <Tooltip title=\"Pass\">\n                        <Icon\n                          style={{\n                            color: '#00a854'\n                          }}\n                          type=\"check-circle\"\n                        />\n                      </Tooltip>\n                    </div>\n                  );\n                case 400:\n                  return (\n                    <div>\n                      <Tooltip title=\"请求异常\">\n                        <Icon\n                          type=\"info-circle\"\n                          style={{\n                            color: '#f04134'\n                          }}\n                        />\n                      </Tooltip>\n                    </div>\n                  );\n                case 1:\n                  return (\n                    <div>\n                      <Tooltip title=\"验证失败\">\n                        <Icon\n                          type=\"exclamation-circle\"\n                          style={{\n                            color: '#ffbf00'\n                          }}\n                        />\n                      </Tooltip>\n                    </div>\n                  );\n                default:\n                  return (\n                    <div>\n                      <Icon\n                        style={{\n                          color: '#00a854'\n                        }}\n                        type=\"check-circle\"\n                      />\n                    </div>\n                  );\n              }\n            }\n          ]\n        }\n      },\n      {\n        property: 'path',\n        header: {\n          label: '接口路径'\n        },\n        cell: {\n          formatters: [\n            (text, { rowData }) => {\n              let record = rowData;\n              return (\n                <Tooltip title=\"跳转到对应接口\">\n                  <Link to={`/project/${record.project_id}/interface/api/${record.interface_id}`}>\n                    {record.path.length > 23 ? record.path + '...' : record.path}\n                  </Link>\n                </Tooltip>\n              );\n            }\n          ]\n        }\n      },\n      {\n        header: {\n          label: '测试报告'\n        },\n        props: {\n          style: {\n            width: '200px'\n          }\n        },\n        cell: {\n          formatters: [\n            (text, { rowData }) => {\n              let reportFun = () => {\n                if (!this.reports[rowData.id]) {\n                  return null;\n                }\n                return <Button onClick={() => this.openReport(rowData.id)}>测试报告</Button>;\n              };\n              return <div className=\"interface-col-table-action\">{reportFun()}</div>;\n            }\n          ]\n        }\n      }\n    ];\n    const { rows } = this.state;\n    const components = {\n      header: {\n        cell: dnd.Header\n      },\n      body: {\n        row: dnd.Row\n      }\n    };\n    const resolvedColumns = resolve.columnChildren({ columns });\n    const resolvedRows = resolve.resolve({ columns: resolvedColumns, method: resolve.nested })(\n      rows\n    );\n\n    const localUrl =\n      location.protocol +\n      '//' +\n      location.hostname +\n      (location.port !== '' ? ':' + location.port : '');\n    let currColEnvObj = this.handleColEnvObj(this.state.currColEnvObj);\n    const autoTestsUrl = `/api/open/run_auto_test?id=${this.props.currColId}&token=${\n      this.props.token\n    }${currColEnvObj ? currColEnvObj : ''}&mode=${this.state.mode}&email=${\n      this.state.email\n    }&download=${this.state.download}`;\n\n    let col_name = '';\n    let col_desc = '';\n\n    for (var i = 0; i < this.props.interfaceColList.length; i++) {\n      if (this.props.interfaceColList[i]._id === this.props.currColId) {\n        col_name = this.props.interfaceColList[i].name;\n        col_desc = this.props.interfaceColList[i].desc;\n        break;\n      }\n    }\n\n    return (\n      <div className=\"interface-col\">\n        <Modal\n            title=\"通用规则配置\"\n            visible={this.state.commonSettingModalVisible}\n            onOk={this.handleCommonSetting}\n            onCancel={this.cancelCommonSetting}\n            width={'1000px'}\n            style={defaultModalStyle}\n          >\n          <div className=\"common-setting-modal\">\n            <Row className=\"setting-item\">\n              <Col className=\"col-item\" span=\"4\">\n                <label>检查HttpCode:&nbsp;<Tooltip title={'检查 http code 是否为 200'}>\n                  <Icon type=\"question-circle-o\" style={{ width: '10px' }} />\n                </Tooltip></label>\n              </Col>\n              <Col className=\"col-item\"  span=\"18\">\n                <Switch onChange={e=>{\n                  let {commonSetting} = this.state;\n                  this.setState({\n                    commonSetting :{\n                      ...commonSetting,\n                      checkHttpCodeIs200: e\n                    }\n                  })\n                }} checked={this.state.commonSetting.checkHttpCodeIs200}  checkedChildren=\"开\" unCheckedChildren=\"关\" />\n              </Col>\n            </Row>\n\n            <Row className=\"setting-item\">\n              <Col className=\"col-item\"  span=\"4\">\n                <label>检查返回json:&nbsp;<Tooltip title={'检查接口返回数据字段值，比如检查 code 是不是等于 0'}>\n                  <Icon type=\"question-circle-o\" style={{ width: '10px' }} />\n                </Tooltip></label>\n              </Col>\n              <Col  className=\"col-item\" span=\"6\">\n                <Input value={this.state.commonSetting.checkResponseField.name} onChange={this.changeCommonFieldSetting('name')} placeholder=\"字段名\"  />\n              </Col>\n              <Col  className=\"col-item\" span=\"6\">\n                <Input  onChange={this.changeCommonFieldSetting('value')}  value={this.state.commonSetting.checkResponseField.value}   placeholder=\"值\"  />\n              </Col>\n              <Col  className=\"col-item\" span=\"6\">\n                <Switch  onChange={this.changeCommonFieldSetting('enable')}  checked={this.state.commonSetting.checkResponseField.enable}  checkedChildren=\"开\" unCheckedChildren=\"关\"  />\n              </Col>\n            </Row>\n\n            <Row className=\"setting-item\">\n              <Col className=\"col-item\" span=\"4\">\n                <label>检查返回数据结构:&nbsp;<Tooltip title={'只有 response 基于 json-schema 方式定义，该检查才会生效'}>\n                  <Icon type=\"question-circle-o\" style={{ width: '10px' }} />\n                </Tooltip></label>\n              </Col>\n              <Col className=\"col-item\"  span=\"18\">\n                <Switch onChange={e=>{\n                  let {commonSetting} = this.state;\n                  this.setState({\n                    commonSetting :{\n                      ...commonSetting,\n                      checkResponseSchema: e\n                    }\n                  })\n                }} checked={this.state.commonSetting.checkResponseSchema}  checkedChildren=\"开\" unCheckedChildren=\"关\" />\n              </Col>\n            </Row>\n\n            <Row className=\"setting-item\">\n              <Col className=\"col-item  \" span=\"4\">\n                <label>全局测试脚本:&nbsp;<Tooltip title={'在跑自动化测试时，优先调用全局脚本，只有全局脚本通过测试，才会开始跑case自定义的测试脚本'}>\n                  <Icon type=\"question-circle-o\" style={{ width: '10px' }} />\n                </Tooltip></label>\n              </Col>\n              <Col className=\"col-item\"  span=\"14\">\n                <div><Switch onChange={e=>{\n                  let {commonSetting} = this.state;\n                  this.setState({\n                    commonSetting :{\n                      ...commonSetting,\n                      checkScript: {\n                        ...this.state.checkScript,\n                        enable: e\n                      }\n                    }\n                  })\n                }} checked={this.state.commonSetting.checkScript.enable}  checkedChildren=\"开\" unCheckedChildren=\"关\"  /></div>\n                <AceEditor\n                  onChange={this.onChangeTest}\n                  className=\"case-script\"\n                  data={this.state.commonSetting.checkScript.content}\n                  ref={aceEditor => {\n                    this.aceEditor = aceEditor;\n                  }}\n                />\n              </Col>\n              <Col span=\"6\">\n                <div className=\"insert-code\">\n                  {InsertCodeMap.map(item => {\n                    return (\n                      <div\n                        style={{ cursor: 'pointer' }}\n                        className=\"code-item\"\n                        key={item.title}\n                        onClick={() => {\n                          this.handleInsertCode('\\n' + item.code);\n                        }}\n                      >\n                        {item.title}\n                      </div>\n                    );\n                  })}\n                </div>\n              </Col>\n            </Row>\n\n\n          </div>\n        </Modal>\n        <Row type=\"flex\" justify=\"center\" align=\"top\">\n          <Col span={5}>\n            <h2\n              className=\"interface-title\"\n              style={{\n                display: 'inline-block',\n                margin: '8px 20px 16px 0px'\n              }}\n            >\n              测试集合&nbsp;<a\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                href=\"https://hellosean1025.github.io/yapi/documents/case.html\"\n              >\n                <Tooltip title=\"点击查看文档\">\n                  <Icon type=\"question-circle-o\" />\n                </Tooltip>\n              </a>\n            </h2>\n          </Col>\n          <Col span={10}>\n            <CaseEnv\n              envList={this.props.envList}\n              currProjectEnvChange={this.currProjectEnvChange}\n              envValue={this.state.currColEnvObj}\n              collapseKey={this.state.collapseKey}\n              changeClose={this.changeCollapseClose}\n            />\n          </Col>\n          <Col span={9}>\n            {this.state.hasPlugin ? (\n              <div\n                style={{\n                  float: 'right',\n                  paddingTop: '8px'\n                }}\n              >\n                {this.props.curProjectRole !== 'guest' && (\n                  <Tooltip title=\"在 YApi 服务端跑自动化测试，测试环境不能为私有网络，请确保 YApi 服务器可以访问到自动化测试环境domain\">\n                    <Button\n                      style={{\n                        marginRight: '8px'\n                      }}\n                      onClick={this.autoTests}\n                    >\n                      服务端测试\n                    </Button>\n                  </Tooltip>\n                )}\n                <Button onClick={this.openCommonSetting} style={{\n                        marginRight: '8px'\n                      }} >通用规则配置</Button>\n                &nbsp;\n                <Button type=\"primary\" onClick={this.executeTests}>\n                  开始测试\n                </Button>\n              </div>\n            ) : (\n              <Tooltip title=\"请安装 cross-request Chrome 插件\">\n                <Button\n                  disabled\n                  type=\"primary\"\n                  style={{\n                    float: 'right',\n                    marginTop: '8px'\n                  }}\n                >\n                  开始测试\n                </Button>\n              </Tooltip>\n            )}\n          </Col>\n        </Row>\n\n        <div className=\"component-label-wrapper\">\n          <Label onChange={val => this.handleChangeInterfaceCol(val, col_name)} desc={col_desc} />\n        </div>\n\n        <Table.Provider\n          components={components}\n          columns={resolvedColumns}\n          style={{\n            width: '100%',\n            borderCollapse: 'collapse'\n          }}\n        >\n          <Table.Header\n            className=\"interface-col-table-header\"\n            headerRows={resolve.headerRows({ columns })}\n          />\n\n          <Table.Body\n            className=\"interface-col-table-body\"\n            rows={resolvedRows}\n            rowKey=\"id\"\n            onRow={this.onRow}\n          />\n        </Table.Provider>\n        <Modal\n          title=\"测试报告\"\n          width=\"900px\"\n          style={{\n            minHeight: '500px'\n          }}\n          visible={this.state.visible}\n          onCancel={this.handleCancel}\n          footer={null}\n        >\n          <CaseReport {...this.reports[this.state.curCaseid]} />\n        </Modal>\n\n        <Modal\n          title=\"自定义测试脚本\"\n          width=\"660px\"\n          style={{\n            minHeight: '500px'\n          }}\n          visible={this.state.advVisible}\n          onCancel={this.handleAdvCancel}\n          onOk={this.handleAdvOk}\n          maskClosable={false}\n        >\n          <h3>\n            是否开启:&nbsp;\n            <Switch\n              checked={this.state.enableScript}\n              onChange={e => this.setState({ enableScript: e })}\n            />\n          </h3>\n          <AceEditor\n            className=\"case-script\"\n            data={this.state.curScript}\n            onChange={this.handleScriptChange}\n          />\n        </Modal>\n        {this.state.autoVisible && (\n          <Modal\n            title=\"服务端自动化测试\"\n            width=\"780px\"\n            style={{\n              minHeight: '500px'\n            }}\n            visible={this.state.autoVisible}\n            onCancel={this.handleAuto}\n            className=\"autoTestsModal\"\n            footer={null}\n          >\n            <Row type=\"flex\" justify=\"space-around\" className=\"row\" align=\"top\">\n              <Col span={3} className=\"label\" style={{ paddingTop: '16px' }}>\n                选择环境\n                <Tooltip title=\"默认使用测试用例选择的环境\">\n                  <Icon type=\"question-circle-o\" />\n                </Tooltip>\n                &nbsp;：\n              </Col>\n              <Col span={21}>\n                <CaseEnv\n                  envList={this.props.envList}\n                  currProjectEnvChange={this.currProjectEnvChange}\n                  envValue={this.state.currColEnvObj}\n                  collapseKey={this.state.collapseKey}\n                  changeClose={this.changeCollapseClose}\n                />\n              </Col>\n            </Row>\n            <Row type=\"flex\" justify=\"space-around\" className=\"row\" align=\"middle\">\n              <Col span={3} className=\"label\">\n                输出格式：\n              </Col>\n              <Col span={21}>\n                <Select value={this.state.mode} onChange={this.modeChange}>\n                  <Option key=\"html\" value=\"html\">\n                    html\n                  </Option>\n                  <Option key=\"json\" value=\"json\">\n                    json\n                  </Option>\n                </Select>\n              </Col>\n            </Row>\n            <Row type=\"flex\" justify=\"space-around\" className=\"row\" align=\"middle\">\n              <Col span={3} className=\"label\">\n                消息通知\n                <Tooltip title={'测试不通过时，会给项目组成员发送消息通知'}>\n                  <Icon\n                    type=\"question-circle-o\"\n                    style={{\n                      width: '10px'\n                    }}\n                  />\n                </Tooltip>\n                &nbsp;：\n              </Col>\n              <Col span={21}>\n                <Switch\n                  checked={this.state.email}\n                  checkedChildren=\"开\"\n                  unCheckedChildren=\"关\"\n                  onChange={this.emailChange}\n                />\n              </Col>\n            </Row>\n            <Row type=\"flex\" justify=\"space-around\" className=\"row\" align=\"middle\">\n              <Col span={3} className=\"label\">\n                下载数据\n                <Tooltip title={'开启后，测试数据将被下载到本地'}>\n                  <Icon\n                    type=\"question-circle-o\"\n                    style={{\n                      width: '10px'\n                    }}\n                  />\n                </Tooltip>\n                &nbsp;：\n              </Col>\n              <Col span={21}>\n                <Switch\n                  checked={this.state.download}\n                  checkedChildren=\"开\"\n                  unCheckedChildren=\"关\"\n                  onChange={this.downloadChange}\n                />\n              </Col>\n            </Row>\n            <Row type=\"flex\" justify=\"space-around\" className=\"row\" align=\"middle\">\n              <Col span={21} className=\"autoTestUrl\">\n                <a \n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  href={localUrl + autoTestsUrl} >\n                  {autoTestsUrl}\n                </a>\n              </Col>\n              <Col span={3}>\n                <Button className=\"copy-btn\" onClick={() => this.copyUrl(localUrl + autoTestsUrl)}>\n                  复制\n                </Button>\n              </Col>\n            </Row>\n            <div className=\"autoTestMsg\">\n              注：访问该URL，可以测试所有用例，请确保YApi服务器可以访问到环境配置的 domain\n            </div>\n          </Modal>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default InterfaceColContent;\n"]}