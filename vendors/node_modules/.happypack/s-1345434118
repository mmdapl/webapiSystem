'use strict';

exports.__esModule = true;

var _card = require('antd/lib/card');

var _card2 = _interopRequireDefault(_card);

var _button = require('antd/lib/button');

var _button2 = _interopRequireDefault(_button);

var _switch = require('antd/lib/switch');

var _switch2 = _interopRequireDefault(_switch);

var _tooltip = require('antd/lib/tooltip');

var _tooltip2 = _interopRequireDefault(_tooltip);

var _icon = require('antd/lib/icon');

var _icon2 = _interopRequireDefault(_icon);

var _row = require('antd/lib/row');

var _row2 = _interopRequireDefault(_row);

var _col = require('antd/lib/col');

var _col2 = _interopRequireDefault(_col);

var _promise = require('babel-runtime/core-js/promise');

var _promise2 = _interopRequireDefault(_promise);

var _alert = require('antd/lib/alert');

var _alert2 = _interopRequireDefault(_alert);

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _message2 = require('antd/lib/message');

var _message3 = _interopRequireDefault(_message2);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _modal = require('antd/lib/modal');

var _modal2 = _interopRequireDefault(_modal);

var _input = require('antd/lib/input');

var _input2 = _interopRequireDefault(_input);

var _dec, _class, _class2, _temp;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactRedux = require('react-redux');

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _news = require('../../../reducer/modules/news.js');

var _group = require('../../../reducer/modules/group.js');

var _common = require('../../../common.js');

var _underscore = require('underscore');

var _underscore2 = _interopRequireDefault(_underscore);

require('./GroupSetting.scss');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var TextArea = _input2.default.TextArea;

var confirm = _modal2.default.confirm;

var GroupSetting = (_dec = (0, _reactRedux.connect)(function (state) {
  return {
    groupList: state.group.groupList,
    currGroup: state.group.currGroup,
    curUserRole: state.user.role
  };
}, {
  changeGroupMsg: _group.changeGroupMsg,
  fetchGroupList: _group.fetchGroupList,
  setCurrGroup: _group.setCurrGroup,
  fetchGroupMsg: _group.fetchGroupMsg,
  fetchNewsData: _news.fetchNewsData,
  updateGroupList: _group.updateGroupList,
  deleteGroup: _group.deleteGroup
}), _dec(_class = (_temp = _class2 = function (_Component) {
  (0, _inherits3.default)(GroupSetting, _Component);

  function GroupSetting(props) {
    var _this2 = this;

    (0, _classCallCheck3.default)(this, GroupSetting);

    var _this = (0, _possibleConstructorReturn3.default)(this, _Component.call(this, props));

    _this.changeName = function (e) {
      _this.setState({
        currGroupName: e.target.value
      });
    };

    _this.changeDesc = function (e) {
      _this.setState({
        currGroupDesc: e.target.value
      });
    };

    _this.changeCustomName = function (e) {
      var custom_field1_rule = _this.state.custom_field1_enable ? !e.target.value : false;
      _this.setState({
        custom_field1_name: e.target.value,
        custom_field1_rule: custom_field1_rule
      });
    };

    _this.changeCustomEnable = function (e) {
      var custom_field1_rule = e ? !_this.state.custom_field1_name : false;
      _this.setState({
        custom_field1_enable: e,
        custom_field1_rule: custom_field1_rule
      });
    };

    _this.toggleDangerOptions = function () {
      // console.log(this.state.showDangerOptions);
      _this.setState({
        showDangerOptions: !_this.state.showDangerOptions
      });
    };

    _this.editGroup = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee() {
      var id, res, currGroup;
      return _regenerator2.default.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              id = _this.props.currGroup._id;

              if (!_this.state.custom_field1_rule) {
                _context.next = 3;
                break;
              }

              return _context.abrupt('return');

            case 3:
              _context.next = 5;
              return _this.props.changeGroupMsg({
                group_name: _this.state.currGroupName,
                group_desc: _this.state.currGroupDesc,
                custom_field1: {
                  name: _this.state.custom_field1_name,
                  enable: _this.state.custom_field1_enable
                },
                id: _this.props.currGroup._id
              });

            case 5:
              res = _context.sent;

              if (res.payload.data.errcode) {
                _context.next = 15;
                break;
              }

              _message3.default.success('修改成功！');
              _context.next = 10;
              return _this.props.fetchGroupList(_this.props.groupList);

            case 10:
              _this.props.updateGroupList(_this.props.groupList);
              currGroup = _underscore2.default.find(_this.props.groupList, function (group) {
                return +group._id === +id;
              });

              _this.props.setCurrGroup(currGroup);
              _this.props.fetchGroupMsg(_this.props.currGroup._id);
              _this.props.fetchNewsData(_this.props.currGroup._id, 'group', 1, 10);

            case 15:
            case 'end':
              return _context.stop();
          }
        }
      }, _callee, _this2);
    }));
    _this.deleteGroup = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee2() {
      var that, currGroup, res, _currGroup;

      return _regenerator2.default.wrap(function _callee2$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              that = _this;
              currGroup = that.props.currGroup;
              _context2.next = 4;
              return _this.props.deleteGroup({ id: currGroup._id });

            case 4:
              res = _context2.sent;

              if (res.payload.data.errcode) {
                _context2.next = 12;
                break;
              }

              _message3.default.success('删除成功');
              _context2.next = 9;
              return that.props.fetchGroupList();

            case 9:
              _currGroup = that.props.groupList[0] || { group_name: '', group_desc: '' };

              that.setState({ groupList: that.props.groupList });
              that.props.setCurrGroup(_currGroup);

            case 12:
            case 'end':
              return _context2.stop();
          }
        }
      }, _callee2, _this2);
    }));

    _this.showConfirm = function () {
      var that = _this;
      confirm({
        title: '确认删除 ' + that.props.currGroup.group_name + ' 分组吗？',
        content: _react2.default.createElement(
          'div',
          { style: { marginTop: '10px', fontSize: '13px', lineHeight: '25px' } },
          _react2.default.createElement(_alert2.default, {
            message: '\u8B66\u544A\uFF1A\u6B64\u64CD\u4F5C\u975E\u5E38\u5371\u9669,\u4F1A\u5220\u9664\u8BE5\u5206\u7EC4\u4E0B\u9762\u6240\u6709\u9879\u76EE\u548C\u63A5\u53E3\uFF0C\u5E76\u4E14\u65E0\u6CD5\u6062\u590D!',
            type: 'warning'
          }),
          _react2.default.createElement(
            'div',
            { style: { marginTop: '16px' } },
            _react2.default.createElement(
              'p',
              null,
              _react2.default.createElement(
                'b',
                null,
                '\u8BF7\u8F93\u5165\u5206\u7EC4\u540D\u79F0\u786E\u8BA4\u6B64\u64CD\u4F5C:'
              )
            ),
            _react2.default.createElement(_input2.default, { id: 'group_name' })
          )
        ),
        onOk: function onOk() {
          var groupName = (0, _common.trim)(document.getElementById('group_name').value);
          if (that.props.currGroup.group_name !== groupName) {
            _message3.default.error('分组名称有误');
            return new _promise2.default(function (resolve, reject) {
              reject('error');
            });
          } else {
            that.deleteGroup();
          }
        },

        iconType: 'delete',
        onCancel: function onCancel() {}
      });
    };

    _this.state = {
      currGroupDesc: '',
      currGroupName: '',
      showDangerOptions: false,
      custom_field1_name: '',
      custom_field1_enable: false,
      custom_field1_rule: false
    };
    return _this;
  }

  GroupSetting.prototype.initState = function initState(props) {
    this.setState({
      currGroupName: props.currGroup.group_name,
      currGroupDesc: props.currGroup.group_desc,
      custom_field1_name: props.currGroup.custom_field1.name,
      custom_field1_enable: props.currGroup.custom_field1.enable
    });
  };

  // 修改分组名称

  // 修改分组描述


  // 修改自定义字段名称


  // 修改开启状态


  GroupSetting.prototype.componentWillMount = function componentWillMount() {
    // console.log('custom_field1',this.props.currGroup.custom_field1)
    this.initState(this.props);
  };

  // 点击“查看危险操作”按钮


  // 编辑分组信息


  // 删除分组

  // 删除分组的二次确认


  GroupSetting.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
    // 切换分组时，更新分组信息并关闭删除分组操作
    if (this.props.currGroup._id !== nextProps.currGroup._id) {
      this.initState(nextProps);
      this.setState({
        showDangerOptions: false
      });
    }
  };

  GroupSetting.prototype.render = function render() {
    return _react2.default.createElement(
      'div',
      { className: 'm-panel card-panel card-panel-s panel-group' },
      _react2.default.createElement(
        _row2.default,
        { type: 'flex', justify: 'space-around', className: 'row', align: 'middle' },
        _react2.default.createElement(
          _col2.default,
          { span: 4, className: 'label' },
          '\u5206\u7EC4\u540D\uFF1A'
        ),
        _react2.default.createElement(
          _col2.default,
          { span: 20 },
          _react2.default.createElement(_input2.default, {
            size: 'large',
            placeholder: '\u8BF7\u8F93\u5165\u5206\u7EC4\u540D\u79F0',
            value: this.state.currGroupName,
            onChange: this.changeName
          })
        )
      ),
      _react2.default.createElement(
        _row2.default,
        { type: 'flex', justify: 'space-around', className: 'row', align: 'middle' },
        _react2.default.createElement(
          _col2.default,
          { span: 4, className: 'label' },
          '\u7B80\u4ECB\uFF1A'
        ),
        _react2.default.createElement(
          _col2.default,
          { span: 20 },
          _react2.default.createElement(TextArea, {
            size: 'large',
            rows: 3,
            placeholder: '\u8BF7\u8F93\u5165\u5206\u7EC4\u63CF\u8FF0',
            value: this.state.currGroupDesc,
            onChange: this.changeDesc
          })
        )
      ),
      _react2.default.createElement(
        _row2.default,
        { type: 'flex', justify: 'space-around', className: 'row', align: 'middle' },
        _react2.default.createElement(
          _col2.default,
          { span: 4, className: 'label' },
          '\u63A5\u53E3\u81EA\u5B9A\u4E49\u5B57\u6BB5\xA0',
          _react2.default.createElement(
            _tooltip2.default,
            { title: '可以在接口中添加 额外字段 数据' },
            _react2.default.createElement(_icon2.default, { type: 'question-circle-o', style: { width: '10px' } })
          ),
          ' \uFF1A'
        ),
        _react2.default.createElement(
          _col2.default,
          { span: 12, style: { position: 'relative' } },
          _react2.default.createElement(_input2.default, {
            placeholder: '\u8BF7\u8F93\u5165\u81EA\u5B9A\u4E49\u5B57\u6BB5\u540D\u79F0',
            style: { borderColor: this.state.custom_field1_rule ? '#f5222d' : '' },
            value: this.state.custom_field1_name,
            onChange: this.changeCustomName
          }),
          _react2.default.createElement(
            'div',
            {
              className: 'custom-field-rule',
              style: { display: this.state.custom_field1_rule ? 'block' : 'none' }
            },
            '\u81EA\u5B9A\u4E49\u5B57\u6BB5\u540D\u79F0\u4E0D\u80FD\u4E3A\u7A7A'
          )
        ),
        _react2.default.createElement(
          _col2.default,
          { span: 2, className: 'label' },
          '\u5F00\u542F\uFF1A'
        ),
        _react2.default.createElement(
          _col2.default,
          { span: 6 },
          _react2.default.createElement(_switch2.default, {
            checked: this.state.custom_field1_enable,
            checkedChildren: '\u5F00',
            unCheckedChildren: '\u5173',
            onChange: this.changeCustomEnable
          })
        )
      ),
      _react2.default.createElement(
        _row2.default,
        { type: 'flex', justify: 'center', className: 'row save' },
        _react2.default.createElement(
          _col2.default,
          { span: 4, className: 'save-button' },
          _react2.default.createElement(
            _button2.default,
            { className: 'm-btn btn-save', icon: 'save', type: 'primary', onClick: this.editGroup },
            '\u4FDD \u5B58'
          )
        )
      ),
      this.props.curUserRole === 'admin' ? _react2.default.createElement(
        _row2.default,
        { type: 'flex', justify: 'center', className: 'danger-container' },
        _react2.default.createElement(
          _col2.default,
          { span: 24, className: 'title' },
          _react2.default.createElement(
            'h2',
            { className: 'content' },
            _react2.default.createElement(_icon2.default, { type: 'exclamation-circle-o' }),
            ' \u5371\u9669\u64CD\u4F5C'
          ),
          _react2.default.createElement(
            _button2.default,
            { onClick: this.toggleDangerOptions },
            '\u67E5 \u770B',
            _react2.default.createElement(_icon2.default, { type: this.state.showDangerOptions ? 'up' : 'down' })
          )
        ),
        this.state.showDangerOptions ? _react2.default.createElement(
          _card2.default,
          { hoverable: true, className: 'card-danger', style: { width: '100%' } },
          _react2.default.createElement(
            'div',
            { className: 'card-danger-content' },
            _react2.default.createElement(
              'h3',
              null,
              '\u5220\u9664\u5206\u7EC4'
            ),
            _react2.default.createElement(
              'p',
              null,
              '\u5206\u7EC4\u4E00\u65E6\u5220\u9664\uFF0C\u5C06\u65E0\u6CD5\u6062\u590D\u6570\u636E\uFF0C\u8BF7\u614E\u91CD\u64CD\u4F5C\uFF01'
            ),
            _react2.default.createElement(
              'p',
              null,
              '\u53EA\u6709\u8D85\u7EA7\u7BA1\u7406\u5458\u6709\u6743\u9650\u5220\u9664\u5206\u7EC4\u3002'
            )
          ),
          _react2.default.createElement(
            _button2.default,
            { type: 'danger', ghost: true, className: 'card-danger-btn', onClick: this.showConfirm },
            '\u5220\u9664'
          )
        ) : null
      ) : null
    );
  };

  return GroupSetting;
}(_react.PureComponent), _class2.propTypes = {
  currGroup: _propTypes2.default.object,
  curUserRole: _propTypes2.default.string,
  changeGroupMsg: _propTypes2.default.func,
  fetchGroupList: _propTypes2.default.func,
  setCurrGroup: _propTypes2.default.func,
  fetchGroupMsg: _propTypes2.default.func,
  fetchNewsData: _propTypes2.default.func,
  updateGroupList: _propTypes2.default.func,
  deleteGroup: _propTypes2.default.func,
  groupList: _propTypes2.default.array
}, _temp)) || _class);
exports.default = GroupSetting;