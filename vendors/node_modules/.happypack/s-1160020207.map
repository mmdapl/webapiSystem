{"version":3,"sources":["client\\components\\ModalPostman\\MethodsList.js"],"names":["Option","deepEqual","state","JSON","parse","METHODS_LIST","name","type","params","desc","component","MethodsList","props","list","moreFlag","componentDidMount","index","_","findIndex","clickValue","setState","handleParamsChange","value","clickIndex","paramsIndex","newList","paramsInput","handleComponent","item","query","selectComponent","inputComponent","doubleInputComponent","render","click","showList","slice","map","showMore","paddingLeft","Component","propTypes","show","PropTypes","bool","func","string","number","array","e","target","subname","width"],"mappings":"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","file":"MethodsList.js","sourceRoot":"C:/Users/DUOYI/Desktop/api/test/vendors","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Row, Icon, Input, Select, Tooltip } from 'antd';\nimport _ from 'underscore';\nconst Option = Select.Option;\n\n// 深拷贝\nfunction deepEqual(state) {\n  return JSON.parse(JSON.stringify(state));\n}\n\nconst METHODS_LIST = [\n  { name: 'md5', type: false, params: [], desc: 'md5加密' },\n  { name: 'lower', type: false, params: [], desc: '所有字母变成小写' },\n  { name: 'length', type: false, params: [], desc: '数据长度' },\n  { name: 'substr', type: true, component: 'doubleInput', params: [], desc: '截取部分字符串' },\n  { name: 'sha', type: true, component: 'select', params: ['sha1'], desc: 'sha加密' },\n  { name: 'base64', type: false, params: [], desc: 'base64加密' },\n  { name: 'unbase64', type: false, params: [], desc: 'base64解密' },\n  { name: 'concat', type: true, component: 'input', params: [], desc: '连接字符串' },\n  { name: 'lconcat', type: true, component: 'input', params: [], desc: '左连接' },\n  { name: 'upper', type: false, desc: '所有字母变成大写' },\n  { name: 'number', type: false, desc: '字符串转换为数字类型' }\n];\n\nclass MethodsList extends Component {\n  static propTypes = {\n    show: PropTypes.bool,\n    click: PropTypes.func,\n    clickValue: PropTypes.string,\n    paramsInput: PropTypes.func,\n    clickIndex: PropTypes.number,\n    params: PropTypes.array\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      list: METHODS_LIST,\n      moreFlag: true\n    };\n  }\n\n  showMore = () => {\n    this.setState({\n      moreFlag: false\n    });\n  };\n\n  componentDidMount() {\n    var index = _.findIndex(METHODS_LIST, { name: this.props.clickValue });\n\n    let moreFlag = index > 3 ? false : true;\n    this.setState({\n      moreFlag\n    });\n  }\n\n  inputComponent = props => {\n    let clickIndex = props.clickIndex;\n    let paramsIndex = props.paramsIndex;\n    let params = props.params;\n    return (\n      <Input\n        size=\"small\"\n        placeholder=\"请输入参数\"\n        value={params[0]}\n        onChange={e => this.handleParamsChange(e.target.value, clickIndex, paramsIndex, 0)}\n      />\n    );\n  };\n\n  doubleInputComponent = props => {\n    let clickIndex = props.clickIndex;\n    let paramsIndex = props.paramsIndex;\n    let params = props.params;\n\n    return (\n      <div>\n        <Input\n          size=\"small\"\n          placeholder=\"start\"\n          value={params[0]}\n          onChange={e => this.handleParamsChange(e.target.value, clickIndex, paramsIndex, 0)}\n        />\n        <Input\n          size=\"small\"\n          placeholder=\"length\"\n          value={params[1]}\n          onChange={e => this.handleParamsChange(e.target.value, clickIndex, paramsIndex, 1)}\n        />\n      </div>\n    );\n  };\n\n  selectComponent = props => {\n    const subname = ['sha1', 'sha224', 'sha256', 'sha384', 'sha512'];\n    let clickIndex = props.clickIndex;\n    let paramsIndex = props.paramsIndex;\n    let params = props.params;\n    return (\n      <Select\n        value={params[0] || 'sha1'}\n        placeholder=\"请选择\"\n        style={{ width: 150 }}\n        size=\"small\"\n        onChange={e => this.handleParamsChange(e, clickIndex, paramsIndex, 0)}\n      >\n        {subname.map((item, index) => {\n          return (\n            <Option value={item} key={index}>\n              {item}\n            </Option>\n          );\n        })}\n      </Select>\n    );\n  };\n\n  // 处理参数输入\n  handleParamsChange(value, clickIndex, paramsIndex, index) {\n    let newList = deepEqual(this.state.list);\n    newList[paramsIndex].params[index] = value;\n    this.setState({\n      list: newList\n    });\n    this.props.paramsInput(value, clickIndex, index);\n  }\n\n  // 组件选择\n  handleComponent(item, clickIndex, index, params) {\n    let query = {\n      clickIndex: clickIndex,\n      paramsIndex: index,\n      params\n    };\n    switch (item.component) {\n      case 'select':\n        return this.selectComponent(query);\n      case 'input':\n        return this.inputComponent(query);\n      case 'doubleInput':\n        return this.doubleInputComponent(query);\n      default:\n        break;\n    }\n  }\n\n  render() {\n    const { list, moreFlag } = this.state;\n    const { click, clickValue, clickIndex, params } = this.props;\n    let showList = moreFlag ? list.slice(0, 4) : list;\n\n    return (\n      <div className=\"modal-postman-form-method\">\n        <h3 className=\"methods-title title\">方法</h3>\n        {showList.map((item, index) => {\n          return (\n            <Row\n              key={index}\n              type=\"flex\"\n              align=\"middle\"\n              className={'row methods-row ' + (item.name === clickValue ? 'checked' : '')}\n              onClick={() => click(item.name, showList[index].params)}\n            >\n              <Tooltip title={item.desc}>\n                <span>{item.name}</span>\n              </Tooltip>\n              <span className=\"input-component\">\n                {item.type &&\n                  this.handleComponent(\n                    item,\n                    clickIndex,\n                    index,\n                    item.name === clickValue ? params : []\n                  )}\n              </span>\n            </Row>\n          );\n        })}\n        {moreFlag && (\n          <div className=\"show-more\" onClick={this.showMore}>\n            <Icon type=\"down\" />\n            <span style={{ paddingLeft: '4px' }}>更多</span>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default MethodsList;\n"]}